{"filePath":"examples/source/1.components/amp-access.html","source":"<!-- ## Introduction\n  The [amp-access](/content/amp-dev/documentation/components/reference/amp-access-v0.1.md) component adds support for authentication and authorization, allowing you to limit access to parts of your AMP pages as well as display customized content for the logged in user.  It also allows the implementation of view counting, paywalls and subscriptions. For sample `amp-access` server endpoints, see the [amp-publisher-sample](https://github.com/ampproject/amp-publisher-sample) project.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>amp-access</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <!-- ## Setup -->\n  <!-- Import the `amp-access` component in the header. -->\n  <script async custom-element=\"amp-access\" src=\"https://cdn.ampproject.org/v0/amp-access-0.1.js\"></script>\n  <!-- `amp-access` requires `amp-analytics` to be imported as well. -->\n  <script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n\n  <!-- Optionally, use the [`amp-mustache`](/content/amp-dev/documentation/components/reference/amp-mustache-v0.2.md) component to show text with values replaced from the authorization response -->\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n\n  <!-- Add the configuration for the `authorization` and the `login` endpoints. We provide two login endpoints, one for sign-in and one for sign-out. It is also possible to create a fallback response that will be used if the authorization fails with the `authorizationFallbackResponse` attribute.\n\n    The [Pingback Endpoint](/content/amp-dev/documentation/components/reference/amp-access.md#pingback-endpoint) is called when a user views the document, which can be used to update metering information. This functionality is not used in this sample.\n  -->\n  <script id=\"amp-access\" type=\"application/json\">\n    {\n        \"authorization\": \"/documentation/examples/api/amp-access/authorization?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n        \"pingback\": \"/documentation/examples/api/amp-access/pingback?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n        \"login\": {\n          \"sign-in\": \"/documentation/examples/api/amp-access/login?rid=READER_ID&url=CANONICAL_URL\",\n          \"sign-out\": \"/documentation/examples/api/amp-access/logout\"\n        },\n        \"authorizationFallbackResponse\": {\n            \"error\": true,\n            \"loggedIn\": false,\n            \"powerUser\": false\n        }\n    }\n  </script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-access/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n</head>\n<body>\n\n  <!-- ## Controlling visibility -->\n  <!-- This section is visible to all users. No special markup is needed in this case.-->\n  <section>\n    Welcome to the website! This section is visible to all.\n  </section>\n\n   <!-- Use the `amp-access` attribute to control the visibility of each component. The expression must evaluate to a boolean value. If it evaluates to `TRUE`, the section will be shown.\n\n    We use the `loggedIn` property from the server's response to determine whether the user is logged in.\n  -->\n  <section amp-access=\"loggedIn\">\n    This section is only visible if you're logged in. Welcome back!\n  </section>\n\n  <!-- The response from the server can be used to convey more information about the logged in user. In this case, we differentiate between users who have the `powerUser` property set in addition to being logged in.\n  -->\n  <section amp-access=\"loggedIn AND powerUser\">\n    This section is only visible if you're logged in <em>and</em> classified as \"power user\".\n  </section>\n\n  <!-- If the `loggedIn` property has the default value of false, we can assume that the user is not logged in.\n   -->\n  <section amp-access=\"NOT loggedIn\">\n    This section is only visible if you're not logged in.\n  </section>\n\n  <!-- Combine `amp-access` and `amp-mustache` to show information returned from the authorization request. In this case we show the email returned in the authentification response.\n  -->\n  <section amp-access=\"loggedIn\">\n    <template amp-access-template type=\"amp-mustache\">\n      <h3>Hello {{email}}!</h3>\n\n      {{#powerUser}}\n      <p>You are a power user.</p>\n      {{/powerUser}}\n    </template>\n  </section>\n\n  <!-- ## Login  -->\n  <!-- Use `on=\"tap:amp-access.login-sign-in\"` to open the login dialog when the element is clicked. This simply opens a popup window that takes the user to the URL defined inside the configuration at the top. `amp-access-hide` will default the component to be hidden and enabled later if the `amp-access` expression is evaluated to `TRUE` -->\n  <button amp-access=\"NOT loggedIn\" amp-access-hide on=\"tap:amp-access.login-sign-in\">\n    Login\n  </button>\n\n  <!-- ## Logout  -->\n  <!-- The logout link should only be shown for logged in subscribers. We use a trick here: the logout is a login action that directly redirects back to the original URL. This has the advantage that the page updates without being reloaded.\n  -->\n  <button amp-access=\"loggedIn\" amp-access-hide on=\"tap:amp-access.login-sign-out\">\n    Logout\n  </button>\n  <!-- Check out the [official amp-access sample](https://rocky-sierra-1919.herokuapp.com/) for demos of first-click-free and view counting. -->\n</body></html>","document":{"sections":[{"doc_":"## Introduction\n\nThe [amp-access](/content/amp-dev/documentation/components/reference/amp-access-v0.1.md) component adds support for authentication and authorization, allowing you to limit access to parts of your AMP pages as well as display customized content for the logged in user.  It also allows the implementation of view counting, paywalls and subscriptions. For sample `amp-access` server endpoints, see the [amp-publisher-sample](https://github.com/ampproject/amp-publisher-sample) project.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\"> The <a href=\"/content/amp-dev/documentation/components/reference/amp-access-v0.1.md\">amp-access</a> component adds support for authentication and authorization, allowing you to limit access to parts of your AMP pages as well as display customized content for the logged in user.  It also allows the implementation of view counting, paywalls and subscriptions. For sample <code>amp-access</code> server endpoints, see the <a href=\"https://github.com/ampproject/amp-publisher-sample\">amp-publisher-sample</a> project.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Introduction\n The [amp-access](/content/amp-dev/documentation/components/reference/amp-access-v0.1.md) component adds support for authentication and authorization, allowing you to limit access to parts of your AMP pages as well as display customized content for the logged in user.  It also allows the implementation of view counting, paywalls and subscriptions. For sample `amp-access` server endpoints, see the [amp-publisher-sample](https://github.com/ampproject/amp-publisher-sample) project.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>amp-access</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"Import the `amp-access` component in the header. \n","code":"<script async custom-element=\"amp-access\" src=\"https://cdn.ampproject.org/v0/amp-access-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Import the `amp-access` component in the header. \n"},{"doc_":"`amp-access` requires `amp-analytics` to be imported as well. \n","code":"<script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-access` requires `amp-analytics` to be imported as well. \n"},{"doc_":"","code":"\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Optionally, use the [`amp-mustache`](/content/amp-dev/documentation/components/reference/amp-mustache-v0.2.md) component to show text with values replaced from the authorization response \n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Optionally, use the [`amp-mustache`](/content/amp-dev/documentation/components/reference/amp-mustache-v0.2.md) component to show text with values replaced from the authorization response \n"},{"doc_":"","code":"\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Add the configuration for the `authorization` and the `login` endpoints. We provide two login endpoints, one for sign-in and one for sign-out. It is also possible to create a fallback response that will be used if the authorization fails with the `authorizationFallbackResponse` attribute.\n\nThe [Pingback Endpoint](/content/amp-dev/documentation/components/reference/amp-access.md#pingback-endpoint) is called when a user views the document, which can be used to update metering information. This functionality is not used in this sample.\n\n","code":"<script id=\"amp-access\" type=\"application/json\">\n  {\n      \"authorization\": \"/documentation/examples/api/amp-access/authorization?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n      \"pingback\": \"/documentation/examples/api/amp-access/pingback?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n      \"login\": {\n        \"sign-in\": \"/documentation/examples/api/amp-access/login?rid=READER_ID&url=CANONICAL_URL\",\n        \"sign-out\": \"/documentation/examples/api/amp-access/logout\"\n      },\n      \"authorizationFallbackResponse\": {\n          \"error\": true,\n          \"loggedIn\": false,\n          \"powerUser\": false\n      }\n  }\n</script>\n","preview":"","inBody":false,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Add the configuration for the `authorization` and the `login` endpoints. We provide two login endpoints, one for sign-in and one for sign-out. It is also possible to create a fallback response that will be used if the authorization fails with the `authorizationFallbackResponse` attribute.\n\n The [Pingback Endpoint](/content/amp-dev/documentation/components/reference/amp-access.md#pingback-endpoint) is called when a user views the document, which can be used to update metering information. This functionality is not used in this sample.\n\n"},{"doc_":"","code":"<link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-access/index.html\">\n<meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n</head>\n<body>\n\n","preview":"\n","inBody":false,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Controlling visibility\n","code":"","preview":"","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"controlling-visibility","name":"Controlling visibility"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Controlling visibility\n"},{"doc_":"This section is visible to all users. No special markup is needed in this case.\n","code":"<section>\n  Welcome to the website! This section is visible to all.\n</section>\n","preview":"  <section>\n    Welcome to the website! This section is visible to all.\n  </section>\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"This section is visible to all users. No special markup is needed in this case.\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Use the `amp-access` attribute to control the visibility of each component. The expression must evaluate to a boolean value. If it evaluates to `TRUE`, the section will be shown.\n\nWe use the `loggedIn` property from the server's response to determine whether the user is logged in.\n\n","code":"<section amp-access=\"loggedIn\">\n  This section is only visible if you're logged in. Welcome back!\n</section>\n","preview":"  <section amp-access=\"loggedIn\">\n    This section is only visible if you're logged in. Welcome back!\n  </section>\n","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Use the `amp-access` attribute to control the visibility of each component. The expression must evaluate to a boolean value. If it evaluates to `TRUE`, the section will be shown.\n\n We use the `loggedIn` property from the server's response to determine whether the user is logged in.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":14,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"The response from the server can be used to convey more information about the logged in user. In this case, we differentiate between users who have the `powerUser` property set in addition to being logged in.\n\n","code":"<section amp-access=\"loggedIn AND powerUser\">\n  This section is only visible if you're logged in <em>and</em> classified as \"power user\".\n</section>\n","preview":"  <section amp-access=\"loggedIn AND powerUser\">\n    This section is only visible if you're logged in <em>and</em> classified as \"power user\".\n  </section>\n","inBody":true,"id":15,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The response from the server can be used to convey more information about the logged in user. In this case, we differentiate between users who have the `powerUser` property set in addition to being logged in.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":16,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"If the `loggedIn` property has the default value of false, we can assume that the user is not logged in.\n\n","code":"<section amp-access=\"NOT loggedIn\">\n  This section is only visible if you're not logged in.\n</section>\n","preview":"  <section amp-access=\"NOT loggedIn\">\n    This section is only visible if you're not logged in.\n  </section>\n","inBody":true,"id":17,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"If the `loggedIn` property has the default value of false, we can assume that the user is not logged in.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":18,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Combine `amp-access` and `amp-mustache` to show information returned from the authorization request. In this case we show the email returned in the authentification response.\n\n","code":"<section amp-access=\"loggedIn\">\n  <template amp-access-template\n    type=\"amp-mustache\">\n    <h3>Hello {{email}}!</h3>\n\n    {{#powerUser}}\n      <p>You are a power user.</p>\n    {{/powerUser}}\n  </template>\n</section>\n","preview":"  <section amp-access=\"loggedIn\">\n    <template amp-access-template\n      type=\"amp-mustache\">\n      <h3>Hello {{email}}!</h3>\n\n      {{#powerUser}}\n        <p>You are a power user.</p>\n      {{/powerUser}}\n    </template>\n  </section>\n","inBody":true,"id":19,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Combine `amp-access` and `amp-mustache` to show information returned from the authorization request. In this case we show the email returned in the authentification response.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":20,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Login\n","code":"","preview":"","inBody":true,"id":21,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"login","name":"Login"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Login\n"},{"doc_":"Use `on=\"tap:amp-access.login-sign-in\"` to open the login dialog when the element is clicked. This simply opens a popup window that takes the user to the URL defined inside the configuration at the top. `amp-access-hide` will default the component to be hidden and enabled later if the `amp-access` expression is evaluated to `TRUE` \n","code":"<button amp-access=\"NOT loggedIn\"\n  amp-access-hide\n  on=\"tap:amp-access.login-sign-in\">\n  Login\n</button>\n","preview":"  <button amp-access=\"NOT loggedIn\"\n    amp-access-hide\n    on=\"tap:amp-access.login-sign-in\">\n    Login\n  </button>\n","inBody":true,"id":22,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Use `on=\"tap:amp-access.login-sign-in\"` to open the login dialog when the element is clicked. This simply opens a popup window that takes the user to the URL defined inside the configuration at the top. `amp-access-hide` will default the component to be hidden and enabled later if the `amp-access` expression is evaluated to `TRUE` \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":23,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Logout\n","code":"","preview":"","inBody":true,"id":24,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"logout","name":"Logout"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Logout\n"},{"doc_":"The logout link should only be shown for logged in subscribers. We use a trick here: the logout is a login action that directly redirects back to the original URL. This has the advantage that the page updates without being reloaded.\n\n","code":"<button amp-access=\"loggedIn\"\n  amp-access-hide\n  on=\"tap:amp-access.login-sign-out\">\n  Logout\n</button>\n","preview":"  <button amp-access=\"loggedIn\"\n    amp-access-hide\n    on=\"tap:amp-access.login-sign-out\">\n    Logout\n  </button>\n","inBody":true,"id":25,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The logout link should only be shown for logged in subscribers. We use a trick here: the logout is a login action that directly redirects back to the original URL. This has the advantage that the page updates without being reloaded.\n\n"},{"doc_":"Check out the [official amp-access sample](https://rocky-sierra-1919.herokuapp.com/) for demos of first-click-free and view counting. \n","code":"","preview":"","inBody":true,"id":26,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Check out the [official amp-access sample](https://rocky-sierra-1919.herokuapp.com/) for demos of first-click-free and view counting. \n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":27,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <title>amp-access</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <script async custom-element=\"amp-access\" src=\"https://cdn.ampproject.org/v0/amp-access-0.1.js\"></script>\n  <script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n\n  <script id=\"amp-access\" type=\"application/json\">\n    {\n        \"authorization\": \"/documentation/examples/api/amp-access/authorization?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n        \"pingback\": \"/documentation/examples/api/amp-access/pingback?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n        \"login\": {\n          \"sign-in\": \"/documentation/examples/api/amp-access/login?rid=READER_ID&url=CANONICAL_URL\",\n          \"sign-out\": \"/documentation/examples/api/amp-access/logout\"\n        },\n        \"authorizationFallbackResponse\": {\n            \"error\": true,\n            \"loggedIn\": false,\n            \"powerUser\": false\n        }\n    }\n  </script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-access/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"","title":"amp-access","metadata":{"author":"andreban"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"The amp-access component adds support for authentication and authorization, allowing you to limit access to parts of your AMP pages as well as display customized content for the logged in user."},"route":"/documentation/examples/components/amp-access/index.html"}