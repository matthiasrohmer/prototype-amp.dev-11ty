{"filePath":"examples/source/1.components/amp-lightbox.html","source":"<!--\n  ## Introduction\n\n  The [`amp-lightbox`](/amp-dev/documentation/components/reference/amp-lightbox-v0.1.md) component allows for a “lightbox” or similar experience - where upon user interaction a component expands to fill the viewport, until it is closed again by the user.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>amp-lightbox</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <!-- ## Setup -->\n  <!-- Import the `amp-lightbox` component in the header -->\n  <script async custom-element=\"amp-lightbox\" src=\"https://cdn.ampproject.org/v0/amp-lightbox-0.1.js\"></script>\n  <!-- You can combine the lightbox component with `amp-bind`. -->\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-lightbox/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n  <style amp-custom>\n    .lightbox {\n      background: rgba(0,0,0,0.8);\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .lightbox h1 {\n      color: white;\n    }\n  </style>\n</head>\n<body>\n  <!-- ## Basic usage -->\n  <!--\n    The `amp-lightbox` component defines the child elements that will be displayed in a full-viewport overlay.\n    To close the lightbox via click or tap use the `on` attribute on one or more elements inside the lightbox. In this example the user can click anywhere in the lightbox to close it.\n\n    The lighbox is shown when the user taps or clicks on an element with `on` attribute that targets the id of an `amp-lightbox` element.\n  -->\n  <div>\n    <amp-lightbox id=\"my-lightbox\" layout=\"nodisplay\">\n      <div class=\"lightbox\" on=\"tap:my-lightbox.close\" role=\"button\" tabindex=\"0\">\n        <h1>Hello World!</h1>\n      </div>\n    </amp-lightbox>\n    <button on=\"tap:my-lightbox\">\n      Open lightbox\n    </button>\n  </div>\n\n  <!--\n    For showing images in a lightbox, AMP also features the [amp-image-lightbox](/documentation/components/reference/amp-image-lightbox.html) component, which doesn't need the image to specified twice.\n  -->\n\n  <!-- ## Combination with amp-bind -->\n  <!-- `amp-lightbox` can be opened as a result of `amp-bind` evaluations by binding a boolean value to the `open` attribute. Note that we're also listening to the `lightboxClose` event to reset the state of the variable. -->\n  <div>\n    <amp-lightbox id=\"my-bindable-lightbox\" [open]=\"showLightbox\" layout=\"nodisplay\" on=\"lightboxClose:AMP.setState({showLightbox: false})\">\n      <div class=\"lightbox\" role=\"button\" tabindex=\"0\" on=\"tap:my-bindable-lightbox.close\">\n        <h1>Hello World!</h1>\n      </div>\n    </amp-lightbox>\n    <button on=\"tap:AMP.setState({showLightbox: true})\">\n      Open lightbox\n    </button>\n  </div>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThe [`amp-lightbox`](/amp-dev/documentation/components/reference/amp-lightbox-v0.1.md) component allows for a “lightbox” or similar experience - where upon user interaction a component expands to fill the viewport, until it is closed again by the user.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">The <a href=\"/amp-dev/documentation/components/reference/amp-lightbox-v0.1.md\"><code>amp-lightbox</code></a> component allows for a “lightbox” or similar experience - where upon user interaction a component expands to fill the viewport, until it is closed again by the user.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThe [`amp-lightbox`](/amp-dev/documentation/components/reference/amp-lightbox-v0.1.md) component allows for a “lightbox” or similar experience - where upon user interaction a component expands to fill the viewport, until it is closed again by the user.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>amp-lightbox</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"Import the `amp-lightbox` component in the header \n","code":"<script async custom-element=\"amp-lightbox\" src=\"https://cdn.ampproject.org/v0/amp-lightbox-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Import the `amp-lightbox` component in the header \n"},{"doc_":"You can combine the lightbox component with `amp-bind`. \n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"You can combine the lightbox component with `amp-bind`. \n"},{"doc_":"","code":"<link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-lightbox/index.html\">\n<meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n<style amp-custom>\n  .lightbox {\n    background: rgba(0,0,0,0.8);\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .lightbox h1 {\n    color: white;\n  }\n</style>\n</head>\n<body>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Basic usage\n","code":"","preview":"","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"basic-usage","name":"Basic usage"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Basic usage\n"},{"doc_":"\nThe `amp-lightbox` component defines the child elements that will be displayed in a full-viewport overlay.\nTo close the lightbox via click or tap use the `on` attribute on one or more elements inside the lightbox. In this example the user can click anywhere in the lightbox to close it.\n\nThe lighbox is shown when the user taps or clicks on an element with `on` attribute that targets the id of an `amp-lightbox` element.\n\n","code":"<amp-lightbox id=\"my-lightbox\"\n  layout=\"nodisplay\">\n  <div class=\"lightbox\"\n    on=\"tap:my-lightbox.close\"\n    role=\"button\"\n    tabindex=\"0\">\n    <h1>Hello World!</h1>\n  </div>\n</amp-lightbox>\n<button on=\"tap:my-lightbox\">\n  Open lightbox\n</button>","preview":"  <div>\n    <amp-lightbox id=\"my-lightbox\"\n      layout=\"nodisplay\">\n      <div class=\"lightbox\"\n        on=\"tap:my-lightbox.close\"\n        role=\"button\"\n        tabindex=\"0\">\n        <h1>Hello World!</h1>\n      </div>\n    </amp-lightbox>\n    <button on=\"tap:my-lightbox\">\n      Open lightbox\n    </button>\n  </div>\n","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThe `amp-lightbox` component defines the child elements that will be displayed in a full-viewport overlay.\nTo close the lightbox via click or tap use the `on` attribute on one or more elements inside the lightbox. In this example the user can click anywhere in the lightbox to close it.\n\nThe lighbox is shown when the user taps or clicks on an element with `on` attribute that targets the id of an `amp-lightbox` element.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\nFor showing images in a lightbox, AMP also features the [amp-image-lightbox](/documentation/components/reference/amp-image-lightbox.html) component, which doesn't need the image to specified twice.\n\n","code":"\n","preview":"\n","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nFor showing images in a lightbox, AMP also features the [amp-image-lightbox](/documentation/components/reference/amp-image-lightbox.html) component, which doesn't need the image to specified twice.\n\n"},{"doc_":"## Combination with amp-bind\n","code":"","preview":"","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"combination-with-amp-bind","name":"Combination with amp-bind"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Combination with amp-bind\n"},{"doc_":"`amp-lightbox` can be opened as a result of `amp-bind` evaluations by binding a boolean value to the `open` attribute. Note that we're also listening to the `lightboxClose` event to reset the state of the variable. \n","code":"<amp-lightbox id=\"my-bindable-lightbox\"\n  [open]=\"showLightbox\"\n  layout=\"nodisplay\"\n  on=\"lightboxClose:AMP.setState({showLightbox: false})\">\n  <div class=\"lightbox\"\n    role=\"button\"\n    tabindex=\"0\"\n    on=\"tap:my-bindable-lightbox.close\">\n    <h1>Hello World!</h1>\n  </div>\n</amp-lightbox>\n<button on=\"tap:AMP.setState({showLightbox: true})\">\n  Open lightbox\n</button>","preview":"  <div>\n    <amp-lightbox id=\"my-bindable-lightbox\"\n      [open]=\"showLightbox\"\n      layout=\"nodisplay\"\n      on=\"lightboxClose:AMP.setState({showLightbox: false})\">\n      <div class=\"lightbox\"\n        role=\"button\"\n        tabindex=\"0\"\n        on=\"tap:my-bindable-lightbox.close\">\n        <h1>Hello World!</h1>\n      </div>\n    </amp-lightbox>\n    <button on=\"tap:AMP.setState({showLightbox: true})\">\n      Open lightbox\n    </button>\n  </div>\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-lightbox` can be opened as a result of `amp-bind` evaluations by binding a boolean value to the `open` attribute. Note that we're also listening to the `lightboxClose` event to reset the state of the variable. \n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":12,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <title>amp-lightbox</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-lightbox\" src=\"https://cdn.ampproject.org/v0/amp-lightbox-0.1.js\"></script>\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-lightbox/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"    .lightbox {\n      background: rgba(0,0,0,0.8);\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .lightbox h1 {\n      color: white;\n    }\n","title":"amp-lightbox","metadata":{"author":"sebastianbenz"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"The amp-lightbox component allows for a “lightbox” or similar experience - where upon user interaction a component expands to fill the viewport, until it is closed again by the user."},"route":"/documentation/examples/components/amp-lightbox/index.html"}