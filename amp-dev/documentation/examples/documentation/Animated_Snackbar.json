{"filePath":"examples/source/visual-effects/Animated_Snackbar.html","source":"<!--\n  ## Introduction\n\n  [Snackbars](https://material.io/guidelines/components/snackbars-toasts.html) provide brief feedback about an operation through a message at the bottom of the screen.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>Animated Snackbar</title>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/visual-effects/animated_snackbar/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <!-- ## Setup -->\n  <!-- We use `amp-bind` to trigger the Snackbar...  -->\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <!-- ... and `amp-animation` to show and hide the Snackbar.  -->\n  <script async custom-element=\"amp-animation\" src=\"https://cdn.ampproject.org/v0/amp-animation-0.1.js\"></script>\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n<style amp-custom>\n    .trigger {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .trigger > * {\n      padding: 0.5rem;\n      margin: 0.5rem;\n    }\n    .snackbar {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      width: 100%;\n      height: 48px;\n      margin: 0 auto;\n      padding: 14px 24px;\n      max-width: 568px;\n      background: #323232;\n      color: white;\n      border-radius: 2px;\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      transform: translateY(100%);\n      z-index: 1000;\n    }\n\n  </style>\n</head>\n<body>\n\n  <!-- ## The animation -->\n  <!--\n    We want to show a snackbar that disappears after a few seconds. This could be easily accomplished by adding a CSS class using `amp-bind` to show the snackbar and then using CSS animations to hide the snackbar after a few seconds. However, with this approach it's not possible to trigger the snackbar multiple times (the newly added CSS class won't dissappear).\n\n    We can solve this problem by using the [`amp-animation`](content/amp-dev/documentation/components/reference/amp-animation)  extension, which makes it possible to execute animations repeatedly. We define an animation that will slide-in the snackbar and then hide it after a few seconds using the `offset` attribute to time the different keyframes.\n  -->\n  <amp-animation id=\"snackbarSlideIn\" layout=\"nodisplay\">\n    <script type=\"application/json\">\n      [{\n        \"duration\": \"3s\",\n        \"fill\": \"both\",\n        \"easing\": \"ease-out\",\n        \"iterations\": \"1\",\n        \"selector\": \".snackbar\",\n        \"keyframes\": [{\n            \"transform\": \"translateY(100%)\"\n          },\n          {\n            \"transform\": \"translateY(0)\", \"offset\": 0.1\n          },\n          {\n            \"transform\": \"translateY(0)\", \"offset\": 0.9\n          },\n\n          {\n            \"transform\": \"translateY(100%)\"\n          }\n        ]\n      }\n      ]\n    </script>\n  </amp-animation>\n\n  <!-- ## The snackbar -->\n  <!-- Our snackbar is a `div` containing the message. It's going to disappear after a few seconds so we don't provide any additional buttons to manually hide the snackbar. The text message is bound to an `amp-state` variable to make it's content configurable. This is not needed if the snackbar should always show the same message. -->\n  <div class=\"snackbar\" [text]=\"message\">\n    Hello World\n  </div>\n\n  <!-- ## The trigger -->\n  <!-- The snackbar animation is triggered via the `restart` action: `on=\"tap:snackbarSlideIn.restart\"`. We use the `restart` action to make it possible to override an already active animation. The input field simply updates the `amp-state` variable containing the snackbar's message. -->\n  <div class=\"trigger\">\n    <input on=\"input-debounced:AMP.setState({message: event.value})\" value=\"Hello World\">\n    <button on=\"tap:snackbarSlideIn.restart\">\n      Show Snackbar\n    </button>\n  </div>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\n[Snackbars](https://material.io/guidelines/components/snackbars-toasts.html) provide brief feedback about an operation through a message at the bottom of the screen.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\"><a href=\"https://material.io/guidelines/components/snackbars-toasts.html\">Snackbars</a> provide brief feedback about an operation through a message at the bottom of the screen.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\n[Snackbars](https://material.io/guidelines/components/snackbars-toasts.html) provide brief feedback about an operation through a message at the bottom of the screen.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>Animated Snackbar</title>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/visual-effects/animated_snackbar/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"We use `amp-bind` to trigger the Snackbar...  \n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"We use `amp-bind` to trigger the Snackbar...  \n"},{"doc_":"... and `amp-animation` to show and hide the Snackbar.  \n","code":"<script async custom-element=\"amp-animation\" src=\"https://cdn.ampproject.org/v0/amp-animation-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"... and `amp-animation` to show and hide the Snackbar.  \n"},{"doc_":"","code":"<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n<style amp-custom>\n  .trigger {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .trigger > * {\n    padding: 0.5rem;\n    margin: 0.5rem;\n  }\n  .snackbar {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 48px;\n    margin: 0 auto;\n    padding: 14px 24px;\n    max-width: 568px;\n    background: #323232;\n    color: white;\n    border-radius: 2px;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    transform: translateY(100%);\n    z-index: 1000;\n  }\n\n</style>\n</head>\n<body>\n\n","preview":"\n","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## The animation\n","code":"","preview":"","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"the-animation","name":"The animation"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## The animation\n"},{"doc_":"\nWe want to show a snackbar that disappears after a few seconds. This could be easily accomplished by adding a CSS class using `amp-bind` to show the snackbar and then using CSS animations to hide the snackbar after a few seconds. However, with this approach it's not possible to trigger the snackbar multiple times (the newly added CSS class won't dissappear).\n\nWe can solve this problem by using the [`amp-animation`](content/amp-dev/documentation/components/reference/amp-animation)  extension, which makes it possible to execute animations repeatedly. We define an animation that will slide-in the snackbar and then hide it after a few seconds using the `offset` attribute to time the different keyframes.\n\n","code":"<amp-animation id=\"snackbarSlideIn\"\n  layout=\"nodisplay\">\n  <script type=\"application/json\">\n    [{\n      \"duration\": \"3s\",\n      \"fill\": \"both\",\n      \"easing\": \"ease-out\",\n      \"iterations\": \"1\",\n      \"selector\": \".snackbar\",\n      \"keyframes\": [{\n          \"transform\": \"translateY(100%)\"\n        },\n        {\n          \"transform\": \"translateY(0)\",\n          \"offset\": 0.1\n        },\n        {\n          \"transform\": \"translateY(0)\",\n          \"offset\": 0.9\n        },\n\n        {\n          \"transform\": \"translateY(100%)\"\n        }\n      ]\n    }]\n  </script>\n</amp-animation>\n","preview":"  <amp-animation id=\"snackbarSlideIn\"\n    layout=\"nodisplay\">\n    <script type=\"application/json\">\n      [{\n        \"duration\": \"3s\",\n        \"fill\": \"both\",\n        \"easing\": \"ease-out\",\n        \"iterations\": \"1\",\n        \"selector\": \".snackbar\",\n        \"keyframes\": [{\n            \"transform\": \"translateY(100%)\"\n          },\n          {\n            \"transform\": \"translateY(0)\",\n            \"offset\": 0.1\n          },\n          {\n            \"transform\": \"translateY(0)\",\n            \"offset\": 0.9\n          },\n\n          {\n            \"transform\": \"translateY(100%)\"\n          }\n        ]\n      }]\n    </script>\n  </amp-animation>\n","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWe want to show a snackbar that disappears after a few seconds. This could be easily accomplished by adding a CSS class using `amp-bind` to show the snackbar and then using CSS animations to hide the snackbar after a few seconds. However, with this approach it's not possible to trigger the snackbar multiple times (the newly added CSS class won't dissappear).\n\nWe can solve this problem by using the [`amp-animation`](content/amp-dev/documentation/components/reference/amp-animation)  extension, which makes it possible to execute animations repeatedly. We define an animation that will slide-in the snackbar and then hide it after a few seconds using the `offset` attribute to time the different keyframes.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## The snackbar\n","code":"","preview":"","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"the-snackbar","name":"The snackbar"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## The snackbar\n"},{"doc_":"Our snackbar is a `div` containing the message. It's going to disappear after a few seconds so we don't provide any additional buttons to manually hide the snackbar. The text message is bound to an `amp-state` variable to make it's content configurable. This is not needed if the snackbar should always show the same message. \n","code":"<div class=\"snackbar\"\n  [text]=\"message\">\n  Hello World\n</div>\n","preview":"  <div class=\"snackbar\"\n    [text]=\"message\">\n    Hello World\n  </div>\n","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Our snackbar is a `div` containing the message. It's going to disappear after a few seconds so we don't provide any additional buttons to manually hide the snackbar. The text message is bound to an `amp-state` variable to make it's content configurable. This is not needed if the snackbar should always show the same message. \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## The trigger\n","code":"","preview":"","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"the-trigger","name":"The trigger"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## The trigger\n"},{"doc_":"The snackbar animation is triggered via the `restart` action: `on=\"tap:snackbarSlideIn.restart\"`. We use the `restart` action to make it possible to override an already active animation. The input field simply updates the `amp-state` variable containing the snackbar's message. \n","code":"<div class=\"trigger\">\n  <input on=\"input-debounced:AMP.setState({message: event.value})\"\n    value=\"Hello World\">\n  <button on=\"tap:snackbarSlideIn.restart\">\n    Show Snackbar\n  </button>\n</div>\n","preview":"  <div class=\"trigger\">\n    <input on=\"input-debounced:AMP.setState({message: event.value})\"\n      value=\"Hello World\">\n    <button on=\"tap:snackbarSlideIn.restart\">\n      Show Snackbar\n    </button>\n  </div>\n","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The snackbar animation is triggered via the `restart` action: `on=\"tap:snackbarSlideIn.restart\"`. We use the `restart` action to make it possible to override an already active animation. The input field simply updates the `amp-state` variable containing the snackbar's message. \n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":14,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <title>Animated Snackbar</title>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/visual-effects/animated_snackbar/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <script async custom-element=\"amp-animation\" src=\"https://cdn.ampproject.org/v0/amp-animation-0.1.js\"></script>\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"    .trigger {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .trigger > * {\n      padding: 0.5rem;\n      margin: 0.5rem;\n    }\n    .snackbar {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      width: 100%;\n      height: 48px;\n      margin: 0 auto;\n      padding: 14px 24px;\n      max-width: 568px;\n      background: #323232;\n      color: white;\n      border-radius: 2px;\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      transform: translateY(100%);\n      z-index: 1000;\n    }\n\n","title":"Animated Snackbar","metadata":{"preview":"default","teaserImage":"/static/samples/img/teaser/animated_snackbar.jpg","author":"sebastianbenz"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"Snackbars provide brief feedback about an operation through a message at the bottom of the screen."},"route":"/documentation/examples/visual-effects/animated_snackbar/index.html"}