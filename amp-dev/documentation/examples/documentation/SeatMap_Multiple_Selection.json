{"filePath":"examples/source/interactivity-dynamic-content/SeatMap_Multiple_Selection/index.html","source":"<!-- ## Introduction --><!--\nThis sample allows to multiple select seats in a seatmap with one click: this is useful when an user wants to book adjacent seats without clicking multiple times; go [here](/advanced/seatmap.html) for the basic seatmap sample.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n    <title>SeatMap Multiple Selection</title>\n    <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/seatmap_multiple_selection/index.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <!-- ## Setup -->\n    <!-- Additionally used AMP components must be imported in the header:  `amp-pan-zoom` for making the seatmap zoomable and scrollable -->\n    <script async custom-element=\"amp-pan-zoom\" src=\"https://cdn.ampproject.org/v0/amp-pan-zoom-0.1.js\"></script>\n    <!-- `amp-bind` for enabling seat selection -->\n    <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n    <!-- `amp-list` for showing a list of seats -->\n    <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n    <!-- `amp-mustache` for rendering the `amp-list` content -->\n    <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n    <!-- `amp-selector` for selecting seats on the seatmap -->\n    <script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n    <style amp-custom>\n      :root {\n        --color-primary: #005AF0;\n        --color-secondary: #00DCC0;\n        --space-3: 1.5rem; /* 24px */\n        --space-4: 2rem;   /* 32px */\n      }\n      .seatmap-container {\n        position: relative;\n        height: 50vh;\n        min-width: 100%;\n        box-sizing: border-box;\n      }\n      .seatmap-container [placeholder] svg {\n        height: 100%;\n      }\n      .seatmap-container .disabled {\n        pointer-events: none;\n        cursor: default;\n        opacity: 0.5;\n        filter: alpha(opacity=50);\n      }\n      .seatmap-container .seat {\n        stroke-width: 3;\n        stroke: rgb(0,0,0);\n        fill:white;\n      }\n      .seatmap-container .unavailable {\n        fill: var(--color-secondary);\n        pointer-events: none;\n      }\n      .seatmap {\n        align-items: flex-start;\n      }\n      .seatmap svg {\n        box-sizing: border-box;\n        padding-top: var(--space-4);\n      }\n      .seatmap svg rect[selected].seat,  .seatmap svg rect.selected.seat{\n        fill: var(--color-primary);\n      }\n      .seatmap [option][selected] {\n        outline: none;\n      }\n      .seatmap >  amp-selector {\n          left: 0;\n          right: 0;\n          margin: auto;\n      }\n      .seatmap  amp-selector .svg-container {\n        padding: 0 var(--space-3);\n      }\n    </style>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>\n    <noscript>\n      <style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style>\n    </noscript>\n\n  </head>\n  <body>\n    <!-- ## Seatmap state -->\n    <!-- Here we are using an `amp-state` called `seatMultiSelection` to keep all the useful information for the seat selection.\n\n- we load a list of neighbours seats from the server\n- `selectedSeats` contains a list of selected seat ids\n- `numberOfSeats` contains the number of seats we want automatically select\n-->\n    <amp-state id=\"seatMultiSelection\" src=\"http://localhost:8080/static/samples/json/seatmap-neighbours.json\">\n      <script type=\"application/json\">\n      {\n        \"selectedSeats\": [],\n        \"numberOfSeats\": 3\n      }\n      </script>\n    </amp-state>\n\n    <!-- ## Seatmap with multiple selection -->\n    <!--\n      Everytime a seat is selected, we automatically select the 2 seats on the right of it. In case the number of seats on the right of the selected one are less than 2, we only select the remaining on the line.\n    -->\n     <div class=\"seatmap-container\">\n      <h1>Seat map</h1>\n      <amp-list layout=\"fill\" src=\"http://localhost:8080/static/samples/json/seats.json\" binding=\"refresh\" items=\".\" single-item noloading>\n        <template type=\"amp-mustache\">\n          <amp-pan-zoom layout=\"fill\" class=\"seatmap\">\n            <amp-selector on=\"select:AMP.setState({\n              seatMultiSelection: {\n                selectedSeats: event.selectedOptions.concat(\n                              seatMultiSelection.neighbours[event.selectedOptions[0]].slice(0, seatMultiSelection.numberOfSeats-1))\n                }\n              })\" layout=\"fill\">\n              <div class=\"svg-container\">\n                <svg preserveAspectRatio=\"xMidYMin slice\" viewBox=\"0 0 {{width}} {{height}}\">\n                {{#seats}}\n                  <rect option=\"{{id}}\" role=\"button\" tabindex=\"0\" class=\"seat {{unavailable}}\" [class]=\"seatMultiSelection.selectedSeats.indexOf('{{id}}') != -1 ? 'selected seat {{unavailable}}' : 'seat {{unavailable}}'\" x=\"{{x}}\" y=\"{{y}}\" width=\"{{width}}\" height=\"{{height}}\" rx=\"{{rx}}\" ry=\"{{ry}}\">\n              </rect>\n                {{/seats}}\n                </svg>\n              </div>\n            </amp-selector>\n          </amp-pan-zoom>\n        </template>\n        <div placeholder>\n          <svg class=\"disabled\" viewBox=\"0 0 [= width =] [= height =]\" preserveAspectRatio=\"xMidYMin slice\">\n            [% for seat in seats %]\n            <rect role=\"button\" tabindex=\"0\" class=\"seat unavailable\" x=\"[= seat.x =]\" y=\"[= seat.y =]\" width=\"[= seat.width =]\" height=\"[= seat.height =]\" rx=\"[= seat.rx =]\" ry=\"[= seat.ry =]\"/>\n             [% endfor %]\n            </svg>\n          </div>\n      </amp-list>\n      </div>\n</body></html>","document":{"sections":[{"doc_":"## Introduction\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Introduction\n"},{"doc_":"\nThis sample allows to multiple select seats in a seatmap with one click: this is useful when an user wants to book adjacent seats without clicking multiple times; go [here](/advanced/seatmap.html) for the basic seatmap sample.\n\n","code":"","preview":"","inBody":false,"id":1,"cachedMarkedDoc":"<p class=\"mb2 px1\">This sample allows to multiple select seats in a seatmap with one click: this is useful when an user wants to book adjacent seats without clicking multiple times; go <a href=\"/advanced/seatmap.html\">here</a> for the basic seatmap sample.</p>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThis sample allows to multiple select seats in a seatmap with one click: this is useful when an user wants to book adjacent seats without clicking multiple times; go [here](/advanced/seatmap.html) for the basic seatmap sample.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n    <title>SeatMap Multiple Selection</title>\n    <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/seatmap_multiple_selection/index.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"Additionally used AMP components must be imported in the header:  `amp-pan-zoom` for making the seatmap zoomable and scrollable \n","code":"<script async custom-element=\"amp-pan-zoom\" src=\"https://cdn.ampproject.org/v0/amp-pan-zoom-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Additionally used AMP components must be imported in the header:  `amp-pan-zoom` for making the seatmap zoomable and scrollable \n"},{"doc_":"`amp-bind` for enabling seat selection \n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-bind` for enabling seat selection \n"},{"doc_":"`amp-list` for showing a list of seats \n","code":"<script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-list` for showing a list of seats \n"},{"doc_":"`amp-mustache` for rendering the `amp-list` content \n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-mustache` for rendering the `amp-list` content \n"},{"doc_":"`amp-selector` for selecting seats on the seatmap \n","code":"<script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n","preview":"","inBody":false,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-selector` for selecting seats on the seatmap \n"},{"doc_":"","code":"<style amp-custom>\n  :root {\n    --color-primary: #005AF0;\n    --color-secondary: #00DCC0;\n    --space-3: 1.5rem; /* 24px */\n    --space-4: 2rem;   /* 32px */\n  }\n  .seatmap-container {\n    position: relative;\n    height: 50vh;\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .seatmap-container [placeholder] svg {\n    height: 100%;\n  }\n  .seatmap-container .disabled {\n    pointer-events: none;\n    cursor: default;\n    opacity: 0.5;\n    filter: alpha(opacity=50);\n  }\n  .seatmap-container .seat {\n    stroke-width: 3;\n    stroke: rgb(0,0,0);\n    fill:white;\n  }\n  .seatmap-container .unavailable {\n    fill: var(--color-secondary);\n    pointer-events: none;\n  }\n  .seatmap {\n    align-items: flex-start;\n  }\n  .seatmap svg {\n    box-sizing: border-box;\n    padding-top: var(--space-4);\n  }\n  .seatmap svg rect[selected].seat,  .seatmap svg rect.selected.seat{\n    fill: var(--color-primary);\n  }\n  .seatmap [option][selected] {\n    outline: none;\n  }\n  .seatmap >  amp-selector {\n      left: 0;\n      right: 0;\n      margin: auto;\n  }\n  .seatmap  amp-selector .svg-container {\n    padding: 0 var(--space-3);\n  }\n</style>\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>\n<noscript>\n  <style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style>\n</noscript>\n\n</head>\n<body>\n","preview":"","inBody":false,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Seatmap state\n","code":"","preview":"","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"seatmap-state","name":"Seatmap state"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Seatmap state\n"},{"doc_":"\nHere we are using an `amp-state` called `seatMultiSelection` to keep all the useful information for the seat selection.\n\n- we load a list of neighbours seats from the server\n- `selectedSeats` contains a list of selected seat ids\n- `numberOfSeats` contains the number of seats we want automatically select\n\n","code":"<amp-state id=\"seatMultiSelection\"\n  src=\"http://localhost:8080/static/samples/json/seatmap-neighbours.json\">\n  <script type=\"application/json\">\n    {\n      \"selectedSeats\": [],\n      \"numberOfSeats\": 3\n    }\n  </script>\n</amp-state>\n","preview":"  <amp-state id=\"seatMultiSelection\"\n    src=\"http://localhost:8080/static/samples/json/seatmap-neighbours.json\">\n    <script type=\"application/json\">\n      {\n        \"selectedSeats\": [],\n        \"numberOfSeats\": 3\n      }\n    </script>\n  </amp-state>\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"   Here we are using an `amp-state` called `seatMultiSelection` to keep all the useful information for the seat selection.\n\n- we load a list of neighbours seats from the server\n- `selectedSeats` contains a list of selected seat ids\n- `numberOfSeats` contains the number of seats we want automatically select\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Seatmap with multiple selection\n","code":"","preview":"","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"seatmap-with-multiple-selection","name":"Seatmap with multiple selection"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Seatmap with multiple selection\n"},{"doc_":"\nEverytime a seat is selected, we automatically select the 2 seats on the right of it. In case the number of seats on the right of the selected one are less than 2, we only select the remaining on the line.\n\n","code":"<div class=\"seatmap-container\">\n  <h1>Seat map</h1>\n  <amp-list layout=\"fill\"\n    src=\"http://localhost:8080/static/samples/json/seats.json\"\n    binding=\"refresh\"\n    items=\".\"\n    single-item\n    noloading>\n    <template type=\"amp-mustache\">\n      <amp-pan-zoom layout=\"fill\"\n        class=\"seatmap\">\n        <amp-selector on=\"select:AMP.setState({\n            seatMultiSelection: {\n              selectedSeats: event.selectedOptions.concat(\n                            seatMultiSelection.neighbours[event.selectedOptions[0]].slice(0, seatMultiSelection.numberOfSeats-1))\n              }\n            })\"\n          layout=\"fill\">\n          <div class=\"svg-container\">\n            <svg preserveAspectRatio=\"xMidYMin slice\"\n              viewBox=\"0 0 {{width}} {{height}}\">\n              {{#seats}}\n                <rect option=\"{{id}}\"\n                  role=\"button\"\n                  tabindex=\"0\"\n                  class=\"seat {{unavailable}}\"\n                  [class]=\"seatMultiSelection.selectedSeats.indexOf('{{id}}') != -1 ? 'selected seat {{unavailable}}' : 'seat {{unavailable}}'\"\n                  x=\"{{x}}\"\n                  y=\"{{y}}\"\n                  width=\"{{width}}\"\n                  height=\"{{height}}\"\n                  rx=\"{{rx}}\"\n                  ry=\"{{ry}}\">\n                </rect>\n              {{/seats}}\n            </svg>\n          </div>\n        </amp-selector>\n      </amp-pan-zoom>\n    </template>\n    <div placeholder>\n      <svg class=\"disabled\"\n        viewBox=\"0 0 [= width =] [= height =]\"\n        preserveAspectRatio=\"xMidYMin slice\">\n        [% for seat in seats %]\n        <rect role=\"button\"\n          tabindex=\"0\"\n          class=\"seat unavailable\"\n          x=\"[= seat.x =]\"\n          y=\"[= seat.y =]\"\n          width=\"[= seat.width =]\"\n          height=\"[= seat.height =]\"\n          rx=\"[= seat.rx =]\"\n          ry=\"[= seat.ry =]\" />\n        [% endfor %]\n      </svg>\n    </div>\n  </amp-list>\n</div>\n","preview":"  <div class=\"seatmap-container\">\n    <h1>Seat map</h1>\n    <amp-list layout=\"fill\"\n      src=\"http://localhost:8080/static/samples/json/seats.json\"\n      binding=\"refresh\"\n      items=\".\"\n      single-item\n      noloading>\n      <template type=\"amp-mustache\">\n        <amp-pan-zoom layout=\"fill\"\n          class=\"seatmap\">\n          <amp-selector on=\"select:AMP.setState({\n              seatMultiSelection: {\n                selectedSeats: event.selectedOptions.concat(\n                              seatMultiSelection.neighbours[event.selectedOptions[0]].slice(0, seatMultiSelection.numberOfSeats-1))\n                }\n              })\"\n            layout=\"fill\">\n            <div class=\"svg-container\">\n              <svg preserveAspectRatio=\"xMidYMin slice\"\n                viewBox=\"0 0 {{width}} {{height}}\">\n                {{#seats}}\n                  <rect option=\"{{id}}\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    class=\"seat {{unavailable}}\"\n                    [class]=\"seatMultiSelection.selectedSeats.indexOf('{{id}}') != -1 ? 'selected seat {{unavailable}}' : 'seat {{unavailable}}'\"\n                    x=\"{{x}}\"\n                    y=\"{{y}}\"\n                    width=\"{{width}}\"\n                    height=\"{{height}}\"\n                    rx=\"{{rx}}\"\n                    ry=\"{{ry}}\">\n                  </rect>\n                {{/seats}}\n              </svg>\n            </div>\n          </amp-selector>\n        </amp-pan-zoom>\n      </template>\n      <div placeholder>\n        <svg class=\"disabled\"\n          viewBox=\"0 0 [= width =] [= height =]\"\n          preserveAspectRatio=\"xMidYMin slice\">\n          [% for seat in seats %]\n          <rect role=\"button\"\n            tabindex=\"0\"\n            class=\"seat unavailable\"\n            x=\"[= seat.x =]\"\n            y=\"[= seat.y =]\"\n            width=\"[= seat.width =]\"\n            height=\"[= seat.height =]\"\n            rx=\"[= seat.rx =]\"\n            ry=\"[= seat.ry =]\" />\n          [% endfor %]\n        </svg>\n      </div>\n    </amp-list>\n  </div>\n","inBody":true,"id":14,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nEverytime a seat is selected, we automatically select the 2 seats on the right of it. In case the number of seats on the right of the selected one are less than 2, we only select the remaining on the line.\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":15,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n    <title>SeatMap Multiple Selection</title>\n    <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/seatmap_multiple_selection/index.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <script async custom-element=\"amp-pan-zoom\" src=\"https://cdn.ampproject.org/v0/amp-pan-zoom-0.1.js\"></script>\n    <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n    <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n    <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n    <script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>\n    <noscript>\n      <style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style>\n    </noscript>\n\n","styles":"      :root {\n        --color-primary: #005AF0;\n        --color-secondary: #00DCC0;\n        --space-3: 1.5rem; /* 24px */\n        --space-4: 2rem;   /* 32px */\n      }\n      .seatmap-container {\n        position: relative;\n        height: 50vh;\n        min-width: 100%;\n        box-sizing: border-box;\n      }\n      .seatmap-container [placeholder] svg {\n        height: 100%;\n      }\n      .seatmap-container .disabled {\n        pointer-events: none;\n        cursor: default;\n        opacity: 0.5;\n        filter: alpha(opacity=50);\n      }\n      .seatmap-container .seat {\n        stroke-width: 3;\n        stroke: rgb(0,0,0);\n        fill:white;\n      }\n      .seatmap-container .unavailable {\n        fill: var(--color-secondary);\n        pointer-events: none;\n      }\n      .seatmap {\n        align-items: flex-start;\n      }\n      .seatmap svg {\n        box-sizing: border-box;\n        padding-top: var(--space-4);\n      }\n      .seatmap svg rect[selected].seat,  .seatmap svg rect.selected.seat{\n        fill: var(--color-primary);\n      }\n      .seatmap [option][selected] {\n        outline: none;\n      }\n      .seatmap >  amp-selector {\n          left: 0;\n          right: 0;\n          margin: auto;\n      }\n      .seatmap  amp-selector .svg-container {\n        padding: 0 var(--space-3);\n      }\n","title":"SeatMap Multiple Selection","metadata":{"preview":"default","default":"preview","author":"kul3r4"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This sample allows to multiple select seats in a seatmap with one click: this is useful when an user wants to book adjacent seats without clicking multiple times; go here for the basic seatmap sample."},"route":"/documentation/examples/interactivity-dynamic-content/seatmap_multiple_selection/index.html"}