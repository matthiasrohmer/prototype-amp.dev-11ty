{"filePath":"examples/source/interactivity-dynamic-content/Advanced_Server_Request.html","source":"<!--\n## Introduction\n\nThis sample demonstrates how to display data from a server in an email and refresh it subsequently\nwhile taking the user's input into account.\n\nBecause AMP for Email doesn't allow binding to `[src]` in `amp-list`, it uses a combination of\n[`amp-list`](/documentation/components/amp-list) and [`amp-form`](/documentation/components/amp-form)\nthat share the same [`amp-mustache`](/documentation/components/amp-mustache) template.\nWhen the form is submitted for the first time, the `amp-list` is hidden and the form's response takes its place.\n-->\n\n<!-- -->\n<!doctype html>\n<html ⚡4email>\n<head>\n  <meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n  <style amp4email-boilerplate>body{visibility:hidden}</style>\n</head>\n<!-- ## Implementation -->\n<!-- -->\n<body>\n  <!--\n    Define a template and give it an `id` to allow it to be used from both `amp-list` and `amp-form`.\n  -->\n  <template id=\"animal-template\" type=\"amp-mustache\">\n    <p>This displays data sent from a server.</p>\n    {{#animal}}\n    <p>You have selected {{animal}}.</p>\n    {{/animal}}\n  </template>\n  <!--\n    When the user changes the selection, the change event triggers the form submission and hides the `amp-list`: `on=\"change:animal-form.submit,animal-list.hide\"`.\n\n    The `amp-form` renders the server response using the same template as `amp-list`, making the switch from `amp-list` to `amp-form` appear seamless.\n\n    Note: Use a placeholder to make the loading state look the same as the submitting state for the form.\n  -->\n  <div>\n    <form id=\"animal-form\" method=\"get\" action-xhr=\"http://localhost:8080/documentation/examples/api/echo\">\n      <div>\n        <p>Select an animal to update the server response.</p>\n        <select name=\"animal\" on=\"change:animal-form.submit,animal-list.hide\">\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"parrot\">Parrot</option>\n        </select>\n      </div>\n      <div submitting>Loading ...</div>\n      <div submit-success template=\"animal-template\"></div>\n    </form>\n    <amp-list id=\"animal-list\" items=\".\" single-item template=\"animal-template\" src=\"http://localhost:8080/documentation/examples/api/echo\" layout=\"fixed-height\" height=\"50\">\n      <div placeholder>Loading ...</div>\n    </amp-list>\n  </div>\n</body>\n</html>","document":{"sections":[{"doc_":"","code":"\n","preview":"","inBody":false,"id":0,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n## Introduction\n\nThis sample demonstrates how to display data from a server in an email and refresh it subsequently\nwhile taking the user's input into account.\n\nBecause AMP for Email doesn't allow binding to `[src]` in `amp-list`, it uses a combination of\n[`amp-list`](/documentation/components/amp-list) and [`amp-form`](/documentation/components/amp-form)\nthat share the same [`amp-mustache`](/documentation/components/amp-mustache) template.\nWhen the form is submitted for the first time, the `amp-list` is hidden and the form's response takes its place.\n\n","code":"\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">This sample demonstrates how to display data from a server in an email and refresh it subsequently\nwhile taking the user&#39;s input into account.</p><p class=\"mb2 px1\">Because AMP for Email doesn&#39;t allow binding to <code>[src]</code> in <code>amp-list</code>, it uses a combination of\n<a href=\"/documentation/components/amp-list\"><code>amp-list</code></a> and <a href=\"/documentation/components/amp-form\"><code>amp-form</code></a>\nthat share the same <a href=\"/documentation/components/amp-mustache\"><code>amp-mustache</code></a> template.\nWhen the form is submitted for the first time, the <code>amp-list</code> is hidden and the form&#39;s response takes its place.</p>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThis sample demonstrates how to display data from a server in an email and refresh it subsequently\nwhile taking the user's input into account.\n\nBecause AMP for Email doesn't allow binding to `[src]` in `amp-list`, it uses a combination of\n[`amp-list`](/documentation/components/amp-list) and [`amp-form`](/documentation/components/amp-form)\nthat share the same [`amp-mustache`](/documentation/components/amp-mustache) template.\nWhen the form is submitted for the first time, the `amp-list` is hidden and the form's response takes its place.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡4email>\n<head>\n  <meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n  <style amp4email-boilerplate>body{visibility:hidden}</style>\n</head>\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Implementation\n","code":"","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"implementation","name":"Implementation"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Implementation\n"},{"doc_":"\n","code":"<body>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"\nDefine a template and give it an `id` to allow it to be used from both `amp-list` and `amp-form`.\n\n","code":"<template id=\"animal-template\"\n  type=\"amp-mustache\">\n  <p>This displays data sent from a server.</p>\n  {{#animal}}\n    <p>You have selected {{animal}}.</p>\n  {{/animal}}\n</template>\n","preview":"  <template id=\"animal-template\"\n    type=\"amp-mustache\">\n    <p>This displays data sent from a server.</p>\n    {{#animal}}\n      <p>You have selected {{animal}}.</p>\n    {{/animal}}\n  </template>\n","inBody":true,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nDefine a template and give it an `id` to allow it to be used from both `amp-list` and `amp-form`.\n\n"},{"doc_":"\nWhen the user changes the selection, the change event triggers the form submission and hides the `amp-list`: `on=\"change:animal-form.submit,animal-list.hide\"`.\n\nThe `amp-form` renders the server response using the same template as `amp-list`, making the switch from `amp-list` to `amp-form` appear seamless.\n\nNote: Use a placeholder to make the loading state look the same as the submitting state for the form.\n\n","code":"<form id=\"animal-form\"\n  method=\"get\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/echo\">\n  <div>\n    <p>Select an animal to update the server response.</p>\n    <select name=\"animal\"\n      on=\"change:animal-form.submit,animal-list.hide\">\n      <option value=\"dog\">Dog</option>\n      <option value=\"cat\">Cat</option>\n      <option value=\"parrot\">Parrot</option>\n    </select>\n  </div>\n  <div submitting>Loading ...</div>\n  <div submit-success\n    template=\"animal-template\"></div>\n</form>\n<amp-list id=\"animal-list\"\n  items=\".\"\n  single-item\n  template=\"animal-template\"\n  src=\"http://localhost:8080/documentation/examples/api/echo\"\n  layout=\"fixed-height\"\n  height=\"50\">\n  <div placeholder>Loading ...</div>\n</amp-list>","preview":"  <div>\n    <form id=\"animal-form\"\n      method=\"get\"\n      action-xhr=\"http://localhost:8080/documentation/examples/api/echo\">\n      <div>\n        <p>Select an animal to update the server response.</p>\n        <select name=\"animal\"\n          on=\"change:animal-form.submit,animal-list.hide\">\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"parrot\">Parrot</option>\n        </select>\n      </div>\n      <div submitting>Loading ...</div>\n      <div submit-success\n        template=\"animal-template\"></div>\n    </form>\n    <amp-list id=\"animal-list\"\n      items=\".\"\n      single-item\n      template=\"animal-template\"\n      src=\"http://localhost:8080/documentation/examples/api/echo\"\n      layout=\"fixed-height\"\n      height=\"50\">\n      <div placeholder>Loading ...</div>\n    </amp-list>\n  </div>\n","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWhen the user changes the selection, the change event triggers the form submission and hides the `amp-list`: `on=\"change:animal-form.submit,animal-list.hide\"`.\n\nThe `amp-form` renders the server response using the same template as `amp-list`, making the switch from `amp-list` to `amp-form` appear seamless.\n\nNote: Use a placeholder to make the loading state look the same as the submitting state for the form.\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"  <meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\"><style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"","title":"Advanced Server Request","metadata":{"preview":"amp4email","skipValidation":"true","author":"fstanis"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":false,"isAmpAds":false,"isAmpEmail":true,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This sample demonstrates how to display data from a server in an email and refresh it subsequently while taking the user's input into account."},"route":"/documentation/examples/interactivity-dynamic-content/advanced_server_request/index.html"}