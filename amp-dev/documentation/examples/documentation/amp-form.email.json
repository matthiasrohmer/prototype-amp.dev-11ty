{"filePath":"examples/source/1.components/amp-form.html","source":"<!--\n  ## Introduction\n\n  The [`amp-form`](/content/amp-dev/documentation/components/reference/amp-form-v0.1.md) extension allows\n  the usage of forms and input fields in an AMP document. `amp-form` allows HTTP and XHR (XMLHttpRequest) form submissions. An HTTP form submission loads a new page, while an XHR form submission doesn't require a page reload.\n\n  The `amp-form` extension also allows you to render success and error responses with the `submit-success` and `submit-error` special attributes. For details on usage, see the [amp-form documentation on Success/Error response rendering](/content/amp-dev/documentation/components/reference/amp-form.md#success/error-response-rendering).\n--><!-- -->\n<!doctype html>\n<html âš¡4email>\n<head>\n<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <!-- ## Setup -->\n  <!--\n    Import the `amp-form` extension.\n  -->\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <!--\n    `amp-mustache` is needed for client-side rendering of form responses.\n  -->\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n  <style amp4email-boilerplate>body{visibility:hidden}</style>\n  <style amp-custom>\n  :root {\n    --space-1: .5rem;  /* 8px */\n    --space-2: 1rem;   /* 16px */\n    --space-3: 1.5rem; /* 24px */\n  }\n\n  /* Hides all inputs after successful form submission */\n  form.amp-form-submit-success.sample-form.hide-inputs > input {\n    display: none;\n  }\n\n  /* sample styles */\n  .sample-form {\n    padding: 0 var(--space-2);\n  }\n  .sample-form > * {\n    margin: var(--space-1);\n  }\n  .sample-heading {\n    margin: 0 var(--space-3);\n    margin-top: var(--space-3);\n    font-size: 18px;\n  }\n  </style>\n</head>\n<body>\n  <h2 class=\"sample-heading\">Form Submission with Page Reload</h2>\n  <h2 class=\"sample-heading\">Form Submission with Page Update</h2>\n  <!-- ## Form submission with client-side rendering -->\n  <!--\n    Use the `action-xhr` attribute to submit the form via XMLHttpRequest (XHR). You can use [amp-mustache](/content/amp-dev/documentation/components/reference/amp-mustache-v0.2.md) templates to client side render the POST response. It's possible to show custom success or error messages, using data sent by the server endpoint as JSON. For example, if the server sends `{\"foo\": \"bar\"}`, you can use use `{{foo}}` in the template to render `bar`.\n\n    The `amp-form` component displays `submit-success` or `submit-error` elements based on the response and renders the template data inside these two elements. The `submit-success` and `submit-error` elements must be direct children of `form`.\n  -->\n  <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\">\n    <input type=\"text\" name=\"name\" placeholder=\"Name...\" required>\n    <input type=\"email\" name=\"email\" placeholder=\"Email...\" required>\n    <input type=\"submit\" value=\"Subscribe\">\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Error! Thanks {{name}} for trying the <code>amp-form</code> demo with an error response.\n      </template>\n    </div>\n  </form>\n\n  <h2 class=\"sample-heading\">Form Custom Validation: <code>show-all-on-submit</code></h2>\n  <!-- ## Form custom validation -->\n  <!--\n    The `amp-form` extension allows you to build your own custom validation UI by using the `custom-validation-reporting`, read [here](/content/amp-dev/documentation/components/reference/amp-form.md#custom-validations) about the different strategies.\n\n    Use `show-all-on-submit` strategy to ensure all the validation messages are shown when the user submits the form.\n  -->\n  <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\" custom-validation-reporting=\"show-all-on-submit\">\n    <input type=\"text\" id=\"show-all-on-submit-name\" name=\"name\" placeholder=\"Name...\" required pattern=\"\\p{L}+\\s\\p{L}+\">\n    <span visible-when-invalid=\"valueMissing\" validation-for=\"show-all-on-submit-name\"></span>\n    <span visible-when-invalid=\"patternMismatch\" validation-for=\"show-all-on-submit-name\">\n      Please enter your first and last name separated by a space (e.g. Jane Miller)\n    </span>\n    <input type=\"email\" id=\"show-all-on-submit-email\" name=\"email\" placeholder=\"Email...\" required>\n    <span visible-when-invalid=\"valueMissing\" validation-for=\"show-all-on-submit-email\"></span>\n    <span visible-when-invalid=\"typeMismatch\" validation-for=\"show-all-on-submit-email\"></span>\n    <input type=\"submit\" value=\"Subscribe\">\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Error! Thanks {{name}} for trying the <code>amp-form</code> demo.\n      </template>\n    </div>\n  </form>\n\n  <h2 class=\"sample-heading\">Form Custom Validation: <code>show-first-on-submit</code></h2>\n  <!-- Use `show-first-on-submit` strategy to show the first validation message when the user submit the form. -->\n  <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\" custom-validation-reporting=\"show-first-on-submit\">\n    <input type=\"text\" id=\"show-first-on-submit-name\" name=\"name\" placeholder=\"Name...\" required pattern=\"\\p{L}+\\s\\p{L}+\">\n    <span visible-when-invalid=\"valueMissing\" validation-for=\"show-first-on-submit-name\"></span>\n    <span visible-when-invalid=\"patternMismatch\" validation-for=\"show-first-on-submit-name\">\n      Please enter your first and last name separated by a space (e.g. Jane Miller)\n    </span>\n    <input type=\"email\" id=\"show-first-on-submit-email\" name=\"email\" placeholder=\"Email...\" required>\n    <span visible-when-invalid=\"valueMissing\" validation-for=\"show-first-on-submit-email\"></span>\n    <span visible-when-invalid=\"typeMismatch\" validation-for=\"show-first-on-submit-email\"></span>\n    <input type=\"submit\" value=\"Subscribe\">\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Error! Thanks {{name}} for trying the <code>amp-form</code> demo with an error response.\n      </template>\n    </div>\n  </form>\n\n  <h2 class=\"sample-heading\">Form Custom Validation: <code>as-you-go</code></h2>\n  <!-- Use `as-you-go` strategy to show validation messages as the user is interacting with the form. -->\n  <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\" custom-validation-reporting=\"as-you-go\">\n    <input type=\"text\" id=\"as-you-go-name\" name=\"name\" placeholder=\"Name...\" required pattern=\"\\p{L}+\\s\\p{L}+\">\n    <span visible-when-invalid=\"valueMissing\" validation-for=\"as-you-go-name\"></span>\n    <span visible-when-invalid=\"patternMismatch\" validation-for=\"as-you-go-name\">\n      Please enter your first and last name separated by a space (e.g. Jane Miller)\n    </span>\n    <input type=\"email\" id=\"as-you-go-email\" name=\"email\" placeholder=\"Email...\" required>\n    <span visible-when-invalid=\"valueMissing\" validation-for=\"as-you-go-email\"></span>\n    <span visible-when-invalid=\"typeMismatch\" validation-for=\"as-you-go-email\"></span>\n    <input type=\"submit\" value=\"Subscribe\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n\n  <h2 class=\"sample-heading\">Form Verification: <code>as-you-go</code></h2>\n  <h2 class=\"sample-heading\">Reset / clear form input </h2>\n  <!-- ## Reset / clear form input -->\n  <!--\n    You can use either an `<input type=\"reset\">` or the `clear` action for clearing input fields.\n  -->\n  <form class=\"sample-form\" id=\"formResetSample\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"text\" placeholder=\"Some text...\">\n    <input type=\"submit\" value=\"OK\">\n    <input type=\"reset\" value=\"Reset\">\n    <button type=\"button\" on=\"tap:formResetSample.clear\">Clear input</button>\n  </form>\n\n  <h2 class=\"sample-heading\">Hiding inputs after a successful submission</h2>\n  <!-- ## Hiding input fields after a successful submission -->\n  <!--\n    Use the `amp-form-submit-success` class to hide input fields after a successful submission.\n    The following CSS rule hides all form input fields after successful form submission:\n\n    ```css\n    form.amp-form-submit-success > input {\n      display: none\n    }\n    ```\n  -->\n  <form class=\"sample-form hide-inputs\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\">\n    <input type=\"text\" name=\"name\" placeholder=\"Name...\" required>\n    <input type=\"submit\" value=\"Subscribe\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n\n  <!-- ## Input type=date -->\n  <!--\n    `amp-form` supports all HTML5 form types with the exception of file and image. It's recommended to use the [`amp-date-picker`](/content/amp-dev/documentation/components/reference/amp-date-picker-v0.1.md) component for input fields that should contain a date.\n  -->\n  <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input name=\"select-date\" type=\"date\" value=\"2020-12-30\">\n    <input type=\"submit\" value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n    <h2 class=\"sample-heading\">Input type=\"month\"</h2>\n    <!-- ## Input type=month -->\n    <!--\n      Use `type=\"month\"` for input fields that should contain a month.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input name=\"select-month\" type=\"month\" value=\"2020-12\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n       Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"week\"</h2>\n    <!-- ## Input type=week -->\n    <!--\n      Use `type=\"week\"` for input fields that should contain a week.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"week\" name=\"week_year\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"datetime-local\"</h2>\n    <!-- ## Input type=datetime-local -->\n    <!--\n      Use `type=\"datetime-local\"` for input fields that should contain a date and time.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input name=\"select-datetime\" type=\"datetime-local\" value=\"2020-12-30T12:34:56\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"time\"</h2>\n    <!-- ## Input type=time -->\n    <!--\n      Use `type=\"time\"` for input fields that should contain a time.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"time\" name=\"time_now\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"checkbox\"</h2>\n    <!-- ## Input type=checkbox -->\n    <!--\n      Use `type=\"checkbox\"` to let the user select ZERO or MORE options of a limited number of choices.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"checkbox\" id=\"animal1\" name=\"animal1\" value=\"Cats\">\n      <label for=\"animal1\">I like cats</label>\n      <input type=\"checkbox\" id=\"animal2\" name=\"animal2\" value=\"Dogs\">\n      <label for=\"animal2\"> I like dogs </label>\n      <button type=\"submit\" value=\"OK\">OK</button>\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"email\"</h2>\n    <!-- ## Input type=email -->\n    <!--\n      Use `type=\"email\"` for input fields that should contain an e-mail address.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"email\" name=\"email\" placeholder=\"Email...\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"hidden\"</h2>\n    <!-- ## Input type=hidden -->\n    <!--\n      Use `type=\"hidden\"` to define a field not visible to a user.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"hidden\" name=\"city\" value=\"London\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"number\"</h2>\n    <!-- ## Input type=number -->\n    <!--\n      Use `type=\"number\"` for input fields that should contain a numeric value.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"number\" name=\"quantity\" min=\"1\" max=\"5\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"radio\"</h2>\n    <!-- ## Input type=radio -->\n    <!--\n      Use `type=\"radio\"` to let a user select ONLY ONE of a limited number of choices.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"radio\" id=\"cat\" name=\"favourite animal\" value=\"cat\" checked>\n      <label for=\"cat\">Cat</label>\n      <input type=\"radio\" id=\"dog\" name=\"favourite animal\" value=\"dog\">\n      <label for=\"dog\">Dog</label>\n      <input type=\"radio\" id=\"other\" name=\"favourite animal\" value=\"other\">\n      <label for=\"other\">Other</label>\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"range\"</h2>\n    <!-- ## Input type=range -->\n    <!--\n      Use `type=\"range\"` for input fields that should contain a value within a range.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"range\" name=\"points\" min=\"0\" max=\"10\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"tel\"</h2>\n    <!-- ## Input type=tel -->\n    <!--\n      Use `type=\"tel\"` for input fields that should contain a telephone number.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"tel\" name=\"my_tel\" placeholder=\"Telephone...\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"url\"</h2>\n    <!-- ## Input type=url -->\n    <!--\n      Use `type=\"url\"` for input fields that should contain a URL address.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <input type=\"url\" placeholder=\"URL...\" name=\"website\">\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n    <h2 class=\"sample-heading\">Input type=\"password\"</h2>\n    <h2 class=\"sample-heading\">Input select</h2>\n    <!-- ## Input select -->\n    <!--\n      Use `select` element for dropdowns.\n    -->\n    <form class=\"sample-form\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n      <select name=\"cars\" id=\"cars\">\n        <option value=\"volvo\">Volvo</option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"fiat\">Fiat</option>\n        <option value=\"audi\">Audi</option>\n      </select>\n      <label for=\"cars\">Select a car</label>\n      <input type=\"submit\" value=\"OK\">\n      <div submit-success>\n        Success!\n      </div>\n      <div submit-error>\n        Error!\n      </div>\n    </form>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThe [`amp-form`](/content/amp-dev/documentation/components/reference/amp-form-v0.1.md) extension allows\nthe usage of forms and input fields in an AMP document. `amp-form` allows HTTP and XHR (XMLHttpRequest) form submissions. An HTTP form submission loads a new page, while an XHR form submission doesn't require a page reload.\n\nThe `amp-form` extension also allows you to render success and error responses with the `submit-success` and `submit-error` special attributes. For details on usage, see the [amp-form documentation on Success/Error response rendering](/content/amp-dev/documentation/components/reference/amp-form.md#success/error-response-rendering).\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">The <a href=\"/content/amp-dev/documentation/components/reference/amp-form-v0.1.md\"><code>amp-form</code></a> extension allows\nthe usage of forms and input fields in an AMP document. <code>amp-form</code> allows HTTP and XHR (XMLHttpRequest) form submissions. An HTTP form submission loads a new page, while an XHR form submission doesn&#39;t require a page reload.</p><p class=\"mb2 px1\">The <code>amp-form</code> extension also allows you to render success and error responses with the <code>submit-success</code> and <code>submit-error</code> special attributes. For details on usage, see the <a href=\"/content/amp-dev/documentation/components/reference/amp-form.md#success/error-response-rendering\">amp-form documentation on Success/Error response rendering</a>.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThe [`amp-form`](/content/amp-dev/documentation/components/reference/amp-form-v0.1.md) extension allows\nthe usage of forms and input fields in an AMP document. `amp-form` allows HTTP and XHR (XMLHttpRequest) form submissions. An HTTP form submission loads a new page, while an XHR form submission doesn't require a page reload.\n\nThe `amp-form` extension also allows you to render success and error responses with the `submit-success` and `submit-error` special attributes. For details on usage, see the [amp-form documentation on Success/Error response rendering](/content/amp-dev/documentation/components/reference/amp-form.md#success/error-response-rendering).\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html âš¡4email>\n<head>\n<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"\nImport the `amp-form` extension.\n\n","code":"<script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nImport the `amp-form` extension.\n\n"},{"doc_":"\n`amp-mustache` is needed for client-side rendering of form responses.\n\n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n`amp-mustache` is needed for client-side rendering of form responses.\n\n"},{"doc_":"","code":"<style amp4email-boilerplate>body{visibility:hidden}</style>\n<style amp-custom>\n:root {\n  --space-1: .5rem;  /* 8px */\n  --space-2: 1rem;   /* 16px */\n  --space-3: 1.5rem; /* 24px */\n}\n\n/* Hides all inputs after successful form submission */\nform.amp-form-submit-success.sample-form.hide-inputs > input {\n  display: none;\n}\n\n/* sample styles */\n.sample-form {\n  padding: 0 var(--space-2);\n}\n.sample-form > * {\n  margin: var(--space-1);\n}\n.sample-heading {\n  margin: 0 var(--space-3);\n  margin-top: var(--space-3);\n  font-size: 18px;\n}\n</style>\n</head>\n<body>\n<h2 class=\"sample-heading\">Form Submission with Page Reload</h2>\n<h2 class=\"sample-heading\">Form Submission with Page Update</h2>\n","preview":"  <h2 class=\"sample-heading\">Form Submission with Page Reload</h2>\n  <h2 class=\"sample-heading\">Form Submission with Page Update</h2>\n","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Form submission with client-side rendering\n","code":"","preview":"","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"form-submission-with-client-side-rendering","name":"Form submission with client-side rendering"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Form submission with client-side rendering\n"},{"doc_":"\nUse the `action-xhr` attribute to submit the form via XMLHttpRequest (XHR). You can use [amp-mustache](/content/amp-dev/documentation/components/reference/amp-mustache-v0.2.md) templates to client side render the POST response. It's possible to show custom success or error messages, using data sent by the server endpoint as JSON. For example, if the server sends `{\"foo\": \"bar\"}`, you can use use `{% raw %}{{foo}}{% endraw %}` in the template to render `bar`.\n\nThe `amp-form` component displays `submit-success` or `submit-error` elements based on the response and renders the template data inside these two elements. The `submit-success` and `submit-error` elements must be direct children of `form`.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\">\n  <input type=\"text\"\n    name=\"name\"\n    placeholder=\"Name...\"\n    required>\n  <input type=\"email\"\n    name=\"email\"\n    placeholder=\"Email...\"\n    required>\n  <input type=\"submit\"\n    value=\"Subscribe\">\n  <div submit-success>\n    <template type=\"amp-mustache\">\n      Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n    </template>\n  </div>\n  <div submit-error>\n    <template type=\"amp-mustache\">\n      Error! Thanks {{name}} for trying the <code>amp-form</code> demo with an error response.\n    </template>\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\">\n    <input type=\"text\"\n      name=\"name\"\n      placeholder=\"Name...\"\n      required>\n    <input type=\"email\"\n      name=\"email\"\n      placeholder=\"Email...\"\n      required>\n    <input type=\"submit\"\n      value=\"Subscribe\">\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Error! Thanks {{name}} for trying the <code>amp-form</code> demo with an error response.\n      </template>\n    </div>\n  </form>\n","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse the `action-xhr` attribute to submit the form via XMLHttpRequest (XHR). You can use [amp-mustache](/content/amp-dev/documentation/components/reference/amp-mustache-v0.2.md) templates to client side render the POST response. It's possible to show custom success or error messages, using data sent by the server endpoint as JSON. For example, if the server sends `{\"foo\": \"bar\"}`, you can use use `{{foo}}` in the template to render `bar`.\n\nThe `amp-form` component displays `submit-success` or `submit-error` elements based on the response and renders the template data inside these two elements. The `submit-success` and `submit-error` elements must be direct children of `form`.\n\n"},{"doc_":"","code":"\n<h2 class=\"sample-heading\">Form Custom Validation: <code>show-all-on-submit</code></h2>\n","preview":"\n  <h2 class=\"sample-heading\">Form Custom Validation: <code>show-all-on-submit</code></h2>\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Form custom validation\n","code":"","preview":"","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"form-custom-validation","name":"Form custom validation"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Form custom validation\n"},{"doc_":"\nThe `amp-form` extension allows you to build your own custom validation UI by using the `custom-validation-reporting`, read [here](/content/amp-dev/documentation/components/reference/amp-form.md#custom-validations) about the different strategies.\n\nUse `show-all-on-submit` strategy to ensure all the validation messages are shown when the user submits the form.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\"\n  custom-validation-reporting=\"show-all-on-submit\">\n  <input type=\"text\"\n    id=\"show-all-on-submit-name\"\n    name=\"name\"\n    placeholder=\"Name...\"\n    required\n    pattern=\"\\p{L}+\\s\\p{L}+\">\n  <span visible-when-invalid=\"valueMissing\"\n    validation-for=\"show-all-on-submit-name\"></span>\n  <span visible-when-invalid=\"patternMismatch\"\n    validation-for=\"show-all-on-submit-name\">\n    Please enter your first and last name separated by a space (e.g. Jane Miller)\n  </span>\n  <input type=\"email\"\n    id=\"show-all-on-submit-email\"\n    name=\"email\"\n    placeholder=\"Email...\"\n    required>\n  <span visible-when-invalid=\"valueMissing\"\n    validation-for=\"show-all-on-submit-email\"></span>\n  <span visible-when-invalid=\"typeMismatch\"\n    validation-for=\"show-all-on-submit-email\"></span>\n  <input type=\"submit\"\n    value=\"Subscribe\">\n  <div submit-success>\n    <template type=\"amp-mustache\">\n      Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n    </template>\n  </div>\n  <div submit-error>\n    <template type=\"amp-mustache\">\n      Error! Thanks {{name}} for trying the <code>amp-form</code> demo.\n    </template>\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\"\n    custom-validation-reporting=\"show-all-on-submit\">\n    <input type=\"text\"\n      id=\"show-all-on-submit-name\"\n      name=\"name\"\n      placeholder=\"Name...\"\n      required\n      pattern=\"\\p{L}+\\s\\p{L}+\">\n    <span visible-when-invalid=\"valueMissing\"\n      validation-for=\"show-all-on-submit-name\"></span>\n    <span visible-when-invalid=\"patternMismatch\"\n      validation-for=\"show-all-on-submit-name\">\n      Please enter your first and last name separated by a space (e.g. Jane Miller)\n    </span>\n    <input type=\"email\"\n      id=\"show-all-on-submit-email\"\n      name=\"email\"\n      placeholder=\"Email...\"\n      required>\n    <span visible-when-invalid=\"valueMissing\"\n      validation-for=\"show-all-on-submit-email\"></span>\n    <span visible-when-invalid=\"typeMismatch\"\n      validation-for=\"show-all-on-submit-email\"></span>\n    <input type=\"submit\"\n      value=\"Subscribe\">\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Error! Thanks {{name}} for trying the <code>amp-form</code> demo.\n      </template>\n    </div>\n  </form>\n","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThe `amp-form` extension allows you to build your own custom validation UI by using the `custom-validation-reporting`, read [here](/content/amp-dev/documentation/components/reference/amp-form.md#custom-validations) about the different strategies.\n\nUse `show-all-on-submit` strategy to ensure all the validation messages are shown when the user submits the form.\n\n"},{"doc_":"","code":"\n<h2 class=\"sample-heading\">Form Custom Validation: <code>show-first-on-submit</code></h2>\n","preview":"\n  <h2 class=\"sample-heading\">Form Custom Validation: <code>show-first-on-submit</code></h2>\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Use `show-first-on-submit` strategy to show the first validation message when the user submit the form. \n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\"\n  custom-validation-reporting=\"show-first-on-submit\">\n  <input type=\"text\"\n    id=\"show-first-on-submit-name\"\n    name=\"name\"\n    placeholder=\"Name...\"\n    required\n    pattern=\"\\p{L}+\\s\\p{L}+\">\n  <span visible-when-invalid=\"valueMissing\"\n    validation-for=\"show-first-on-submit-name\"></span>\n  <span visible-when-invalid=\"patternMismatch\"\n    validation-for=\"show-first-on-submit-name\">\n    Please enter your first and last name separated by a space (e.g. Jane Miller)\n  </span>\n  <input type=\"email\"\n    id=\"show-first-on-submit-email\"\n    name=\"email\"\n    placeholder=\"Email...\"\n    required>\n  <span visible-when-invalid=\"valueMissing\"\n    validation-for=\"show-first-on-submit-email\"></span>\n  <span visible-when-invalid=\"typeMismatch\"\n    validation-for=\"show-first-on-submit-email\"></span>\n  <input type=\"submit\"\n    value=\"Subscribe\">\n  <div submit-success>\n    <template type=\"amp-mustache\">\n      Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n    </template>\n  </div>\n  <div submit-error>\n    <template type=\"amp-mustache\">\n      Error! Thanks {{name}} for trying the <code>amp-form</code> demo with an error response.\n    </template>\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\"\n    custom-validation-reporting=\"show-first-on-submit\">\n    <input type=\"text\"\n      id=\"show-first-on-submit-name\"\n      name=\"name\"\n      placeholder=\"Name...\"\n      required\n      pattern=\"\\p{L}+\\s\\p{L}+\">\n    <span visible-when-invalid=\"valueMissing\"\n      validation-for=\"show-first-on-submit-name\"></span>\n    <span visible-when-invalid=\"patternMismatch\"\n      validation-for=\"show-first-on-submit-name\">\n      Please enter your first and last name separated by a space (e.g. Jane Miller)\n    </span>\n    <input type=\"email\"\n      id=\"show-first-on-submit-email\"\n      name=\"email\"\n      placeholder=\"Email...\"\n      required>\n    <span visible-when-invalid=\"valueMissing\"\n      validation-for=\"show-first-on-submit-email\"></span>\n    <span visible-when-invalid=\"typeMismatch\"\n      validation-for=\"show-first-on-submit-email\"></span>\n    <input type=\"submit\"\n      value=\"Subscribe\">\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        Success! Thanks {{name}} for trying the <code>amp-form</code> demo! Try to insert the word \"error\" as a name input in the form to see how <code>amp-form</code> handles errors.\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Error! Thanks {{name}} for trying the <code>amp-form</code> demo with an error response.\n      </template>\n    </div>\n  </form>\n","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Use `show-first-on-submit` strategy to show the first validation message when the user submit the form. \n"},{"doc_":"","code":"\n<h2 class=\"sample-heading\">Form Custom Validation: <code>as-you-go</code></h2>\n","preview":"\n  <h2 class=\"sample-heading\">Form Custom Validation: <code>as-you-go</code></h2>\n","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Use `as-you-go` strategy to show validation messages as the user is interacting with the form. \n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\"\n  custom-validation-reporting=\"as-you-go\">\n  <input type=\"text\"\n    id=\"as-you-go-name\"\n    name=\"name\"\n    placeholder=\"Name...\"\n    required\n    pattern=\"\\p{L}+\\s\\p{L}+\">\n  <span visible-when-invalid=\"valueMissing\"\n    validation-for=\"as-you-go-name\"></span>\n  <span visible-when-invalid=\"patternMismatch\"\n    validation-for=\"as-you-go-name\">\n    Please enter your first and last name separated by a space (e.g. Jane Miller)\n  </span>\n  <input type=\"email\"\n    id=\"as-you-go-email\"\n    name=\"email\"\n    placeholder=\"Email...\"\n    required>\n  <span visible-when-invalid=\"valueMissing\"\n    validation-for=\"as-you-go-email\"></span>\n  <span visible-when-invalid=\"typeMismatch\"\n    validation-for=\"as-you-go-email\"></span>\n  <input type=\"submit\"\n    value=\"Subscribe\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\"\n    custom-validation-reporting=\"as-you-go\">\n    <input type=\"text\"\n      id=\"as-you-go-name\"\n      name=\"name\"\n      placeholder=\"Name...\"\n      required\n      pattern=\"\\p{L}+\\s\\p{L}+\">\n    <span visible-when-invalid=\"valueMissing\"\n      validation-for=\"as-you-go-name\"></span>\n    <span visible-when-invalid=\"patternMismatch\"\n      validation-for=\"as-you-go-name\">\n      Please enter your first and last name separated by a space (e.g. Jane Miller)\n    </span>\n    <input type=\"email\"\n      id=\"as-you-go-email\"\n      name=\"email\"\n      placeholder=\"Email...\"\n      required>\n    <span visible-when-invalid=\"valueMissing\"\n      validation-for=\"as-you-go-email\"></span>\n    <span visible-when-invalid=\"typeMismatch\"\n      validation-for=\"as-you-go-email\"></span>\n    <input type=\"submit\"\n      value=\"Subscribe\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":14,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Use `as-you-go` strategy to show validation messages as the user is interacting with the form. \n"},{"doc_":"","code":"\n<h2 class=\"sample-heading\">Form Verification: <code>as-you-go</code></h2>\n<h2 class=\"sample-heading\">Reset / clear form input </h2>\n","preview":"\n  <h2 class=\"sample-heading\">Form Verification: <code>as-you-go</code></h2>\n  <h2 class=\"sample-heading\">Reset / clear form input </h2>\n","inBody":true,"id":15,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Reset / clear form input\n","code":"","preview":"","inBody":true,"id":16,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"reset-/-clear-form-input","name":"Reset / clear form input"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Reset / clear form input\n"},{"doc_":"\nYou can use either an `<input type=\"reset\">` or the `clear` action for clearing input fields.\n\n","code":"<form class=\"sample-form\"\n  id=\"formResetSample\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"text\"\n    placeholder=\"Some text...\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <input type=\"reset\"\n    value=\"Reset\">\n  <button type=\"button\"\n    on=\"tap:formResetSample.clear\">Clear input</button>\n</form>\n","preview":"  <form class=\"sample-form\"\n    id=\"formResetSample\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"text\"\n      placeholder=\"Some text...\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <input type=\"reset\"\n      value=\"Reset\">\n    <button type=\"button\"\n      on=\"tap:formResetSample.clear\">Clear input</button>\n  </form>\n","inBody":true,"id":17,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nYou can use either an `<input type=\"reset\">` or the `clear` action for clearing input fields.\n\n"},{"doc_":"","code":"\n<h2 class=\"sample-heading\">Hiding inputs after a successful submission</h2>\n","preview":"\n  <h2 class=\"sample-heading\">Hiding inputs after a successful submission</h2>\n","inBody":true,"id":18,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Hiding input fields after a successful submission\n","code":"","preview":"","inBody":true,"id":19,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"hiding-input-fields-after-a-successful-submission","name":"Hiding input fields after a successful submission"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Hiding input fields after a successful submission\n"},{"doc_":"\nUse the `amp-form-submit-success` class to hide input fields after a successful submission.\nThe following CSS rule hides all form input fields after successful form submission:\n\n[sourcecode:css]\nform.amp-form-submit-success > input {\n  display: none\n}\n[/sourcecode]\n\n","code":"<form class=\"sample-form hide-inputs\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\">\n  <input type=\"text\"\n    name=\"name\"\n    placeholder=\"Name...\"\n    required>\n  <input type=\"submit\"\n    value=\"Subscribe\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form hide-inputs\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-input-text-xhr\">\n    <input type=\"text\"\n      name=\"name\"\n      placeholder=\"Name...\"\n      required>\n    <input type=\"submit\"\n      value=\"Subscribe\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":20,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse the `amp-form-submit-success` class to hide input fields after a successful submission.\nThe following CSS rule hides all form input fields after successful form submission:\n\n```css\nform.amp-form-submit-success > input {\n  display: none\n}\n```\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":21,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=date\n","code":"","preview":"","inBody":true,"id":22,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=date","name":"Input type=date"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=date\n"},{"doc_":"\n`amp-form` supports all HTML5 form types with the exception of file and image. It's recommended to use the [`amp-date-picker`](/content/amp-dev/documentation/components/reference/amp-date-picker-v0.1.md) component for input fields that should contain a date.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input name=\"select-date\"\n    type=\"date\"\n    value=\"2020-12-30\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input name=\"select-date\"\n      type=\"date\"\n      value=\"2020-12-30\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":23,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n`amp-form` supports all HTML5 form types with the exception of file and image. It's recommended to use the [`amp-date-picker`](/content/amp-dev/documentation/components/reference/amp-date-picker-v0.1.md) component for input fields that should contain a date.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"month\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"month\"</h2>\n","inBody":true,"id":24,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=month\n","code":"","preview":"","inBody":true,"id":25,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=month","name":"Input type=month"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=month\n"},{"doc_":"\nUse `type=\"month\"` for input fields that should contain a month.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input name=\"select-month\"\n    type=\"month\"\n    value=\"2020-12\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input name=\"select-month\"\n      type=\"month\"\n      value=\"2020-12\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":26,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"month\"` for input fields that should contain a month.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"week\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"week\"</h2>\n","inBody":true,"id":27,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=week\n","code":"","preview":"","inBody":true,"id":28,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=week","name":"Input type=week"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=week\n"},{"doc_":"\nUse `type=\"week\"` for input fields that should contain a week.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"week\"\n    name=\"week_year\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"week\"\n      name=\"week_year\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":29,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"week\"` for input fields that should contain a week.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"datetime-local\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"datetime-local\"</h2>\n","inBody":true,"id":30,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=datetime-local\n","code":"","preview":"","inBody":true,"id":31,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=datetime-local","name":"Input type=datetime-local"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=datetime-local\n"},{"doc_":"\nUse `type=\"datetime-local\"` for input fields that should contain a date and time.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input name=\"select-datetime\"\n    type=\"datetime-local\"\n    value=\"2020-12-30T12:34:56\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input name=\"select-datetime\"\n      type=\"datetime-local\"\n      value=\"2020-12-30T12:34:56\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":32,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"datetime-local\"` for input fields that should contain a date and time.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"time\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"time\"</h2>\n","inBody":true,"id":33,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=time\n","code":"","preview":"","inBody":true,"id":34,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=time","name":"Input type=time"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=time\n"},{"doc_":"\nUse `type=\"time\"` for input fields that should contain a time.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"time\"\n    name=\"time_now\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"time\"\n      name=\"time_now\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":35,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"time\"` for input fields that should contain a time.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"checkbox\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"checkbox\"</h2>\n","inBody":true,"id":36,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=checkbox\n","code":"","preview":"","inBody":true,"id":37,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=checkbox","name":"Input type=checkbox"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=checkbox\n"},{"doc_":"\nUse `type=\"checkbox\"` to let the user select ZERO or MORE options of a limited number of choices.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"checkbox\"\n    id=\"animal1\"\n    name=\"animal1\"\n    value=\"Cats\">\n  <label for=\"animal1\">I like cats</label>\n  <input type=\"checkbox\"\n    id=\"animal2\"\n    name=\"animal2\"\n    value=\"Dogs\">\n  <label for=\"animal2\"> I like dogs </label>\n  <button type=\"submit\"\n    value=\"OK\">OK</button>\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"checkbox\"\n      id=\"animal1\"\n      name=\"animal1\"\n      value=\"Cats\">\n    <label for=\"animal1\">I like cats</label>\n    <input type=\"checkbox\"\n      id=\"animal2\"\n      name=\"animal2\"\n      value=\"Dogs\">\n    <label for=\"animal2\"> I like dogs </label>\n    <button type=\"submit\"\n      value=\"OK\">OK</button>\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":38,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"checkbox\"` to let the user select ZERO or MORE options of a limited number of choices.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"email\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"email\"</h2>\n","inBody":true,"id":39,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=email\n","code":"","preview":"","inBody":true,"id":40,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=email","name":"Input type=email"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=email\n"},{"doc_":"\nUse `type=\"email\"` for input fields that should contain an e-mail address.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"email\"\n    name=\"email\"\n    placeholder=\"Email...\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"email\"\n      name=\"email\"\n      placeholder=\"Email...\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":41,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"email\"` for input fields that should contain an e-mail address.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"hidden\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"hidden\"</h2>\n","inBody":true,"id":42,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=hidden\n","code":"","preview":"","inBody":true,"id":43,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=hidden","name":"Input type=hidden"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=hidden\n"},{"doc_":"\nUse `type=\"hidden\"` to define a field not visible to a user.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"hidden\"\n    name=\"city\"\n    value=\"London\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"hidden\"\n      name=\"city\"\n      value=\"London\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":44,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"hidden\"` to define a field not visible to a user.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"number\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"number\"</h2>\n","inBody":true,"id":45,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=number\n","code":"","preview":"","inBody":true,"id":46,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=number","name":"Input type=number"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=number\n"},{"doc_":"\nUse `type=\"number\"` for input fields that should contain a numeric value.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"number\"\n    name=\"quantity\"\n    min=\"1\"\n    max=\"5\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"number\"\n      name=\"quantity\"\n      min=\"1\"\n      max=\"5\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":47,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"number\"` for input fields that should contain a numeric value.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"radio\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"radio\"</h2>\n","inBody":true,"id":48,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=radio\n","code":"","preview":"","inBody":true,"id":49,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=radio","name":"Input type=radio"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=radio\n"},{"doc_":"\nUse `type=\"radio\"` to let a user select ONLY ONE of a limited number of choices.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"radio\"\n    id=\"cat\"\n    name=\"favourite animal\"\n    value=\"cat\"\n    checked>\n  <label for=\"cat\">Cat</label>\n  <input type=\"radio\"\n    id=\"dog\"\n    name=\"favourite animal\"\n    value=\"dog\">\n  <label for=\"dog\">Dog</label>\n  <input type=\"radio\"\n    id=\"other\"\n    name=\"favourite animal\"\n    value=\"other\">\n  <label for=\"other\">Other</label>\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"radio\"\n      id=\"cat\"\n      name=\"favourite animal\"\n      value=\"cat\"\n      checked>\n    <label for=\"cat\">Cat</label>\n    <input type=\"radio\"\n      id=\"dog\"\n      name=\"favourite animal\"\n      value=\"dog\">\n    <label for=\"dog\">Dog</label>\n    <input type=\"radio\"\n      id=\"other\"\n      name=\"favourite animal\"\n      value=\"other\">\n    <label for=\"other\">Other</label>\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":50,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"radio\"` to let a user select ONLY ONE of a limited number of choices.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"range\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"range\"</h2>\n","inBody":true,"id":51,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=range\n","code":"","preview":"","inBody":true,"id":52,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=range","name":"Input type=range"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=range\n"},{"doc_":"\nUse `type=\"range\"` for input fields that should contain a value within a range.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"range\"\n    name=\"points\"\n    min=\"0\"\n    max=\"10\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"range\"\n      name=\"points\"\n      min=\"0\"\n      max=\"10\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":53,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"range\"` for input fields that should contain a value within a range.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"tel\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"tel\"</h2>\n","inBody":true,"id":54,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=tel\n","code":"","preview":"","inBody":true,"id":55,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=tel","name":"Input type=tel"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=tel\n"},{"doc_":"\nUse `type=\"tel\"` for input fields that should contain a telephone number.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"tel\"\n    name=\"my_tel\"\n    placeholder=\"Telephone...\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"tel\"\n      name=\"my_tel\"\n      placeholder=\"Telephone...\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":56,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"tel\"` for input fields that should contain a telephone number.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"url\"</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"url\"</h2>\n","inBody":true,"id":57,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input type=url\n","code":"","preview":"","inBody":true,"id":58,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-type=url","name":"Input type=url"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input type=url\n"},{"doc_":"\nUse `type=\"url\"` for input fields that should contain a URL address.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <input type=\"url\"\n    placeholder=\"URL...\"\n    name=\"website\">\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <input type=\"url\"\n      placeholder=\"URL...\"\n      name=\"website\">\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":59,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `type=\"url\"` for input fields that should contain a URL address.\n\n"},{"doc_":"","code":"<h2 class=\"sample-heading\">Input type=\"password\"</h2>\n<h2 class=\"sample-heading\">Input select</h2>\n","preview":"  <h2 class=\"sample-heading\">Input type=\"password\"</h2>\n  <h2 class=\"sample-heading\">Input select</h2>\n","inBody":true,"id":60,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Input select\n","code":"","preview":"","inBody":true,"id":61,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"input-select","name":"Input select"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Input select\n"},{"doc_":"\nUse `select` element for dropdowns.\n\n","code":"<form class=\"sample-form\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n  <select name=\"cars\"\n    id=\"cars\">\n    <option value=\"volvo\">Volvo</option>\n    <option value=\"saab\">Saab</option>\n    <option value=\"fiat\">Fiat</option>\n    <option value=\"audi\">Audi</option>\n  </select>\n  <label for=\"cars\">Select a car</label>\n  <input type=\"submit\"\n    value=\"OK\">\n  <div submit-success>\n    Success!\n  </div>\n  <div submit-error>\n    Error!\n  </div>\n</form>\n","preview":"  <form class=\"sample-form\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/api/submit-form-xhr\">\n    <select name=\"cars\"\n      id=\"cars\">\n      <option value=\"volvo\">Volvo</option>\n      <option value=\"saab\">Saab</option>\n      <option value=\"fiat\">Fiat</option>\n      <option value=\"audi\">Audi</option>\n    </select>\n    <label for=\"cars\">Select a car</label>\n    <input type=\"submit\"\n      value=\"OK\">\n    <div submit-success>\n      Success!\n    </div>\n    <div submit-error>\n      Error!\n    </div>\n  </form>\n","inBody":true,"id":62,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse `select` element for dropdowns.\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":63,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\"><style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"  :root {\n    --space-1: .5rem;  /* 8px */\n    --space-2: 1rem;   /* 16px */\n    --space-3: 1.5rem; /* 24px */\n  }\n\n  /* Hides all inputs after successful form submission */\n  form.amp-form-submit-success.sample-form.hide-inputs > input {\n    display: none;\n  }\n\n  /* sample styles */\n  .sample-form {\n    padding: 0 var(--space-2);\n  }\n  .sample-form > * {\n    margin: var(--space-1);\n  }\n  .sample-heading {\n    margin: 0 var(--space-3);\n    margin-top: var(--space-3);\n    font-size: 18px;\n  }\n","title":"amp-form","metadata":{"preview":"default","author":"kul3r4"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":false,"isAmpAds":false,"isAmpEmail":true,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"The amp-form extension allows the usage of forms and input fields in an AMP document."},"route":"/documentation/examples/components/amp-form.email/index.html"}