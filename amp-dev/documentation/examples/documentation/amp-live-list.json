{"filePath":"examples/source/1.components/amp-live-list/index.html","source":"<!--\n  ## Introduction\n\n  The [`amp-live-list`](/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md) component adds support for publishing live updates to AMP pages as new content becomes available in the source document. This works great for implementing live blogs. Find an example of a live blog [here](/samples_templates/live_blog).\n\n  In other words, the AMP runtime will poll the server for updates to the origin document, fetching itself. The server can return the entire AMP page [or parts of it](https://github.com/ampproject/amphtml/blob/master/extensions/amp-live-list/amp-live-list-server-side-filtering.md), and the runtime updates the page in-place seamlessly.\n\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>amp-live-list</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <!-- ## Setup -->\n  <!--\n  Import the `amp-live-list` component in the header.\n  -->\n  <script async custom-element=\"amp-live-list\" src=\"https://cdn.ampproject.org/v0/amp-live-list-0.1.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-live-list/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n  <style amp-custom>\n    :root {\n      --space-2: 1rem;  /* 8px */\n\t\t\t--color-primary: #005AF0;\n    }\n    amp-live-list [items] {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n    .blog-item {\n      width: 300px;\n      margin-bottom: var(--space-2);\n    }\n    .blog-item > div {\n      padding: var(--space-2);\n    }\n    .time {\n      font-size: var(--space-2);\n      margin: var(--space-2);\n    }\n    time {\n      font-weight: 700;\n      color: var(--color-primary);\n    }\n  </style>\n</head>\n<body>\n  <!-- ## Update after user interaction: live blog -->\n\n  <!--\n    Use the `data-poll-interval` attribute to specify how frequently the `amp-live-list` component will poll new data. The minimum interval is 15 seconds.\n    Use `data-max-items-per-page` to specify the maximum number displayed on the page.\n    For an extensive explanation of all the attributes, refer to [amp-live-list](/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md).\n\n    Use `on=\"tap:my-live-list.update\"` to load the latest changes from the server.\n    A button will appear when the AMP runtime discovers new document changes. Note that the button has to be defined as a direct child of `amp-live-list` .\n\n    An `amp-live-list` must contain a list of items below `<div items>`. Each item has a specific id and the `amp-live-list` will look for items with new id.\n\n    Important: By clicking on the button \"You have updates\", new content is displayed on the demo column (the one on the right if the demo is accessed by desktop). The code column (the one in the center if the demo is accessed by desktop) does not update itself, but if you want to see all the items on the page, reload the page.\n    -->\n  <amp-live-list layout=\"container\" data-poll-interval=\"15000\" data-max-items-per-page=\"5\" id=\"amp-live-list-insert-blog\">\n    <button update on=\"tap:amp-live-list-insert-blog.update\">You have updates</button>\n    <div items>\n      [% for item in  blogItems %]\n          <div id=\"[= item.id =]\" data-sort-time=\"[= item.timestamp =]\" class=\"blog-item\">\n              <amp-img src=\"[= item.img =]\" layout=\"responsive\" width=\"1280\" height=\"853\">\n              </amp-img>\n              <div>[= item.text =]</div>\n          </div>\n        [% endfor %]\n    </div>\n  </amp-live-list>\n  <!--\n    Note: the contents of the `amp-live-list` are generated randomly (for easier and repeatable testing).\n\n    ## Automatic update\n\n    If you want to update existing list items without user interaction, you need to specify via the `data-update-time` attribute when the update has been performed.\n    The following example will display and automatically update the current time. This approach is great for displaying live scores or live market values.\n  -->\n    <amp-live-list layout=\"container\" data-poll-interval=\"15000\" data-max-items-per-page=\"1\" id=\"amp-live-list-update\">\n      <button update on=\"tap:amp-live-list-insert-blog.update\">You have updates</button>\n      <div items>\n        <div id=\"time\" data-sort-time=\"1234567\" data-update-time=\"[= timestamp =]\" class=\"time\">\n          The time is: <time>[= time =]</time>\n        </div>\n      </div>\n  </amp-live-list>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThe [`amp-live-list`](/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md) component adds support for publishing live updates to AMP pages as new content becomes available in the source document. This works great for implementing live blogs. Find an example of a live blog [here](/samples_templates/live_blog).\n\nIn other words, the AMP runtime will poll the server for updates to the origin document, fetching itself. The server can return the entire AMP page [or parts of it](https://github.com/ampproject/amphtml/blob/master/extensions/amp-live-list/amp-live-list-server-side-filtering.md), and the runtime updates the page in-place seamlessly.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">The <a href=\"/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md\"><code>amp-live-list</code></a> component adds support for publishing live updates to AMP pages as new content becomes available in the source document. This works great for implementing live blogs. Find an example of a live blog <a href=\"/samples_templates/live_blog\">here</a>.</p><p class=\"mb2 px1\">In other words, the AMP runtime will poll the server for updates to the origin document, fetching itself. The server can return the entire AMP page <a href=\"https://github.com/ampproject/amphtml/blob/master/extensions/amp-live-list/amp-live-list-server-side-filtering.md\">or parts of it</a>, and the runtime updates the page in-place seamlessly.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThe [`amp-live-list`](/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md) component adds support for publishing live updates to AMP pages as new content becomes available in the source document. This works great for implementing live blogs. Find an example of a live blog [here](/samples_templates/live_blog).\n\nIn other words, the AMP runtime will poll the server for updates to the origin document, fetching itself. The server can return the entire AMP page [or parts of it](https://github.com/ampproject/amphtml/blob/master/extensions/amp-live-list/amp-live-list-server-side-filtering.md), and the runtime updates the page in-place seamlessly.\n\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>amp-live-list</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"\nImport the `amp-live-list` component in the header.\n\n","code":"<script async custom-element=\"amp-live-list\" src=\"https://cdn.ampproject.org/v0/amp-live-list-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nImport the `amp-live-list` component in the header.\n\n"},{"doc_":"","code":"<link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-live-list/index.html\">\n<meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n<style amp-custom>\n  :root {\n    --space-2: 1rem;  /* 8px */\n      --color-primary: #005AF0;\n  }\n  amp-live-list [items] {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .blog-item {\n    width: 300px;\n    margin-bottom: var(--space-2);\n  }\n  .blog-item > div {\n    padding: var(--space-2);\n  }\n  .time {\n    font-size: var(--space-2);\n    margin: var(--space-2);\n  }\n  time {\n    font-weight: 700;\n    color: var(--color-primary);\n  }\n</style>\n</head>\n<body>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Update after user interaction: live blog\n","code":"\n","preview":"\n","inBody":true,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"update-after-user-interaction:-live-blog","name":"Update after user interaction: live blog"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Update after user interaction: live blog\n"},{"doc_":"\nUse the `data-poll-interval` attribute to specify how frequently the `amp-live-list` component will poll new data. The minimum interval is 15 seconds.\nUse `data-max-items-per-page` to specify the maximum number displayed on the page.\nFor an extensive explanation of all the attributes, refer to [amp-live-list](/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md).\n\nUse `on=\"tap:my-live-list.update\"` to load the latest changes from the server.\nA button will appear when the AMP runtime discovers new document changes. Note that the button has to be defined as a direct child of `amp-live-list` .\n\nAn `amp-live-list` must contain a list of items below `<div items>`. Each item has a specific id and the `amp-live-list` will look for items with new id.\n\nImportant: By clicking on the button \"You have updates\", new content is displayed on the demo column (the one on the right if the demo is accessed by desktop). The code column (the one in the center if the demo is accessed by desktop) does not update itself, but if you want to see all the items on the page, reload the page.\n\n","code":"<amp-live-list layout=\"container\"\n  data-poll-interval=\"15000\"\n  data-max-items-per-page=\"5\"\n  id=\"amp-live-list-insert-blog\">\n  <button update\n    on=\"tap:amp-live-list-insert-blog.update\">You have updates</button>\n  <div items>\n    [% for item in blogItems %]\n    <div id=\"[= item.id =]\"\n      data-sort-time=\"[= item.timestamp =]\"\n      class=\"blog-item\">\n      <amp-img src=\"[= item.img =]\"\n        layout=\"responsive\"\n        width=\"1280\"\n        height=\"853\">\n      </amp-img>\n      <div>[= item.text =]</div>\n    </div>\n    [% endfor %]\n  </div>\n</amp-live-list>\n","preview":"  <amp-live-list layout=\"container\"\n    data-poll-interval=\"15000\"\n    data-max-items-per-page=\"5\"\n    id=\"amp-live-list-insert-blog\">\n    <button update\n      on=\"tap:amp-live-list-insert-blog.update\">You have updates</button>\n    <div items>\n      [% for item in blogItems %]\n      <div id=\"[= item.id =]\"\n        data-sort-time=\"[= item.timestamp =]\"\n        class=\"blog-item\">\n        <amp-img src=\"[= item.img =]\"\n          layout=\"responsive\"\n          width=\"1280\"\n          height=\"853\">\n        </amp-img>\n        <div>[= item.text =]</div>\n      </div>\n      [% endfor %]\n    </div>\n  </amp-live-list>\n","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nUse the `data-poll-interval` attribute to specify how frequently the `amp-live-list` component will poll new data. The minimum interval is 15 seconds.\nUse `data-max-items-per-page` to specify the maximum number displayed on the page.\nFor an extensive explanation of all the attributes, refer to [amp-live-list](/content/amp-dev/documentation/components/reference/amp-live-list-v0.1.md).\n\nUse `on=\"tap:my-live-list.update\"` to load the latest changes from the server.\nA button will appear when the AMP runtime discovers new document changes. Note that the button has to be defined as a direct child of `amp-live-list` .\n\nAn `amp-live-list` must contain a list of items below `<div items>`. Each item has a specific id and the `amp-live-list` will look for items with new id.\n\nImportant: By clicking on the button \"You have updates\", new content is displayed on the demo column (the one on the right if the demo is accessed by desktop). The code column (the one in the center if the demo is accessed by desktop) does not update itself, but if you want to see all the items on the page, reload the page.\n\n"},{"doc_":"\nNote: the contents of the `amp-live-list` are generated randomly (for easier and repeatable testing).\n\n## Automatic update\n\nIf you want to update existing list items without user interaction, you need to specify via the `data-update-time` attribute when the update has been performed.\nThe following example will display and automatically update the current time. This approach is great for displaying live scores or live market values.\n\n","code":"<amp-live-list layout=\"container\"\n  data-poll-interval=\"15000\"\n  data-max-items-per-page=\"1\"\n  id=\"amp-live-list-update\">\n  <button update\n    on=\"tap:amp-live-list-insert-blog.update\">You have updates</button>\n  <div items>\n    <div id=\"time\"\n      data-sort-time=\"1234567\"\n      data-update-time=\"[= timestamp =]\"\n      class=\"time\">\n      The time is: <time>[= time =]</time>\n    </div>\n  </div>\n</amp-live-list>\n","preview":"  <amp-live-list layout=\"container\"\n    data-poll-interval=\"15000\"\n    data-max-items-per-page=\"1\"\n    id=\"amp-live-list-update\">\n    <button update\n      on=\"tap:amp-live-list-insert-blog.update\">You have updates</button>\n    <div items>\n      <div id=\"time\"\n        data-sort-time=\"1234567\"\n        data-update-time=\"[= timestamp =]\"\n        class=\"time\">\n        The time is: <time>[= time =]</time>\n      </div>\n    </div>\n  </amp-live-list>\n","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"automatic-update","name":"Automatic update"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nNote: the contents of the `amp-live-list` are generated randomly (for easier and repeatable testing).\n\n## Automatic update\n\nIf you want to update existing list items without user interaction, you need to specify via the `data-update-time` attribute when the update has been performed.\nThe following example will display and automatically update the current time. This approach is great for displaying live scores or live market values.\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":8,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <title>amp-live-list</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-live-list\" src=\"https://cdn.ampproject.org/v0/amp-live-list-0.1.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-live-list/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n","styles":"    :root {\n      --space-2: 1rem;  /* 8px */\n\t\t\t--color-primary: #005AF0;\n    }\n    amp-live-list [items] {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n    .blog-item {\n      width: 300px;\n      margin-bottom: var(--space-2);\n    }\n    .blog-item > div {\n      padding: var(--space-2);\n    }\n    .time {\n      font-size: var(--space-2);\n      margin: var(--space-2);\n    }\n    time {\n      font-weight: 700;\n      color: var(--color-primary);\n    }\n","title":"amp-live-list","metadata":{"preview":"default"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"The amp-live-list component adds support for publishing live updates to AMP pages as new content becomes available in the source document."},"route":"/documentation/examples/components/amp-live-list/index.html"}