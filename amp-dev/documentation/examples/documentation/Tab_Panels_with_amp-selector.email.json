{"filePath":"examples/source/style-layout/Tab_Panels_with_amp-selector.html","source":"<!--\n  ## Introduction\n\n  This is an implementation of tab panels that uses [`amp-selector`](/amp-dev/documentation/components/reference/amp-selector-v0.1.md). Tabs and tab panels are positioned via `flexbox` and `amp-selector` uses the `selected` attribute to show/hide the correct tab panel and style the selected tab.\n--><!-- -->\n<!doctype html>\n<html ⚡4email>\n<head>\n<meta charset=\"utf-8\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <!-- ## Setup -->\n    <!-- Import `amp-selector` component in the header which we'll use to implement the tab switching. -->\n    <script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n    <!-- There's just a bit of CSS that's needed. -->\n    <style amp-custom>\n        :root {\n          --color-primary: #005AF0;\n          --space-1: .5rem;  /* 8px */\n          --space-4: 2rem;   /* 32px */\n        }\n\n        /* Styles for the flex layout based tabs */\n        amp-selector[role=tablist].tabs-with-flex {\n            display: flex;\n            flex-wrap: wrap;\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tab] {\n            flex-grow: 1;\n            /* custom styling, feel free to change */\n            text-align: center;\n            padding: var(--space-1);\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tab][selected] {\n            outline: none;\n            /* custom styling, feel free to change */\n            border-bottom: 2px solid var(--color-primary);\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tabpanel] {\n            display: none;\n            width: 100%;\n            order: 1; /* must be greater than the order of the tab buttons to flex to the next line */\n            /* custom styling, feel free to change */\n            padding: var(--space-4);\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tab][selected] + [role=tabpanel] {\n            display: block;\n        }\n\n        /* Styles for the selector based tabs */\n        amp-selector[role=tablist].tabs-with-selector {\n            display: flex;\n        }\n        amp-selector[role=tablist].tabs-with-selector [role=tab][selected] {\n            outline: none;\n            /* custom styling, feel free to change */\n            border-bottom: 2px solid var(--color-primary);\n        }\n        amp-selector[role=tablist].tabs-with-selector {\n            display: flex;\n        }\n        amp-selector[role=tablist].tabs-with-selector [role=tab] {\n          /* custom styling, feel free to change */\n          width: 100%;\n          text-align: center;\n          padding: var(--space-1);\n        }\n        amp-selector.tabpanels [role=tabpanel] {\n          display: none;\n          /* custom styling, feel free to change */\n          padding: var(--space-4);\n        }\n        amp-selector.tabpanels [role=tabpanel][selected] {\n          outline: none;\n          display: block;\n        }\n\n    </style>\n    <style amp4email-boilerplate>body{visibility:hidden}</style>\n</head>\n<body>\n    <!--\n      ## Simple tabs using a flex layout\n\n      This is the most basic example with three panels. Each `tabpanel` is defined below it's `tab` and is hidden by default. Only if a `tab` is selected, the `tabpanel` is set to visible via the following CSS rule:\n\n      ```css\n      amp-selector[role=tablist] [role=tab][selected] + [role=tabpanel] {\n        display: block;\n      }\n      ```\n\n      The tab content is positioned below the tab button using a flex layout.\n    -->\n    <amp-selector class=\"tabs-with-flex\" role=\"tablist\">\n      <div id=\"tab1\" role=\"tab\" aria-controls=\"tabpanel1\" option selected>Tab one</div>\n      <div id=\"tabpanel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">Tab one content... </div>\n      <div id=\"tab2\" role=\"tab\" aria-controls=\"tabpanel2\" option>Tab two</div>\n      <div id=\"tabpanel2\" role=\"tabpanel\" aria-labelledby=\"tab2\">Tab two content... </div>\n      <div id=\"tab3\" role=\"tab\" aria-controls=\"tabpanel3\" option>Tab three</div>\n      <div id=\"tabpanel3\" role=\"tabpanel\" aria-labelledby=\"tab3\">Tab three content... </div>\n    </amp-selector>\n\n    <!--\n      ## Selecting a tab via a button\n\n      We can use the `amp-selector`'s `toggle` action to activate specific tabs: `on=\"tap:myTabs.toggle(index=0, value=true)\"`.\n    -->\n    <div>\n      <button on=\"tap:myTabs.toggle(index=0, value=true)\">Select tab 1</button>\n      <button on=\"tap:myTabs.toggle(index=1, value=true)\">Select tab 2</button>\n      <button on=\"tap:myTabs.toggle(index=2, value=true)\">Select tab 3</button>\n\n      <amp-selector id=\"myTabs\" class=\"tabs-with-flex\" role=\"tablist\">\n        <div id=\"sample2-tab1\" role=\"tab\" aria-controls=\"sample2-tabpanel1\" option selected>Tab one</div>\n        <div id=\"sample2-tabpanel1\" role=\"tabpanel\" aria-labelledby=\"sample2-tab1\">Tab one content... </div>\n        <div id=\"sample2-tab2\" role=\"tab\" aria-controls=\"sample2-tabpanel2\" option>Tab two</div>\n        <div id=\"sample2-tabpanel2\" role=\"tabpanel\" aria-labelledby=\"sample2-tab2\">Tab two content... </div>\n        <div id=\"sample2-tab3\" role=\"tab\" aria-controls=\"sample2-tabpanel3\" option>Tab three</div>\n        <div id=\"sample2-tabpanel3\" role=\"tabpanel\" aria-labelledby=\"sample2-tab3\">Tab three content... </div>\n      </amp-selector>\n    </div>\n    <!--\n      ## A more flexible tab layout with two amp-selectors\n\n      If for any reason, the flex layout based approach is not feasible, it's possible to implement tabs and tabpanels using two different `amp-selectors`.\n     -->\n    <div>\n      <amp-selector class=\"tabs-with-selector\" role=\"tablist\" on=\"select:myTabPanels.toggle(index=event.targetOption, value=true)\">\n        <div id=\"sample3-tab1\" role=\"tab\" aria-controls=\"sample3-tabpanel1\" option=\"0\" selected>Tab one</div>\n        <div id=\"sample3-tab2\" role=\"tab\" aria-controls=\"sample3-tabpanel2\" option=\"1\">Tab two</div>\n        <div id=\"sample3-tab3\" role=\"tab\" aria-controls=\"sample3-tabpanel3\" option=\"2\">Tab three</div>\n      </amp-selector>\n\n      <amp-selector id=\"myTabPanels\" class=\"tabpanels\">\n        <div id=\"sample3-tabpanel1\" role=\"tabpanel\" aria-labelledby=\"sample3-tab1\" option selected>Tab one content... </div>\n        <div id=\"sample3-tabpanel2\" role=\"tabpanel\" aria-labelledby=\"sample3-tab2\" option>Tab two content... </div>\n        <div id=\"sample3-tabpanel3\" role=\"tabpanel\" aria-labelledby=\"sample3-tab3\" option>Tab three content... </div>\n      </amp-selector>\n    </div>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThis is an implementation of tab panels that uses [`amp-selector`](/amp-dev/documentation/components/reference/amp-selector-v0.1.md). Tabs and tab panels are positioned via `flexbox` and `amp-selector` uses the `selected` attribute to show/hide the correct tab panel and style the selected tab.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">This is an implementation of tab panels that uses <a href=\"/amp-dev/documentation/components/reference/amp-selector-v0.1.md\"><code>amp-selector</code></a>. Tabs and tab panels are positioned via <code>flexbox</code> and <code>amp-selector</code> uses the <code>selected</code> attribute to show/hide the correct tab panel and style the selected tab.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThis is an implementation of tab panels that uses [`amp-selector`](/amp-dev/documentation/components/reference/amp-selector-v0.1.md). Tabs and tab panels are positioned via `flexbox` and `amp-selector` uses the `selected` attribute to show/hide the correct tab panel and style the selected tab.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡4email>\n<head>\n<meta charset=\"utf-8\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"Import `amp-selector` component in the header which we'll use to implement the tab switching. \n","code":"<script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Import `amp-selector` component in the header which we'll use to implement the tab switching. \n"},{"doc_":"There's just a bit of CSS that's needed. \n","code":"<style amp-custom>\n    :root {\n      --color-primary: #005AF0;\n      --space-1: .5rem;  /* 8px */\n      --space-4: 2rem;   /* 32px */\n    }\n\n    /* Styles for the flex layout based tabs */\n    amp-selector[role=tablist].tabs-with-flex {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    amp-selector[role=tablist].tabs-with-flex [role=tab] {\n        flex-grow: 1;\n        /* custom styling, feel free to change */\n        text-align: center;\n        padding: var(--space-1);\n    }\n    amp-selector[role=tablist].tabs-with-flex [role=tab][selected] {\n        outline: none;\n        /* custom styling, feel free to change */\n        border-bottom: 2px solid var(--color-primary);\n    }\n    amp-selector[role=tablist].tabs-with-flex [role=tabpanel] {\n        display: none;\n        width: 100%;\n        order: 1; /* must be greater than the order of the tab buttons to flex to the next line */\n        /* custom styling, feel free to change */\n        padding: var(--space-4);\n    }\n    amp-selector[role=tablist].tabs-with-flex [role=tab][selected] + [role=tabpanel] {\n        display: block;\n    }\n\n    /* Styles for the selector based tabs */\n    amp-selector[role=tablist].tabs-with-selector {\n        display: flex;\n    }\n    amp-selector[role=tablist].tabs-with-selector [role=tab][selected] {\n        outline: none;\n        /* custom styling, feel free to change */\n        border-bottom: 2px solid var(--color-primary);\n    }\n    amp-selector[role=tablist].tabs-with-selector {\n        display: flex;\n    }\n    amp-selector[role=tablist].tabs-with-selector [role=tab] {\n      /* custom styling, feel free to change */\n      width: 100%;\n      text-align: center;\n      padding: var(--space-1);\n    }\n    amp-selector.tabpanels [role=tabpanel] {\n      display: none;\n      /* custom styling, feel free to change */\n      padding: var(--space-4);\n    }\n    amp-selector.tabpanels [role=tabpanel][selected] {\n      outline: none;\n      display: block;\n    }\n\n</style>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"There's just a bit of CSS that's needed. \n"},{"doc_":"","code":"<style amp4email-boilerplate>body{visibility:hidden}</style>\n</head>\n<body>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n## Simple tabs using a flex layout\n\nThis is the most basic example with three panels. Each `tabpanel` is defined below it's `tab` and is hidden by default. Only if a `tab` is selected, the `tabpanel` is set to visible via the following CSS rule:\n\n[sourcecode:css]\namp-selector[role=tablist] [role=tab][selected] + [role=tabpanel] {\n  display: block;\n}\n[/sourcecode]\n\nThe tab content is positioned below the tab button using a flex layout.\n\n","code":"<amp-selector class=\"tabs-with-flex\"\n  role=\"tablist\">\n  <div id=\"tab1\"\n    role=\"tab\"\n    aria-controls=\"tabpanel1\"\n    option\n    selected>Tab one</div>\n  <div id=\"tabpanel1\"\n    role=\"tabpanel\"\n    aria-labelledby=\"tab1\">Tab one content... </div>\n  <div id=\"tab2\"\n    role=\"tab\"\n    aria-controls=\"tabpanel2\"\n    option>Tab two</div>\n  <div id=\"tabpanel2\"\n    role=\"tabpanel\"\n    aria-labelledby=\"tab2\">Tab two content... </div>\n  <div id=\"tab3\"\n    role=\"tab\"\n    aria-controls=\"tabpanel3\"\n    option>Tab three</div>\n  <div id=\"tabpanel3\"\n    role=\"tabpanel\"\n    aria-labelledby=\"tab3\">Tab three content... </div>\n</amp-selector>\n","preview":"  <amp-selector class=\"tabs-with-flex\"\n    role=\"tablist\">\n    <div id=\"tab1\"\n      role=\"tab\"\n      aria-controls=\"tabpanel1\"\n      option\n      selected>Tab one</div>\n    <div id=\"tabpanel1\"\n      role=\"tabpanel\"\n      aria-labelledby=\"tab1\">Tab one content... </div>\n    <div id=\"tab2\"\n      role=\"tab\"\n      aria-controls=\"tabpanel2\"\n      option>Tab two</div>\n    <div id=\"tabpanel2\"\n      role=\"tabpanel\"\n      aria-labelledby=\"tab2\">Tab two content... </div>\n    <div id=\"tab3\"\n      role=\"tab\"\n      aria-controls=\"tabpanel3\"\n      option>Tab three</div>\n    <div id=\"tabpanel3\"\n      role=\"tabpanel\"\n      aria-labelledby=\"tab3\">Tab three content... </div>\n  </amp-selector>\n","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"simple-tabs-using-a-flex-layout","name":"Simple tabs using a flex layout"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Simple tabs using a flex layout\n\nThis is the most basic example with three panels. Each `tabpanel` is defined below it's `tab` and is hidden by default. Only if a `tab` is selected, the `tabpanel` is set to visible via the following CSS rule:\n\n```css\namp-selector[role=tablist] [role=tab][selected] + [role=tabpanel] {\n  display: block;\n}\n```\n\nThe tab content is positioned below the tab button using a flex layout.\n\n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n## Selecting a tab via a button\n\nWe can use the `amp-selector`'s `toggle` action to activate specific tabs: `on=\"tap:myTabs.toggle(index=0, value=true)\"`.\n\n","code":"<button on=\"tap:myTabs.toggle(index=0, value=true)\">Select tab 1</button>\n<button on=\"tap:myTabs.toggle(index=1, value=true)\">Select tab 2</button>\n<button on=\"tap:myTabs.toggle(index=2, value=true)\">Select tab 3</button>\n\n<amp-selector id=\"myTabs\"\n  class=\"tabs-with-flex\"\n  role=\"tablist\">\n  <div id=\"sample2-tab1\"\n    role=\"tab\"\n    aria-controls=\"sample2-tabpanel1\"\n    option\n    selected>Tab one</div>\n  <div id=\"sample2-tabpanel1\"\n    role=\"tabpanel\"\n    aria-labelledby=\"sample2-tab1\">Tab one content... </div>\n  <div id=\"sample2-tab2\"\n    role=\"tab\"\n    aria-controls=\"sample2-tabpanel2\"\n    option>Tab two</div>\n  <div id=\"sample2-tabpanel2\"\n    role=\"tabpanel\"\n    aria-labelledby=\"sample2-tab2\">Tab two content... </div>\n  <div id=\"sample2-tab3\"\n    role=\"tab\"\n    aria-controls=\"sample2-tabpanel3\"\n    option>Tab three</div>\n  <div id=\"sample2-tabpanel3\"\n    role=\"tabpanel\"\n    aria-labelledby=\"sample2-tab3\">Tab three content... </div>\n</amp-selector>","preview":"  <div>\n    <button on=\"tap:myTabs.toggle(index=0, value=true)\">Select tab 1</button>\n    <button on=\"tap:myTabs.toggle(index=1, value=true)\">Select tab 2</button>\n    <button on=\"tap:myTabs.toggle(index=2, value=true)\">Select tab 3</button>\n\n    <amp-selector id=\"myTabs\"\n      class=\"tabs-with-flex\"\n      role=\"tablist\">\n      <div id=\"sample2-tab1\"\n        role=\"tab\"\n        aria-controls=\"sample2-tabpanel1\"\n        option\n        selected>Tab one</div>\n      <div id=\"sample2-tabpanel1\"\n        role=\"tabpanel\"\n        aria-labelledby=\"sample2-tab1\">Tab one content... </div>\n      <div id=\"sample2-tab2\"\n        role=\"tab\"\n        aria-controls=\"sample2-tabpanel2\"\n        option>Tab two</div>\n      <div id=\"sample2-tabpanel2\"\n        role=\"tabpanel\"\n        aria-labelledby=\"sample2-tab2\">Tab two content... </div>\n      <div id=\"sample2-tab3\"\n        role=\"tab\"\n        aria-controls=\"sample2-tabpanel3\"\n        option>Tab three</div>\n      <div id=\"sample2-tabpanel3\"\n        role=\"tabpanel\"\n        aria-labelledby=\"sample2-tab3\">Tab three content... </div>\n    </amp-selector>\n  </div>\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"selecting-a-tab-via-a-button","name":"Selecting a tab via a button"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Selecting a tab via a button\n\nWe can use the `amp-selector`'s `toggle` action to activate specific tabs: `on=\"tap:myTabs.toggle(index=0, value=true)\"`.\n\n"},{"doc_":"\n## A more flexible tab layout with two amp-selectors\n\nIf for any reason, the flex layout based approach is not feasible, it's possible to implement tabs and tabpanels using two different `amp-selectors`.\n\n","code":"<amp-selector class=\"tabs-with-selector\"\n  role=\"tablist\"\n  on=\"select:myTabPanels.toggle(index=event.targetOption, value=true)\">\n  <div id=\"sample3-tab1\"\n    role=\"tab\"\n    aria-controls=\"sample3-tabpanel1\"\n    option=\"0\"\n    selected>Tab one</div>\n  <div id=\"sample3-tab2\"\n    role=\"tab\"\n    aria-controls=\"sample3-tabpanel2\"\n    option=\"1\">Tab two</div>\n  <div id=\"sample3-tab3\"\n    role=\"tab\"\n    aria-controls=\"sample3-tabpanel3\"\n    option=\"2\">Tab three</div>\n</amp-selector>\n\n<amp-selector id=\"myTabPanels\"\n  class=\"tabpanels\">\n  <div id=\"sample3-tabpanel1\"\n    role=\"tabpanel\"\n    aria-labelledby=\"sample3-tab1\"\n    option\n    selected>Tab one content... </div>\n  <div id=\"sample3-tabpanel2\"\n    role=\"tabpanel\"\n    aria-labelledby=\"sample3-tab2\"\n    option>Tab two content... </div>\n  <div id=\"sample3-tabpanel3\"\n    role=\"tabpanel\"\n    aria-labelledby=\"sample3-tab3\"\n    option>Tab three content... </div>\n</amp-selector>","preview":"  <div>\n    <amp-selector class=\"tabs-with-selector\"\n      role=\"tablist\"\n      on=\"select:myTabPanels.toggle(index=event.targetOption, value=true)\">\n      <div id=\"sample3-tab1\"\n        role=\"tab\"\n        aria-controls=\"sample3-tabpanel1\"\n        option=\"0\"\n        selected>Tab one</div>\n      <div id=\"sample3-tab2\"\n        role=\"tab\"\n        aria-controls=\"sample3-tabpanel2\"\n        option=\"1\">Tab two</div>\n      <div id=\"sample3-tab3\"\n        role=\"tab\"\n        aria-controls=\"sample3-tabpanel3\"\n        option=\"2\">Tab three</div>\n    </amp-selector>\n\n    <amp-selector id=\"myTabPanels\"\n      class=\"tabpanels\">\n      <div id=\"sample3-tabpanel1\"\n        role=\"tabpanel\"\n        aria-labelledby=\"sample3-tab1\"\n        option\n        selected>Tab one content... </div>\n      <div id=\"sample3-tabpanel2\"\n        role=\"tabpanel\"\n        aria-labelledby=\"sample3-tab2\"\n        option>Tab two content... </div>\n      <div id=\"sample3-tabpanel3\"\n        role=\"tabpanel\"\n        aria-labelledby=\"sample3-tab3\"\n        option>Tab three content... </div>\n    </amp-selector>\n  </div>\n","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"a-more-flexible-tab-layout-with-two-amp-selectors","name":"A more flexible tab layout with two amp-selectors"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## A more flexible tab layout with two amp-selectors\n\nIf for any reason, the flex layout based approach is not feasible, it's possible to implement tabs and tabpanels using two different `amp-selectors`.\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":10,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\"><style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"        :root {\n          --color-primary: #005AF0;\n          --space-1: .5rem;  /* 8px */\n          --space-4: 2rem;   /* 32px */\n        }\n\n        /* Styles for the flex layout based tabs */\n        amp-selector[role=tablist].tabs-with-flex {\n            display: flex;\n            flex-wrap: wrap;\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tab] {\n            flex-grow: 1;\n            /* custom styling, feel free to change */\n            text-align: center;\n            padding: var(--space-1);\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tab][selected] {\n            outline: none;\n            /* custom styling, feel free to change */\n            border-bottom: 2px solid var(--color-primary);\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tabpanel] {\n            display: none;\n            width: 100%;\n            order: 1; /* must be greater than the order of the tab buttons to flex to the next line */\n            /* custom styling, feel free to change */\n            padding: var(--space-4);\n        }\n        amp-selector[role=tablist].tabs-with-flex [role=tab][selected] + [role=tabpanel] {\n            display: block;\n        }\n\n        /* Styles for the selector based tabs */\n        amp-selector[role=tablist].tabs-with-selector {\n            display: flex;\n        }\n        amp-selector[role=tablist].tabs-with-selector [role=tab][selected] {\n            outline: none;\n            /* custom styling, feel free to change */\n            border-bottom: 2px solid var(--color-primary);\n        }\n        amp-selector[role=tablist].tabs-with-selector {\n            display: flex;\n        }\n        amp-selector[role=tablist].tabs-with-selector [role=tab] {\n          /* custom styling, feel free to change */\n          width: 100%;\n          text-align: center;\n          padding: var(--space-1);\n        }\n        amp-selector.tabpanels [role=tabpanel] {\n          display: none;\n          /* custom styling, feel free to change */\n          padding: var(--space-4);\n        }\n        amp-selector.tabpanels [role=tabpanel][selected] {\n          outline: none;\n          display: block;\n        }\n\n","title":"Tab Panels with amp-selector","metadata":{"preview":"default","teaserImage":"/static/samples/img/teaser/tab_panels_with_amp-selector.jpg","author":"tcorley"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":false,"isAmpAds":false,"isAmpEmail":true,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This is an implementation of tab panels that uses amp-selector."},"route":"/documentation/examples/style-layout/tab_panels_with_amp-selector.email/index.html"}