{"filePath":"examples/source/1.components/amp-bind-recaptcha.html","source":"<!--\n  ## Introduction\n\n  This example shows how to create recaptcha input using just amp-bind.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<title>amp-bind-recaptcha</title>\n    <meta charset=\"utf-8\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-bind-recaptcha/index.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <!-- Import `amp-bind` so recaptcha can have multiple states -->\n    <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n    <!-- Recaptcha input used to verify user for `amp-form` -->\n    <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n  </head>\n  <body>\n    <header>\n      <ol>\n        <li>Type anything in textbox below</li>\n        <li>Answer recaptcha equation correctly</li>\n        <li>Select submit</li>\n      </ol>\n      If you don't know the answer to the equation presented you can refresh the\n      recaptcha equation.\n    </header>\n    <!-- ## Implementation -->\n    <!-- The `amp-state` below defines three different states that the recaptcha equation could be.\n      -->\n    <amp-state id=\"captcha\">\n      <script type=\"application/json\">\n        {\n           \"state1\": {\n                 \"result\": \"10\",\n                 \"condition\": \"+\",\n                 \"captchaCorrect\": \"6\"\n\n           },\n           \"state2\": {\n                 \"result\": \"2\",\n                 \"condition\": \"-\",\n                 \"captchaCorrect\": \"6\"\n           },\n           \"state3\": {\n                 \"result\": \"8\",\n                 \"condition\": \"*\",\n                 \"captchaCorrect\": \"2\"\n           }\n         }\n      </script>\n    </amp-state>\n    <!-- ## Form -->\n    <!-- \n       Recaptcha forces users to provide the correct input using the `[pattern]` requirement. The `[pattern]` updates dynamically as the state changes. In order for the recaptcha to work on first pass, disable the input until the `amp-bind` `'state'` variable is set (i.e. `[disabled]=\"!state\"`). As another workaround, you could set a default pattern (without brackets) and have the `[pattern]` update as user refreshes the conditional. Upon refresh the `'state'` is updated to provide a new equation.\n    -->\n    <form action=\"https://www.google.com/\" method=\"get\" target=\"_top\">\n      <input name=\"s\" placeholder=\"Type Anything\" type=\"text\" on=\"input-debounced:AMP.setState({state: 'state1'})\" required>\n        <input [disabled]=\"!state\" disabled type=\"text\" name [pattern]=\"captcha[state].captchaCorrect\" title=\"AMP recaptcha input\" required>\n        <span [text]=\"captcha[state].condition\">+</span>\n        <span>4</span>\n        <span>=</span>\n        <span [text]=\"captcha[state].result\">10</span>\n        <span on=\"tap:AMP.setState({state: (state == 'state1' ? 'state2' : state == 'state2' ? 'state3': 'state1')})\" role=\"button\" tabindex=\"0\">\n        <amp-img src=\"https://fonts.gstatic.com/s/i/materialicons/autorenew/v4/24px.svg\" width=\"24\" height=\"24\"></amp-img>\n      <input type=\"submit\" value=\"Submit\">\n</span></form></body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThis example shows how to create recaptcha input using just amp-bind.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">This example shows how to create recaptcha input using just amp-bind.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThis example shows how to create recaptcha input using just amp-bind.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<title>amp-bind-recaptcha</title>\n    <meta charset=\"utf-8\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-bind-recaptcha/index.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"Import `amp-bind` so recaptcha can have multiple states \n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Import `amp-bind` so recaptcha can have multiple states \n"},{"doc_":"Recaptcha input used to verify user for `amp-form` \n","code":"<script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Recaptcha input used to verify user for `amp-form` \n"},{"doc_":"","code":"<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n</head>\n<body>\n<header>\n<ol>\n  <li>Type anything in textbox below</li>\n  <li>Answer recaptcha equation correctly</li>\n  <li>Select submit</li>\n</ol>\nIf you don't know the answer to the equation presented you can refresh the\nrecaptcha equation.\n</header>\n","preview":"  <header>\n    <ol>\n      <li>Type anything in textbox below</li>\n      <li>Answer recaptcha equation correctly</li>\n      <li>Select submit</li>\n    </ol>\n    If you don't know the answer to the equation presented you can refresh the\n    recaptcha equation.\n  </header>\n","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Implementation\n","code":"","preview":"","inBody":true,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"implementation","name":"Implementation"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Implementation\n"},{"doc_":"The `amp-state` below defines three different states that the recaptcha equation could be.\n\n","code":"<amp-state id=\"captcha\">\n  <script type=\"application/json\">\n    {\n      \"state1\": {\n        \"result\": \"10\",\n        \"condition\": \"+\",\n        \"captchaCorrect\": \"6\"\n\n      },\n      \"state2\": {\n        \"result\": \"2\",\n        \"condition\": \"-\",\n        \"captchaCorrect\": \"6\"\n      },\n      \"state3\": {\n        \"result\": \"8\",\n        \"condition\": \"*\",\n        \"captchaCorrect\": \"2\"\n      }\n    }\n  </script>\n</amp-state>\n","preview":"  <amp-state id=\"captcha\">\n    <script type=\"application/json\">\n      {\n        \"state1\": {\n          \"result\": \"10\",\n          \"condition\": \"+\",\n          \"captchaCorrect\": \"6\"\n\n        },\n        \"state2\": {\n          \"result\": \"2\",\n          \"condition\": \"-\",\n          \"captchaCorrect\": \"6\"\n        },\n        \"state3\": {\n          \"result\": \"8\",\n          \"condition\": \"*\",\n          \"captchaCorrect\": \"2\"\n        }\n      }\n    </script>\n  </amp-state>\n","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The `amp-state` below defines three different states that the recaptcha equation could be.\n   \n"},{"doc_":"## Form\n","code":"","preview":"","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"form","name":"Form"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Form\n"},{"doc_":"\nRecaptcha forces users to provide the correct input using the `[pattern]` requirement. The `[pattern]` updates dynamically as the state changes. In order for the recaptcha to work on first pass, disable the input until the `amp-bind` `'state'` variable is set (i.e. `[disabled]=\"!state\"`). As another workaround, you could set a default pattern (without brackets) and have the `[pattern]` update as user refreshes the conditional. Upon refresh the `'state'` is updated to provide a new equation.\n\n","code":"<form action=\"https://www.google.com/\"\n  method=\"get\"\n  target=\"_top\">\n  <input name=\"s\"\n    placeholder=\"Type Anything\"\n    type=\"text\"\n    on=\"input-debounced:AMP.setState({state: 'state1'})\"\n    required>\n  <input [disabled]=\"!state\"\n    disabled\n    type=\"text\"\n    name\n    [pattern]=\"captcha[state].captchaCorrect\"\n    title=\"AMP recaptcha input\"\n    required>\n  <span [text]=\"captcha[state].condition\">+</span>\n  <span>4</span>\n  <span>=</span>\n  <span [text]=\"captcha[state].result\">10</span>\n  <span on=\"tap:AMP.setState({state: (state == 'state1' ? 'state2' : state == 'state2' ? 'state3': 'state1')})\"\n    role=\"button\"\n    tabindex=\"0\">\n    <amp-img src=\"https://fonts.gstatic.com/s/i/materialicons/autorenew/v4/24px.svg\"\n      width=\"24\"\n      height=\"24\"></amp-img>\n    <input type=\"submit\"\n      value=\"Submit\">\n  </span></form>\n","preview":"  <form action=\"https://www.google.com/\"\n    method=\"get\"\n    target=\"_top\">\n    <input name=\"s\"\n      placeholder=\"Type Anything\"\n      type=\"text\"\n      on=\"input-debounced:AMP.setState({state: 'state1'})\"\n      required>\n    <input [disabled]=\"!state\"\n      disabled\n      type=\"text\"\n      name\n      [pattern]=\"captcha[state].captchaCorrect\"\n      title=\"AMP recaptcha input\"\n      required>\n    <span [text]=\"captcha[state].condition\">+</span>\n    <span>4</span>\n    <span>=</span>\n    <span [text]=\"captcha[state].result\">10</span>\n    <span on=\"tap:AMP.setState({state: (state == 'state1' ? 'state2' : state == 'state2' ? 'state3': 'state1')})\"\n      role=\"button\"\n      tabindex=\"0\">\n      <amp-img src=\"https://fonts.gstatic.com/s/i/materialicons/autorenew/v4/24px.svg\"\n        width=\"24\"\n        height=\"24\"></amp-img>\n      <input type=\"submit\"\n        value=\"Submit\">\n    </span></form>\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nRecaptcha forces users to provide the correct input using the `[pattern]` requirement. The `[pattern]` updates dynamically as the state changes. In order for the recaptcha to work on first pass, disable the input until the `amp-bind` `'state'` variable is set (i.e. `[disabled]=\"!state\"`). As another workaround, you could set a default pattern (without brackets) and have the `[pattern]` update as user refreshes the conditional. Upon refresh the `'state'` is updated to provide a new equation.\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":9,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<title>amp-bind-recaptcha</title>\n    <meta charset=\"utf-8\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/components/amp-bind-recaptcha/index.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n    <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"","title":"amp-bind-recaptcha","metadata":{"author":"elisameyer"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This example shows how to create recaptcha input using just amp-bind."},"route":"/documentation/examples/components/amp-bind-recaptcha/index.html"}