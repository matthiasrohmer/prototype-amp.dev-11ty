{"filePath":"examples/source/user-consent/Geolocation-based_Consent_Flow.html","source":"<!--\n  ## Introduction\n\n  Sometimes is necessary to ask only users from specific countries for consent. This sample demonstrates\n  how you can use `amp-consent` together with `amp-geo` to achieve this. In this sample we'll build a\n  consent dialog that will show for users from US and another consent dialog that will show for users in the EEA (a predefined country group).\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/user-consent/geolocation-based_consent_flow/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <title>Geolocation-based Consent Flow</title>\n  <!-- ## Setup -->\n  <!--\n  We need to import both, the [`amp-consent`](/amp-dev/documentation/components/reference/amp-consent.md) ...\n  -->\n  <script async custom-element=\"amp-consent\" src=\"https://cdn.ampproject.org/v0/amp-consent-0.1.js\"></script>\n  <!--\n  ... and the [`amp-geo`](/amp-dev/documentation/components/reference/amp-geo.md) extension.\n  -->\n  <script async custom-element=\"amp-geo\" src=\"https://cdn.ampproject.org/v0/amp-geo-0.1.js\"></script>\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n  <style amp-custom>\n    :root {\n      --space-2: 1rem;   /* 16px */\n      --space-3: 1.5rem; /* 24px */\n    }\n    .consentPopup {\n      padding: var(--space-3);\n      margin: 0 auto;\n      background: #fff;\n      border-radius: 5px;\n      position: relative;\n      max-width: 700px;\n      width: 95%;\n    }\n    .consentPopup > h2, /* overwrite ABE style */\n    .consentPopup > * {\n      margin: 0;\n      margin-bottom: var(--space-2);\n    }\n    .consentPopup > button {\n      margin-right: var(--space-2);\n    }\n    .popupOverlay {\n      height: 100vh;\n      width: 100vw;\n      background: rgba(0, 0, 0, 0.7);\n      padding: 5% 0;\n    }\n    .dismiss-button {\n      position: absolute;\n      right: var(--space-3);\n      top: var(--space-2);\n      cursor: pointer;\n    }\n    /* defaults */\n    .default:after {\n      content: 'not in the preset group. No consent is required.';\n    }\n    /* override */\n    .amp-geo-group-eea .default:after {\n      content: 'in the preset eea group. Consent was required.';\n    }\n    #post-consent-ui {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: var(--space-3);\n    }\n  </style>\n</head>\n<body>\n  <!-- ## Setting up amp-geo -->\n  <!-- First we need to setup the [`amp-geo`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md) extension. We'll use the iso code `us` which represents the United States, [`preset-eea`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md#preset-country-groups), and [`unknown`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md#operation)-->\n  <amp-geo layout=\"nodisplay\">\n    <script type=\"application/json\">\n      {\n        \"ISOCountryGroups\": {\n          \"eea\": [ \"preset-eea\", \"unknown\" ],\n          \"us\": [ \"us\" ]\n        }\n      }\n    </script>\n  </amp-geo>\n  <!-- ## Defining the consent flow -->\n  <!--\n    The flow should rely on amp-geo to determine which config to show based upon the user's location, so we set the flag: [`geoOverride`](/amp-dev/documentation/components/reference/amp-consent.md#geoOverride).\n\n    If amp-geo finds that the user is in the US country group, then the contents of the US config will override the top-level consent config (and same for EEA).\n\n    Our final config for an EEA (and unknown) user would look like this: \n    ```json\n    {\n      \"consentInstanceId\": \"world-wide-consent\",\n      \"consentRequired\": true,\n      \"promptUI\": \"eea-consent-ui\",\n      \"postPromptUI\": \"post-consent-ui\"\n    }\n    ```\n    Since `consentRequired` is `true` and `promptUI` is configured, `amp-consent` will show the prompt if no localstorage decision is found.\n\n    Our final config for a US user would look like this: \n    ```json\n    {\n      \"consentInstanceId\": \"world-wide-consent\",\n      \"consentRequired\": \"remote\",\n      \"checkConsentHref\": \"/documentation/examples/api/get-consent-sever-side\",\n      \"promptUI\": null,\n      \"postPromptUI\": \"post-consent-ui\"\n    }\n    ```\n    If no localstorage decision is found and since `consentRequired` is 'remote', `amp-consent` will wait until it gets a response from `checkConsentHref`. In this example, no matter what the response returned, it will not show anything because `promptUI` was overriden to `null` (since there could be an external site to manage user consent).\n\n    And our final config for a user in neither of those geo groups would be: \n    ```json\n    {\n      \"consentInstanceId\": \"world-wide-consent\",\n      \"consentRequired\": false,\n      \"postPromptUI\": \"post-consent-ui\"\n    }\n    ```\n    Localstorage decision will be used if it exists, otherwise, since `consentRequired` is `false`, `amp-consent` will not do anything.\n\n    Note: Use `expireCache: true` in your response to never save consent states to localstorage.\n  -->\n  <amp-consent id=\"myUserConsent\" layout=\"nodisplay\">\n      <script type=\"application/json\">{\n        \"consentInstanceId\": \"world-wide-consent\",\n        \"consentRequired\": false,\n        \"geoOverride\": {\n          \"eea\": {\n            \"promptUI\": \"eea-consent-ui\",\n            \"consentRequired\": true\n          },\n          \"us\": {\n            \"consentRequired\": \"remote\",\n            \"checkConsentHref\": \"/documentation/examples/api/get-consent-server-side\",\n            \"promptUI\": null\n          }\n        },\n        \"postPromptUI\": \"post-consent-ui\"\n      }</script>\n      <div id=\"eea-consent-ui\" class=\"popupOverlay\">\n        <div class=\"consentPopup\">\n          <div class=\"dismiss-button\" role=\"button\" tabindex=\"0\" on=\"tap:myUserConsent.dismiss\">X</div>\n          <h2>Headline</h2>\n          <p>This is an important message requiring you to make a choice if you're based in the EA.</p>\n          <button on=\"tap:myUserConsent.accept\">Accept</button>\n          <button on=\"tap:myUserConsent.reject\">Reject</button>\n        </div>\n      </div>\n      <div id=\"post-consent-ui\">\n        <button on=\"tap:myUserConsent.prompt()\">Update Consent</button>\n      </div>\n    </amp-consent>\n\n    <div>You are <span class=\"default\"></span></div>\n  <!-- ## Testing -->\n  <!--\n  You can test different behaviors by appending custom country codes to the URL and enabling the `dev-channel` [here](https://cdn.ampproject.org/experiments.html), for example:\n\n  - US: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=us](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=us)\n  - EEA: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=de](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=de)\n  - Neither: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=td](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=td)\n  -->\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nSometimes is necessary to ask only users from specific countries for consent. This sample demonstrates\nhow you can use `amp-consent` together with `amp-geo` to achieve this. In this sample we'll build a\nconsent dialog that will show for users from US and another consent dialog that will show for users in the EEA (a predefined country group).\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">Sometimes is necessary to ask only users from specific countries for consent. This sample demonstrates\nhow you can use <code>amp-consent</code> together with <code>amp-geo</code> to achieve this. In this sample we&#39;ll build a\nconsent dialog that will show for users from US and another consent dialog that will show for users in the EEA (a predefined country group).</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nSometimes is necessary to ask only users from specific countries for consent. This sample demonstrates\nhow you can use `amp-consent` together with `amp-geo` to achieve this. In this sample we'll build a\nconsent dialog that will show for users from US and another consent dialog that will show for users in the EEA (a predefined country group).\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/user-consent/geolocation-based_consent_flow/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <title>Geolocation-based Consent Flow</title>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"\nWe need to import both, the [`amp-consent`](/amp-dev/documentation/components/reference/amp-consent.md) ...\n\n","code":"<script async custom-element=\"amp-consent\" src=\"https://cdn.ampproject.org/v0/amp-consent-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWe need to import both, the [`amp-consent`](/amp-dev/documentation/components/reference/amp-consent.md) ...\n\n"},{"doc_":"\n... and the [`amp-geo`](/amp-dev/documentation/components/reference/amp-geo.md) extension.\n\n","code":"<script async custom-element=\"amp-geo\" src=\"https://cdn.ampproject.org/v0/amp-geo-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n... and the [`amp-geo`](/amp-dev/documentation/components/reference/amp-geo.md) extension.\n\n"},{"doc_":"","code":"<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n<style amp-custom>\n  :root {\n    --space-2: 1rem;   /* 16px */\n    --space-3: 1.5rem; /* 24px */\n  }\n  .consentPopup {\n    padding: var(--space-3);\n    margin: 0 auto;\n    background: #fff;\n    border-radius: 5px;\n    position: relative;\n    max-width: 700px;\n    width: 95%;\n  }\n  .consentPopup > h2, /* overwrite ABE style */\n  .consentPopup > * {\n    margin: 0;\n    margin-bottom: var(--space-2);\n  }\n  .consentPopup > button {\n    margin-right: var(--space-2);\n  }\n  .popupOverlay {\n    height: 100vh;\n    width: 100vw;\n    background: rgba(0, 0, 0, 0.7);\n    padding: 5% 0;\n  }\n  .dismiss-button {\n    position: absolute;\n    right: var(--space-3);\n    top: var(--space-2);\n    cursor: pointer;\n  }\n  /* defaults */\n  .default:after {\n    content: 'not in the preset group. No consent is required.';\n  }\n  /* override */\n  .amp-geo-group-eea .default:after {\n    content: 'in the preset eea group. Consent was required.';\n  }\n  #post-consent-ui {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: var(--space-3);\n  }\n</style>\n</head>\n<body>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Setting up amp-geo\n","code":"","preview":"","inBody":true,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setting-up-amp-geo","name":"Setting up amp-geo"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setting up amp-geo\n"},{"doc_":"First we need to setup the [`amp-geo`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md) extension. We'll use the iso code `us` which represents the United States, [`preset-eea`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md#preset-country-groups), and [`unknown`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md#operation)\n","code":"<amp-geo layout=\"nodisplay\">\n  <script type=\"application/json\">\n    {\n      \"ISOCountryGroups\": {\n        \"eea\": [\"preset-eea\", \"unknown\"],\n        \"us\": [\"us\"]\n      }\n    }\n  </script>\n</amp-geo>\n","preview":"  <amp-geo layout=\"nodisplay\">\n    <script type=\"application/json\">\n      {\n        \"ISOCountryGroups\": {\n          \"eea\": [\"preset-eea\", \"unknown\"],\n          \"us\": [\"us\"]\n        }\n      }\n    </script>\n  </amp-geo>\n","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"First we need to setup the [`amp-geo`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md) extension. We'll use the iso code `us` which represents the United States, [`preset-eea`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md#preset-country-groups), and [`unknown`](/amp-dev/documentation/components/reference/amp-geo-v0.1.md#operation)\n"},{"doc_":"## Defining the consent flow\n","code":"","preview":"","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"defining-the-consent-flow","name":"Defining the consent flow"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Defining the consent flow\n"},{"doc_":"\nThe flow should rely on amp-geo to determine which config to show based upon the user's location, so we set the flag: [`geoOverride`](/amp-dev/documentation/components/reference/amp-consent.md#geoOverride).\n\nIf amp-geo finds that the user is in the US country group, then the contents of the US config will override the top-level consent config (and same for EEA).\n\nOur final config for an EEA (and unknown) user would look like this: \n[sourcecode:json]\n{\n  \"consentInstanceId\": \"world-wide-consent\",\n  \"consentRequired\": true,\n  \"promptUI\": \"eea-consent-ui\",\n  \"postPromptUI\": \"post-consent-ui\"\n}\n[/sourcecode]\nSince `consentRequired` is `true` and `promptUI` is configured, `amp-consent` will show the prompt if no localstorage decision is found.\n\nOur final config for a US user would look like this: \n[sourcecode:json]\n{\n  \"consentInstanceId\": \"world-wide-consent\",\n  \"consentRequired\": \"remote\",\n  \"checkConsentHref\": \"/documentation/examples/api/get-consent-sever-side\",\n  \"promptUI\": null,\n  \"postPromptUI\": \"post-consent-ui\"\n}\n[/sourcecode]\nIf no localstorage decision is found and since `consentRequired` is 'remote', `amp-consent` will wait until it gets a response from `checkConsentHref`. In this example, no matter what the response returned, it will not show anything because `promptUI` was overriden to `null` (since there could be an external site to manage user consent).\n\nAnd our final config for a user in neither of those geo groups would be: \n[sourcecode:json]\n{\n  \"consentInstanceId\": \"world-wide-consent\",\n  \"consentRequired\": false,\n  \"postPromptUI\": \"post-consent-ui\"\n}\n[/sourcecode]\nLocalstorage decision will be used if it exists, otherwise, since `consentRequired` is `false`, `amp-consent` will not do anything.\n\nNote: Use `expireCache: true` in your response to never save consent states to localstorage.\n\n","code":"<amp-consent id=\"myUserConsent\"\n  layout=\"nodisplay\">\n  <script type=\"application/json\">\n    {\n      \"consentInstanceId\": \"world-wide-consent\",\n      \"consentRequired\": false,\n      \"geoOverride\": {\n        \"eea\": {\n          \"promptUI\": \"eea-consent-ui\",\n          \"consentRequired\": true\n        },\n        \"us\": {\n          \"consentRequired\": \"remote\",\n          \"checkConsentHref\": \"/documentation/examples/api/get-consent-server-side\",\n          \"promptUI\": null\n        }\n      },\n      \"postPromptUI\": \"post-consent-ui\"\n    }\n  </script>\n  <div id=\"eea-consent-ui\"\n    class=\"popupOverlay\">\n    <div class=\"consentPopup\">\n      <div class=\"dismiss-button\"\n        role=\"button\"\n        tabindex=\"0\"\n        on=\"tap:myUserConsent.dismiss\">X</div>\n      <h2>Headline</h2>\n      <p>This is an important message requiring you to make a choice if you're based in the EA.</p>\n      <button on=\"tap:myUserConsent.accept\">Accept</button>\n      <button on=\"tap:myUserConsent.reject\">Reject</button>\n    </div>\n  </div>\n  <div id=\"post-consent-ui\">\n    <button on=\"tap:myUserConsent.prompt()\">Update Consent</button>\n  </div>\n</amp-consent>\n","preview":"  <amp-consent id=\"myUserConsent\"\n    layout=\"nodisplay\">\n    <script type=\"application/json\">\n      {\n        \"consentInstanceId\": \"world-wide-consent\",\n        \"consentRequired\": false,\n        \"geoOverride\": {\n          \"eea\": {\n            \"promptUI\": \"eea-consent-ui\",\n            \"consentRequired\": true\n          },\n          \"us\": {\n            \"consentRequired\": \"remote\",\n            \"checkConsentHref\": \"/documentation/examples/api/get-consent-server-side\",\n            \"promptUI\": null\n          }\n        },\n        \"postPromptUI\": \"post-consent-ui\"\n      }\n    </script>\n    <div id=\"eea-consent-ui\"\n      class=\"popupOverlay\">\n      <div class=\"consentPopup\">\n        <div class=\"dismiss-button\"\n          role=\"button\"\n          tabindex=\"0\"\n          on=\"tap:myUserConsent.dismiss\">X</div>\n        <h2>Headline</h2>\n        <p>This is an important message requiring you to make a choice if you're based in the EA.</p>\n        <button on=\"tap:myUserConsent.accept\">Accept</button>\n        <button on=\"tap:myUserConsent.reject\">Reject</button>\n      </div>\n    </div>\n    <div id=\"post-consent-ui\">\n      <button on=\"tap:myUserConsent.prompt()\">Update Consent</button>\n    </div>\n  </amp-consent>\n","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThe flow should rely on amp-geo to determine which config to show based upon the user's location, so we set the flag: [`geoOverride`](/amp-dev/documentation/components/reference/amp-consent.md#geoOverride).\n\nIf amp-geo finds that the user is in the US country group, then the contents of the US config will override the top-level consent config (and same for EEA).\n\nOur final config for an EEA (and unknown) user would look like this: \n```json\n{\n  \"consentInstanceId\": \"world-wide-consent\",\n  \"consentRequired\": true,\n  \"promptUI\": \"eea-consent-ui\",\n  \"postPromptUI\": \"post-consent-ui\"\n}\n```\nSince `consentRequired` is `true` and `promptUI` is configured, `amp-consent` will show the prompt if no localstorage decision is found.\n\nOur final config for a US user would look like this: \n```json\n{\n  \"consentInstanceId\": \"world-wide-consent\",\n  \"consentRequired\": \"remote\",\n  \"checkConsentHref\": \"/documentation/examples/api/get-consent-sever-side\",\n  \"promptUI\": null,\n  \"postPromptUI\": \"post-consent-ui\"\n}\n```\nIf no localstorage decision is found and since `consentRequired` is 'remote', `amp-consent` will wait until it gets a response from `checkConsentHref`. In this example, no matter what the response returned, it will not show anything because `promptUI` was overriden to `null` (since there could be an external site to manage user consent).\n\nAnd our final config for a user in neither of those geo groups would be: \n```json\n{\n  \"consentInstanceId\": \"world-wide-consent\",\n  \"consentRequired\": false,\n  \"postPromptUI\": \"post-consent-ui\"\n}\n```\nLocalstorage decision will be used if it exists, otherwise, since `consentRequired` is `false`, `amp-consent` will not do anything.\n\nNote: Use `expireCache: true` in your response to never save consent states to localstorage.\n\n"},{"doc_":"","code":"\n<div>You are <span class=\"default\"></span></div>\n","preview":"\n  <div>You are <span class=\"default\"></span></div>\n","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Testing\n","code":"","preview":"","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"testing","name":"Testing"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Testing\n"},{"doc_":"\nYou can test different behaviors by appending custom country codes to the URL and enabling the `dev-channel` [here](https://cdn.ampproject.org/experiments.html), for example:\n\n- US: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=us](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=us)\n- EEA: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=de](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=de)\n- Neither: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=td](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=td)\n\n","code":"","preview":"","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nYou can test different behaviors by appending custom country codes to the URL and enabling the `dev-channel` [here](https://cdn.ampproject.org/experiments.html), for example:\n\n- US: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=us](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=us)\n- EEA: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=de](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=de)\n- Neither: [https://amp.dev/documentation/examples/user-consent/geolocation-based_consent_flow/#amp-geo=td](/amp-dev/documentation/examples/documentation/Geolocation-based_Consent_Flow.html#amp-geo=td)\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":13,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/user-consent/geolocation-based_consent_flow/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <title>Geolocation-based Consent Flow</title>\n  <script async custom-element=\"amp-consent\" src=\"https://cdn.ampproject.org/v0/amp-consent-0.1.js\"></script>\n  <script async custom-element=\"amp-geo\" src=\"https://cdn.ampproject.org/v0/amp-geo-0.1.js\"></script>\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"    :root {\n      --space-2: 1rem;   /* 16px */\n      --space-3: 1.5rem; /* 24px */\n    }\n    .consentPopup {\n      padding: var(--space-3);\n      margin: 0 auto;\n      background: #fff;\n      border-radius: 5px;\n      position: relative;\n      max-width: 700px;\n      width: 95%;\n    }\n    .consentPopup > h2, /* overwrite ABE style */\n    .consentPopup > * {\n      margin: 0;\n      margin-bottom: var(--space-2);\n    }\n    .consentPopup > button {\n      margin-right: var(--space-2);\n    }\n    .popupOverlay {\n      height: 100vh;\n      width: 100vw;\n      background: rgba(0, 0, 0, 0.7);\n      padding: 5% 0;\n    }\n    .dismiss-button {\n      position: absolute;\n      right: var(--space-3);\n      top: var(--space-2);\n      cursor: pointer;\n    }\n    /* defaults */\n    .default:after {\n      content: 'not in the preset group. No consent is required.';\n    }\n    /* override */\n    .amp-geo-group-eea .default:after {\n      content: 'in the preset eea group. Consent was required.';\n    }\n    #post-consent-ui {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: var(--space-3);\n    }\n","title":"Geolocation-based Consent Flow","metadata":{"teaserImage":"/static/samples/img/teaser/geolocation-based_consent_flow.jpg","author":"micajuine-ho, sebastianbenz"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"Sometimes is necessary to ask only users from specific countries for consent."},"route":"/documentation/examples/user-consent/geolocation-based_consent_flow/index.html"}