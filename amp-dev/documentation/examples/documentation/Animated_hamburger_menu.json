{"filePath":"examples/source/multimedia-animations/Animated_hamburger_menu.html","source":"<!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>Animated hamburger menu</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/multimedia-animations/animated_hamburger_menu/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n  <!-- \n    ## Introduction \n    Small interactive UI animations communicate state and purpose to users. A common case is a hamburger menu button that animates into an \"X\" when open. This animation communicates that the user can press the same button again to close the menu. \n\n    ## CSS animations\n    Below is the custom styles and CSS animations for the hamburger menu: \n  -->\n    <style amp-custom>\n      .hamburger_wrapper {\n        padding: 5px;\n        z-index: 10;\n      }\n\n      #hamburger {\n        width: 60px;\n        height: 45px;\n        position: relative;\n        cursor: pointer;\n        outline: none;\n\n      }\n      #hamburger span {\n        display: block;\n        position: absolute;\n        height: 9px;\n        width: 100%;\n        background:#005af0;\n        border-radius: 9px;\n        opacity: 1;\n        left: 0;\n        transform: rotate(0deg);\n        transition: .5s ease-in-out;\n      }\n\n      #hamburger span:nth-child(1) {\n        top: 0px;\n        transform-origin: left center;\n      }\n\n      #hamburger span:nth-child(2) {\n        top: 21px;\n        transform-origin: left center;\n      }\n\n      #hamburger span:nth-child(3) {\n        top: 42px;\n        transform-origin: left center;\n      }\n\n      #hamburger.close span:nth-child(1) {\n        transform: rotate(45deg);\n      }\n\n      #hamburger.close span:nth-child(2) {\n        width: 0%;\n        opacity: 0;\n        transition: .1s;\n      }\n\n      #hamburger.close span:nth-child(3) {\n        transform: rotate(-45deg);\n      }\n      #nav-menu {\n        position: relative;\n        transform: translateX(-100vw);\n        opacity: 0;\n        z-index: 10;\n        transition: transform .5s ease, opacity ease .2s;\n      }\n\n      #nav-menu.now-active {\n        transform: translateX(0);\n        transition: transform .5s ease, opacity ease .2s;\n        opacity: 1;\n        background-color:#eaeaea;\n      }\n\n      .nav-list {\n        padding: 10px;\n        list-style-type: none;\n        font-size: 2em;\n      }\n    </style>\n</head>\n<body>\n  <!-- ## Markup -->\n  <!--\n    The hamburger menu element contains three styled `span` elements inside a `div`. The hamburger `div` uses the `tap` AMP action to trigger the `toggleClass()` event, which targets an element by its `id`. In this example, it targets `hamburger`.\n\n    The `toggleClass()` event will add and remove any class it's given as an argument. This example passes `class='close'`. Additionally, it toggles an animation class for the navigation menu to slide out. \n  -->\n <div>\n  <div class=\"hamburger_wrapper\">\n    <div id=\"hamburger\" tabindex=\"1\" role=\"button\" on=\"tap:hamburger.toggleClass(class='close'),nav-menu.toggleClass(class='now-active')\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n  <div id=\"nav-menu\">\n    <ul class=\"nav-list\">\n      <li><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">Account</a></li>\n      <li><a href=\"#\">Products</a></li>\n      <li><a href=\"#\">Support</a></li>\n    </ul>\n  </div>\n<div>\n</div></div></body></html>","document":{"sections":[{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <title>Animated hamburger menu</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/multimedia-animations/animated_hamburger_menu/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"\n## Introduction\nSmall interactive UI animations communicate state and purpose to users. A common case is a hamburger menu button that animates into an \"X\" when open. This animation communicates that the user can press the same button again to close the menu. \n\n## CSS animations\nBelow is the custom styles and CSS animations for the hamburger menu: \n\n","code":"<style amp-custom>\n  .hamburger_wrapper {\n    padding: 5px;\n    z-index: 10;\n  }\n\n  #hamburger {\n    width: 60px;\n    height: 45px;\n    position: relative;\n    cursor: pointer;\n    outline: none;\n\n  }\n  #hamburger span {\n    display: block;\n    position: absolute;\n    height: 9px;\n    width: 100%;\n    background:#005af0;\n    border-radius: 9px;\n    opacity: 1;\n    left: 0;\n    transform: rotate(0deg);\n    transition: .5s ease-in-out;\n  }\n\n  #hamburger span:nth-child(1) {\n    top: 0px;\n    transform-origin: left center;\n  }\n\n  #hamburger span:nth-child(2) {\n    top: 21px;\n    transform-origin: left center;\n  }\n\n  #hamburger span:nth-child(3) {\n    top: 42px;\n    transform-origin: left center;\n  }\n\n  #hamburger.close span:nth-child(1) {\n    transform: rotate(45deg);\n  }\n\n  #hamburger.close span:nth-child(2) {\n    width: 0%;\n    opacity: 0;\n    transition: .1s;\n  }\n\n  #hamburger.close span:nth-child(3) {\n    transform: rotate(-45deg);\n  }\n  #nav-menu {\n    position: relative;\n    transform: translateX(-100vw);\n    opacity: 0;\n    z-index: 10;\n    transition: transform .5s ease, opacity ease .2s;\n  }\n\n  #nav-menu.now-active {\n    transform: translateX(0);\n    transition: transform .5s ease, opacity ease .2s;\n    opacity: 1;\n    background-color:#eaeaea;\n  }\n\n  .nav-list {\n    padding: 10px;\n    list-style-type: none;\n    font-size: 2em;\n  }\n</style>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">Small interactive UI animations communicate state and purpose to users. A common case is a hamburger menu button that animates into an &quot;X&quot; when open. This animation communicates that the user can press the same button again to close the menu. </p><h2 id=\"css-animations\" class=\"www-heading pb4 mb2 relative h3\">CSS animations</h2><p class=\"mb2 px1\">Below is the custom styles and CSS animations for the hamburger menu: </p>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[{"id":"introduction","name":"Introduction"},{"id":"css-animations","name":"CSS animations"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\nSmall interactive UI animations communicate state and purpose to users. A common case is a hamburger menu button that animates into an \"X\" when open. This animation communicates that the user can press the same button again to close the menu. \n\n## CSS animations\nBelow is the custom styles and CSS animations for the hamburger menu: \n\n"},{"doc_":"","code":"</head>\n<body>\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Markup\n","code":"","preview":"","inBody":true,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"markup","name":"Markup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Markup\n"},{"doc_":"\nThe hamburger menu element contains three styled `span` elements inside a `div`. The hamburger `div` uses the `tap` AMP action to trigger the `toggleClass()` event, which targets an element by its `id`. In this example, it targets `hamburger`.\n\nThe `toggleClass()` event will add and remove any class it's given as an argument. This example passes `class='close'`. Additionally, it toggles an animation class for the navigation menu to slide out. \n\n","code":"<div class=\"hamburger_wrapper\">\n  <div id=\"hamburger\"\n    tabindex=\"1\"\n    role=\"button\"\n    on=\"tap:hamburger.toggleClass(class='close'),nav-menu.toggleClass(class='now-active')\">\n    <span></span>\n    <span></span>\n    <span></span>\n  </div>\n</div>\n<div id=\"nav-menu\">\n  <ul class=\"nav-list\">\n    <li><a href=\"#\">Home</a></li>\n    <li><a href=\"#\">Account</a></li>\n    <li><a href=\"#\">Products</a></li>\n    <li><a href=\"#\">Support</a></li>\n  </ul>\n</div>\n<div>\n</div>","preview":"  <div>\n    <div class=\"hamburger_wrapper\">\n      <div id=\"hamburger\"\n        tabindex=\"1\"\n        role=\"button\"\n        on=\"tap:hamburger.toggleClass(class='close'),nav-menu.toggleClass(class='now-active')\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div id=\"nav-menu\">\n      <ul class=\"nav-list\">\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">Account</a></li>\n        <li><a href=\"#\">Products</a></li>\n        <li><a href=\"#\">Support</a></li>\n      </ul>\n    </div>\n    <div>\n    </div>\n  </div>\n","inBody":true,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThe hamburger menu element contains three styled `span` elements inside a `div`. The hamburger `div` uses the `tap` AMP action to trigger the `toggleClass()` event, which targets an element by its `id`. In this example, it targets `hamburger`.\n\nThe `toggleClass()` event will add and remove any class it's given as an argument. This example passes `class='close'`. Additionally, it toggles an animation class for the navigation menu to slide out. \n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <title>Animated hamburger menu</title>\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/multimedia-animations/animated_hamburger_menu/index.html\">\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"      .hamburger_wrapper {\n        padding: 5px;\n        z-index: 10;\n      }\n\n      #hamburger {\n        width: 60px;\n        height: 45px;\n        position: relative;\n        cursor: pointer;\n        outline: none;\n\n      }\n      #hamburger span {\n        display: block;\n        position: absolute;\n        height: 9px;\n        width: 100%;\n        background:#005af0;\n        border-radius: 9px;\n        opacity: 1;\n        left: 0;\n        transform: rotate(0deg);\n        transition: .5s ease-in-out;\n      }\n\n      #hamburger span:nth-child(1) {\n        top: 0px;\n        transform-origin: left center;\n      }\n\n      #hamburger span:nth-child(2) {\n        top: 21px;\n        transform-origin: left center;\n      }\n\n      #hamburger span:nth-child(3) {\n        top: 42px;\n        transform-origin: left center;\n      }\n\n      #hamburger.close span:nth-child(1) {\n        transform: rotate(45deg);\n      }\n\n      #hamburger.close span:nth-child(2) {\n        width: 0%;\n        opacity: 0;\n        transition: .1s;\n      }\n\n      #hamburger.close span:nth-child(3) {\n        transform: rotate(-45deg);\n      }\n      #nav-menu {\n        position: relative;\n        transform: translateX(-100vw);\n        opacity: 0;\n        z-index: 10;\n        transition: transform .5s ease, opacity ease .2s;\n      }\n\n      #nav-menu.now-active {\n        transform: translateX(0);\n        transition: transform .5s ease, opacity ease .2s;\n        opacity: 1;\n        background-color:#eaeaea;\n      }\n\n      .nav-list {\n        padding: 10px;\n        list-style-type: none;\n        font-size: 2em;\n      }\n","title":"Animated hamburger menu","metadata":{"teaserImage":"/static/samples/img/teaser/animated-hamburger-menu.jpg","author":"CrystalOnScript"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"Small interactive UI animations communicate state and purpose to users."},"route":"/documentation/examples/multimedia-animations/animated_hamburger_menu/index.html"}