{"filePath":"examples/source/interactivity-dynamic-content/Stack_With_Bind_Ad.html","source":"<!-- -->\n<!doctype html>\n<html amp4ads lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n  <title>Stack With Bind Ad</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async custom-element=\"amp-bind\" src=\"https://amp-ads.firebaseapp.com/dist/v0/amp-bind-0.1.max.js\"></script>\n    <script async custom-element=\"amp-selector\" src=\"https://amp-ads.firebaseapp.com/dist/v0/amp-selector-0.1.max.js\"></script>\n    <script async src=\"https://amp-ads.firebaseapp.com/dist/amp.js\"></script>\n    <style amp4ads-boilerplate>body{visibility:hidden}</style>\n    <!-- ## Summary-->\n    <!--\n    Sample AMPHTML ad using [amp-bind](/amp-dev/documentation/components/reference/amp-bind-v0.1.md), and [`amp-selector`](/amp-dev/documentation/components/reference/amp-selector-v0.1.md) to create an interactive \"stack\" ad.\n    -->\n    <!-- ## Styling -->\n    <!--\n    This is an advanced example that requires some styling to make it look and function properly.\n\n    We use [custom CSS properties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) and `calc()` in this example for the sake of readability. This is not a requirement, since the results of all of the `calc()` expressions in this example can be replaced by hand or by using a CSS pre-processor.\n    -->\n    <style amp-custom>\n      /* Define constants for stack item dimensions */\n      :root {\n        --item-width: 230px;\n        --item-height: 130px;\n      }\n      /* Root container for the entire visual area */\n      .root-container {\n        font-family: 'Roboto', sans-serif;\n        font-size: 14px;\n        background: #000;\n        color: #fff;\n        width: 100%;\n        height: 100vh;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      }\n      /* Main area container */\n      .main-container {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n      /* Footer styling */\n      .footer {\n        background: #000;\n        font-size: 12px;\n        padding: 8px;\n        line-height: 34px;\n        display: flex;\n        position: relative;\n        z-index: 1;\n      }\n      .footer-logo {\n        flex: 1;\n      }\n      .logo-img {\n        display: block;\n      }\n      .button {\n        text-decoration: none;\n        text-transform: uppercase;\n        padding: 0 12px;\n        color: #fff;\n        display: inline-block;\n        background-color: #2979ff;\n      }\n      /*\n       * We use empty div elements to fake the appearance of depth in the stack.\n       * Each one of them is offset by 8px, which is why the width changes.\n       */\n      .stack-bg-item {\n        height: calc(var(--item-height) - 4px);\n        margin: calc(8px - var(--item-height)) auto 0;\n        border-radius: 3px;\n      }\n      .stack-bg-item:nth-child(1) {\n        background: rgba(255, 255, 255, 0.15);\n        margin-top: 0;\n        width: calc(var(--item-width) - 4 * 8px);\n      }\n      .stack-bg-item:nth-child(2) {\n        background: rgba(255, 255, 255, 0.25);\n        width: calc(var(--item-width) - 3 * 8px);\n      }\n      .stack-bg-item:nth-child(3) {\n        background: rgba(255, 255, 255, 0.35);\n        width: calc(var(--item-width) - 2 * 8px);\n      }\n      .stack-bg-item:nth-child(4) {\n        background: rgba(255, 255, 255, 0.45);\n        width: calc(var(--item-width) - 1 * 8px);\n      }\n      .stack-container {\n        display: block;\n        position: absolute;\n      }\n      .stack {\n        height: var(--item-height);\n        width: var(--item-width);\n        margin: calc(5px - var(--item-height)) 0 5px;\n      }\n      /* Styling for actual stack items */\n      .stack-item {\n        height: var(--item-height);\n        width: var(--item-width);\n        background: rgba(255, 255, 255, 0.6);\n        border-radius: 3px;\n        padding: 2px;\n        position: absolute;\n        box-sizing: border-box;\n        transition: 0.3s transform, 0.3s opacity;\n\n        /*\n         * Translate the stack item horizontally when not topmost or second\n         * topmost, and set its opacity to 0 so it's out of view.\n         */\n        transform: translate(100px, 0);\n        opacity: 0;\n      }\n      .stack-item:nth-child(even) {\n        /*\n         * We use negative translate for each even stack item to alternate the\n         * animation effect.\n         */\n        transform: translate(-100px, 0);\n      }\n      /*\n       * Style the second topmost stack item so it's displayed.\n       * We scale it so it's smaller than the topmost element by 8px total, to\n       * contribute to the illusion of depth.\n       */\n      .stack-item.second-topmost {\n        transform: scale(calc(1 - (4px / var(--item-width)))) translate(0, 0);\n        opacity: 0;\n      }\n      /*\n       * Style the topmost stack item so it's in full-width and slightly offset\n       * from the second topmost.\n       */\n      .stack-item.topmost {\n        opacity: 1;\n        transform: scale(1) translate(0, 4px);\n        z-index: 1;\n      }\n      /* Styling for selector dots */\n      .dots {\n        text-align: center;\n      }\n      .dots-item {\n        display: inline-block;\n        width: 6px;\n        height: 6px;\n        border-radius: 6px;\n        background: #fff;\n        margin: 0 2px;\n      }\n      .dots-item[selected] {\n        background: #2979ff;\n      }\n      .bg-img-container {\n        width: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <!-- ## amp-bind state configuration -->\n    <!-- We use the initial state to configure the amount of items in stack. -->\n    <amp-state id=\"config\">\n      <script type=\"application/json\">\n        {\n          \"length\": 5\n        }\n      </script>\n    </amp-state>\n    <!-- ## Main container -->\n    <!-- Define a main container with an `amp-img` as background -->\n    <div class=\"root-container\">\n      <div class=\"main-container\">\n        <div class=\"bg-img-container\">\n          <amp-img src=\"/static/samples/img/car-front.jpg\"\n            width=\"608\"\n            height=\"568\"\n            layout=\"responsive\"\n            class=\"bg-img\"></amp-img>\n        </div>\n        <!-- ## Stack -->\n        <!--\n        AMP has a system in place for [events and actions](https://github.com/ampproject/amphtml/blob/master/spec/amp-actions-and-events.md). It uses a domain-specific language to describe how actions are triggered. In this example, we set the `on` attribute so the amp-bind state changes on tap. The `selection` variable is originally undefined, which means that when it is accessed by the first time, it will fallback to zero. The remainder operation (`%`) is used so that the stack will cycle back to zero once the final element is at the top.\n\n        Each stack item has a conditional class value (`[class]`) that is calculated by amp-bind. This is to determine whether each item is the topmost or the second-topmost element in the stack so it can be styled appropriately.\n\n        See [this document](/amp-dev/documentation/components/reference/amp-bind-v0.1.md) for specifics on the amp-bind expression syntax.\n        -->\n        <div class=\"stack-container\"\n            role=\"button\"\n            on=\"tap:AMP.setState({selection: (selection + 1) % config.length})\">\n          <div class=\"stack-bg-item\"></div>\n          <div class=\"stack-bg-item\"></div>\n          <div class=\"stack-bg-item\"></div>\n          <div class=\"stack-bg-item\"></div>\n          <div class=\"stack\">\n            <div class=\"stack-item topmost\"\n                [class]=\"'stack-item' +\n                    (selection == 0 ? ' topmost' :\n                        (selection == config.length - 1 ? ' second-topmost' : ''))\">\n              <amp-img src=\"/static/samples/img/car-sideview.jpg\"\n                  width=\"226\"\n                  height=\"126\"\n                  layout=\"fixed\"></amp-img>\n            </div>\n            <div class=\"stack-item second-topmost\"\n                [class]=\"'stack-item' +\n                    (selection == 1 ? ' topmost' :\n                        (selection == 0 ? ' second-topmost' : ''))\">\n              <amp-img src=\"/static/samples/img/car-steeringwheel.jpg\"\n                  width=\"226\"\n                  height=\"126\"\n                  layout=\"fixed\"></amp-img>\n            </div>\n            <div class=\"stack-item\"\n                [class]=\"'stack-item' +\n                  (selection == 2 ? ' topmost' :\n                      (selection == 1 ? ' second-topmost' : ''))\">\n              <amp-img src=\"/static/samples/img/car-seats.jpg\"\n                  width=\"226\"\n                  height=\"126\"\n                  layout=\"fixed\"></amp-img>\n            </div>\n            <div class=\"stack-item\"\n                [class]=\"'stack-item' +\n                  (selection == 3 ? ' topmost' :\n                      (selection == 2 ? ' second-topmost' : ''))\">\n              <amp-img src=\"/static/samples/img/car-gauges.jpg\"\n                  width=\"226\"\n                  height=\"126\"\n                  layout=\"fixed\"></amp-img>\n            </div>\n            <div class=\"stack-item\"\n                [class]=\"'stack-item' +\n                  (selection == 4 ? ' topmost' :\n                      (selection == 3 ? ' second-topmost' : ''))\">\n              <amp-img src=\"/static/samples/img/car-engine.jpg\"\n                  width=\"226\"\n                  height=\"126\"\n                  layout=\"fixed\"></amp-img>\n            </div>\n          </div>\n          <!-- We can use amp-selector to show indicator dots for our stack. The `[selected]` attribute is used to refer to an amp-bind state variable so that the indicators change accordingly. -->\n          <amp-selector\n              layout=\"container\"\n              class=\"dots\"\n              disabled\n              [selected]=\"selection\">\n            <div option=\"0\" class=\"dots-item\" selected></div>\n            <div option=\"1\" class=\"dots-item\"></div>\n            <div option=\"2\" class=\"dots-item\"></div>\n            <div option=\"3\" class=\"dots-item\"></div>\n            <div option=\"4\" class=\"dots-item\"></div>\n          </amp-selector>\n        </div>\n      </div>\n      <div class=\"footer\">\n        <div class=\"footer-logo\">\n          <amp-img src=\"/static/samples/img/car-logo.png\"\n              width=\"72\"\n              height=\"32\"\n              layout=\"fixed\"\n              alt=\"Howdy\"\n              class=\"logo-img\"></amp-img>\n        </div>\n        <a href=\"https://amp.dev/documentation/examples/\" target=\"_blank\" class=\"button\">\n          Learn More\n        </a>\n      </div>\n    </div>\n  </body>\n</html>","document":{"sections":[{"doc_":"","code":"\n","preview":"","inBody":false,"id":0,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n","code":"<!doctype html>\n<html amp4ads\n  lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n  <title>Stack With Bind Ad</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async custom-element=\"amp-bind\" src=\"https://amp-ads.firebaseapp.com/dist/v0/amp-bind-0.1.max.js\"></script>\n    <script async custom-element=\"amp-selector\" src=\"https://amp-ads.firebaseapp.com/dist/v0/amp-selector-0.1.max.js\"></script>\n    <script async src=\"https://amp-ads.firebaseapp.com/dist/amp.js\"></script>\n    <style amp4ads-boilerplate>body{visibility:hidden}</style>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":"","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Summary\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":"<h2 id=\"summary\" class=\"www-heading pb4 mb2 relative h3\">Summary</h2>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"summary","name":"Summary"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Summary\n"},{"doc_":"\nSample AMPHTML ad using [amp-bind](/amp-dev/documentation/components/reference/amp-bind-v0.1.md), and [`amp-selector`](/amp-dev/documentation/components/reference/amp-selector-v0.1.md) to create an interactive \"stack\" ad.\n\n","code":"","preview":"","inBody":false,"id":3,"cachedMarkedDoc":"<p class=\"mb2 px1\">Sample AMPHTML ad using <a href=\"/amp-dev/documentation/components/reference/amp-bind-v0.1.md\">amp-bind</a>, and <a href=\"/amp-dev/documentation/components/reference/amp-selector-v0.1.md\"><code>amp-selector</code></a> to create an interactive &quot;stack&quot; ad.</p>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nSample AMPHTML ad using [amp-bind](/amp-dev/documentation/components/reference/amp-bind-v0.1.md), and [`amp-selector`](/amp-dev/documentation/components/reference/amp-selector-v0.1.md) to create an interactive \"stack\" ad.\n\n"},{"doc_":"## Styling\n","code":"","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"styling","name":"Styling"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Styling\n"},{"doc_":"\nThis is an advanced example that requires some styling to make it look and function properly.\n\nWe use [custom CSS properties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) and `calc()` in this example for the sake of readability. This is not a requirement, since the results of all of the `calc()` expressions in this example can be replaced by hand or by using a CSS pre-processor.\n\n","code":"<style amp-custom>\n  /* Define constants for stack item dimensions */\n  :root {\n    --item-width: 230px;\n    --item-height: 130px;\n  }\n  /* Root container for the entire visual area */\n  .root-container {\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    background: #000;\n    color: #fff;\n    width: 100%;\n    height: 100vh;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  /* Main area container */\n  .main-container {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  }\n  /* Footer styling */\n  .footer {\n    background: #000;\n    font-size: 12px;\n    padding: 8px;\n    line-height: 34px;\n    display: flex;\n    position: relative;\n    z-index: 1;\n  }\n  .footer-logo {\n    flex: 1;\n  }\n  .logo-img {\n    display: block;\n  }\n  .button {\n    text-decoration: none;\n    text-transform: uppercase;\n    padding: 0 12px;\n    color: #fff;\n    display: inline-block;\n    background-color: #2979ff;\n  }\n  /*\n   * We use empty div elements to fake the appearance of depth in the stack.\n   * Each one of them is offset by 8px, which is why the width changes.\n   */\n  .stack-bg-item {\n    height: calc(var(--item-height) - 4px);\n    margin: calc(8px - var(--item-height)) auto 0;\n    border-radius: 3px;\n  }\n  .stack-bg-item:nth-child(1) {\n    background: rgba(255, 255, 255, 0.15);\n    margin-top: 0;\n    width: calc(var(--item-width) - 4 * 8px);\n  }\n  .stack-bg-item:nth-child(2) {\n    background: rgba(255, 255, 255, 0.25);\n    width: calc(var(--item-width) - 3 * 8px);\n  }\n  .stack-bg-item:nth-child(3) {\n    background: rgba(255, 255, 255, 0.35);\n    width: calc(var(--item-width) - 2 * 8px);\n  }\n  .stack-bg-item:nth-child(4) {\n    background: rgba(255, 255, 255, 0.45);\n    width: calc(var(--item-width) - 1 * 8px);\n  }\n  .stack-container {\n    display: block;\n    position: absolute;\n  }\n  .stack {\n    height: var(--item-height);\n    width: var(--item-width);\n    margin: calc(5px - var(--item-height)) 0 5px;\n  }\n  /* Styling for actual stack items */\n  .stack-item {\n    height: var(--item-height);\n    width: var(--item-width);\n    background: rgba(255, 255, 255, 0.6);\n    border-radius: 3px;\n    padding: 2px;\n    position: absolute;\n    box-sizing: border-box;\n    transition: 0.3s transform, 0.3s opacity;\n\n    /*\n     * Translate the stack item horizontally when not topmost or second\n     * topmost, and set its opacity to 0 so it's out of view.\n     */\n    transform: translate(100px, 0);\n    opacity: 0;\n  }\n  .stack-item:nth-child(even) {\n    /*\n     * We use negative translate for each even stack item to alternate the\n     * animation effect.\n     */\n    transform: translate(-100px, 0);\n  }\n  /*\n   * Style the second topmost stack item so it's displayed.\n   * We scale it so it's smaller than the topmost element by 8px total, to\n   * contribute to the illusion of depth.\n   */\n  .stack-item.second-topmost {\n    transform: scale(calc(1 - (4px / var(--item-width)))) translate(0, 0);\n    opacity: 0;\n  }\n  /*\n   * Style the topmost stack item so it's in full-width and slightly offset\n   * from the second topmost.\n   */\n  .stack-item.topmost {\n    opacity: 1;\n    transform: scale(1) translate(0, 4px);\n    z-index: 1;\n  }\n  /* Styling for selector dots */\n  .dots {\n    text-align: center;\n  }\n  .dots-item {\n    display: inline-block;\n    width: 6px;\n    height: 6px;\n    border-radius: 6px;\n    background: #fff;\n    margin: 0 2px;\n  }\n  .dots-item[selected] {\n    background: #2979ff;\n  }\n  .bg-img-container {\n    width: 100%;\n  }\n</style>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThis is an advanced example that requires some styling to make it look and function properly.\n\nWe use [custom CSS properties](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) and `calc()` in this example for the sake of readability. This is not a requirement, since the results of all of the `calc()` expressions in this example can be replaced by hand or by using a CSS pre-processor.\n\n"},{"doc_":"","code":"</head>\n<body>\n","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## amp-bind state configuration\n","code":"","preview":"","inBody":true,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"amp-bind-state-configuration","name":"amp-bind state configuration"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## amp-bind state configuration\n"},{"doc_":"We use the initial state to configure the amount of items in stack. \n","code":"<amp-state id=\"config\">\n  <script type=\"application/json\">\n    {\n      \"length\": 5\n    }\n  </script>\n</amp-state>\n","preview":"  <amp-state id=\"config\">\n    <script type=\"application/json\">\n      {\n        \"length\": 5\n      }\n    </script>\n  </amp-state>\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"We use the initial state to configure the amount of items in stack. \n"},{"doc_":"## Main container\n","code":"","preview":"","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"main-container","name":"Main container"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Main container\n"},{"doc_":"Define a main container with an `amp-img` as background \n","code":"<div class=\"root-container\">\n  <div class=\"main-container\">\n    <div class=\"bg-img-container\">\n      <amp-img src=\"/static/samples/img/car-front.jpg\"\n        width=\"608\"\n        height=\"568\"\n        layout=\"responsive\"\n        class=\"bg-img\"></amp-img>\n    </div>\n","preview":"  <div class=\"root-container\">\n    <div class=\"main-container\">\n      <div class=\"bg-img-container\">\n        <amp-img src=\"/static/samples/img/car-front.jpg\"\n          width=\"608\"\n          height=\"568\"\n          layout=\"responsive\"\n          class=\"bg-img\"></amp-img>\n      </div>\n","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Define a main container with an `amp-img` as background \n"},{"doc_":"## Stack\n","code":"","preview":"","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"stack","name":"Stack"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Stack\n"},{"doc_":"\nAMP has a system in place for [events and actions](https://github.com/ampproject/amphtml/blob/master/spec/amp-actions-and-events.md). It uses a domain-specific language to describe how actions are triggered. In this example, we set the `on` attribute so the amp-bind state changes on tap. The `selection` variable is originally undefined, which means that when it is accessed by the first time, it will fallback to zero. The remainder operation (`%`) is used so that the stack will cycle back to zero once the final element is at the top.\n\nEach stack item has a conditional class value (`[class]`) that is calculated by amp-bind. This is to determine whether each item is the topmost or the second-topmost element in the stack so it can be styled appropriately.\n\nSee [this document](/amp-dev/documentation/components/reference/amp-bind-v0.1.md) for specifics on the amp-bind expression syntax.\n\n","code":"<div class=\"stack-container\"\n  role=\"button\"\n  on=\"tap:AMP.setState({selection: (selection + 1) % config.length})\">\n  <div class=\"stack-bg-item\"></div>\n  <div class=\"stack-bg-item\"></div>\n  <div class=\"stack-bg-item\"></div>\n  <div class=\"stack-bg-item\"></div>\n  <div class=\"stack\">\n    <div class=\"stack-item topmost\"\n      [class]=\"'stack-item' +\n              (selection == 0 ? ' topmost' :\n                  (selection == config.length - 1 ? ' second-topmost' : ''))\">\n      <amp-img src=\"/static/samples/img/car-sideview.jpg\"\n        width=\"226\"\n        height=\"126\"\n        layout=\"fixed\"></amp-img>\n    </div>\n    <div class=\"stack-item second-topmost\"\n      [class]=\"'stack-item' +\n              (selection == 1 ? ' topmost' :\n                  (selection == 0 ? ' second-topmost' : ''))\">\n      <amp-img src=\"/static/samples/img/car-steeringwheel.jpg\"\n        width=\"226\"\n        height=\"126\"\n        layout=\"fixed\"></amp-img>\n    </div>\n    <div class=\"stack-item\"\n      [class]=\"'stack-item' +\n            (selection == 2 ? ' topmost' :\n                (selection == 1 ? ' second-topmost' : ''))\">\n      <amp-img src=\"/static/samples/img/car-seats.jpg\"\n        width=\"226\"\n        height=\"126\"\n        layout=\"fixed\"></amp-img>\n    </div>\n    <div class=\"stack-item\"\n      [class]=\"'stack-item' +\n            (selection == 3 ? ' topmost' :\n                (selection == 2 ? ' second-topmost' : ''))\">\n      <amp-img src=\"/static/samples/img/car-gauges.jpg\"\n        width=\"226\"\n        height=\"126\"\n        layout=\"fixed\"></amp-img>\n    </div>\n    <div class=\"stack-item\"\n      [class]=\"'stack-item' +\n            (selection == 4 ? ' topmost' :\n                (selection == 3 ? ' second-topmost' : ''))\">\n      <amp-img src=\"/static/samples/img/car-engine.jpg\"\n        width=\"226\"\n        height=\"126\"\n        layout=\"fixed\"></amp-img>\n    </div>\n  </div>\n","preview":"      <div class=\"stack-container\"\n        role=\"button\"\n        on=\"tap:AMP.setState({selection: (selection + 1) % config.length})\">\n        <div class=\"stack-bg-item\"></div>\n        <div class=\"stack-bg-item\"></div>\n        <div class=\"stack-bg-item\"></div>\n        <div class=\"stack-bg-item\"></div>\n        <div class=\"stack\">\n          <div class=\"stack-item topmost\"\n            [class]=\"'stack-item' +\n                    (selection == 0 ? ' topmost' :\n                        (selection == config.length - 1 ? ' second-topmost' : ''))\">\n            <amp-img src=\"/static/samples/img/car-sideview.jpg\"\n              width=\"226\"\n              height=\"126\"\n              layout=\"fixed\"></amp-img>\n          </div>\n          <div class=\"stack-item second-topmost\"\n            [class]=\"'stack-item' +\n                    (selection == 1 ? ' topmost' :\n                        (selection == 0 ? ' second-topmost' : ''))\">\n            <amp-img src=\"/static/samples/img/car-steeringwheel.jpg\"\n              width=\"226\"\n              height=\"126\"\n              layout=\"fixed\"></amp-img>\n          </div>\n          <div class=\"stack-item\"\n            [class]=\"'stack-item' +\n                  (selection == 2 ? ' topmost' :\n                      (selection == 1 ? ' second-topmost' : ''))\">\n            <amp-img src=\"/static/samples/img/car-seats.jpg\"\n              width=\"226\"\n              height=\"126\"\n              layout=\"fixed\"></amp-img>\n          </div>\n          <div class=\"stack-item\"\n            [class]=\"'stack-item' +\n                  (selection == 3 ? ' topmost' :\n                      (selection == 2 ? ' second-topmost' : ''))\">\n            <amp-img src=\"/static/samples/img/car-gauges.jpg\"\n              width=\"226\"\n              height=\"126\"\n              layout=\"fixed\"></amp-img>\n          </div>\n          <div class=\"stack-item\"\n            [class]=\"'stack-item' +\n                  (selection == 4 ? ' topmost' :\n                      (selection == 3 ? ' second-topmost' : ''))\">\n            <amp-img src=\"/static/samples/img/car-engine.jpg\"\n              width=\"226\"\n              height=\"126\"\n              layout=\"fixed\"></amp-img>\n          </div>\n        </div>\n","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nAMP has a system in place for [events and actions](https://github.com/ampproject/amphtml/blob/master/spec/amp-actions-and-events.md). It uses a domain-specific language to describe how actions are triggered. In this example, we set the `on` attribute so the amp-bind state changes on tap. The `selection` variable is originally undefined, which means that when it is accessed by the first time, it will fallback to zero. The remainder operation (`%`) is used so that the stack will cycle back to zero once the final element is at the top.\n\nEach stack item has a conditional class value (`[class]`) that is calculated by amp-bind. This is to determine whether each item is the topmost or the second-topmost element in the stack so it can be styled appropriately.\n\nSee [this document](/amp-dev/documentation/components/reference/amp-bind-v0.1.md) for specifics on the amp-bind expression syntax.\n\n"},{"doc_":"We can use amp-selector to show indicator dots for our stack. The `[selected]` attribute is used to refer to an amp-bind state variable so that the indicators change accordingly. \n","code":"<amp-selector layout=\"container\"\n  class=\"dots\"\n  disabled\n  [selected]=\"selection\">\n  <div option=\"0\"\n    class=\"dots-item\"\n    selected></div>\n  <div option=\"1\"\n    class=\"dots-item\"></div>\n  <div option=\"2\"\n    class=\"dots-item\"></div>\n  <div option=\"3\"\n    class=\"dots-item\"></div>\n  <div option=\"4\"\n    class=\"dots-item\"></div>\n</amp-selector>\n","preview":"        <amp-selector layout=\"container\"\n          class=\"dots\"\n          disabled\n          [selected]=\"selection\">\n          <div option=\"0\"\n            class=\"dots-item\"\n            selected></div>\n          <div option=\"1\"\n            class=\"dots-item\"></div>\n          <div option=\"2\"\n            class=\"dots-item\"></div>\n          <div option=\"3\"\n            class=\"dots-item\"></div>\n          <div option=\"4\"\n            class=\"dots-item\"></div>\n        </amp-selector>\n","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":8,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"We can use amp-selector to show indicator dots for our stack. The `[selected]` attribute is used to refer to an amp-bind state variable so that the indicators change accordingly. \n"},{"doc_":"","code":"</div>\n</div>\n<div class=\"footer\">\n<div class=\"footer-logo\">\n  <amp-img src=\"/static/samples/img/car-logo.png\"\n    width=\"72\"\n    height=\"32\"\n    layout=\"fixed\"\n    alt=\"Howdy\"\n    class=\"logo-img\"></amp-img>\n</div>\n<a href=\"https://amp.dev/documentation/examples/\"\n  target=\"_blank\"\n  class=\"button\">\n  Learn More\n</a>\n</div>\n</div>\n","preview":"      </div>\n    </div>\n    <div class=\"footer\">\n      <div class=\"footer-logo\">\n        <amp-img src=\"/static/samples/img/car-logo.png\"\n          width=\"72\"\n          height=\"32\"\n          layout=\"fixed\"\n          alt=\"Howdy\"\n          class=\"logo-img\"></amp-img>\n      </div>\n      <a href=\"https://amp.dev/documentation/examples/\"\n        target=\"_blank\"\n        class=\"button\">\n        Learn More\n      </a>\n    </div>\n  </div>\n","inBody":true,"id":14,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":15,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"    <meta charset=\"utf-8\">\n  <title>Stack With Bind Ad</title>\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async custom-element=\"amp-bind\" src=\"https://amp-ads.firebaseapp.com/dist/v0/amp-bind-0.1.max.js\"></script>\n    <script async custom-element=\"amp-selector\" src=\"https://amp-ads.firebaseapp.com/dist/v0/amp-selector-0.1.max.js\"></script>\n    <script async src=\"https://amp-ads.firebaseapp.com/dist/amp.js\"></script>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"      /* Define constants for stack item dimensions */\n      :root {\n        --item-width: 230px;\n        --item-height: 130px;\n      }\n      /* Root container for the entire visual area */\n      .root-container {\n        font-family: 'Roboto', sans-serif;\n        font-size: 14px;\n        background: #000;\n        color: #fff;\n        width: 100%;\n        height: 100vh;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      }\n      /* Main area container */\n      .main-container {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n      /* Footer styling */\n      .footer {\n        background: #000;\n        font-size: 12px;\n        padding: 8px;\n        line-height: 34px;\n        display: flex;\n        position: relative;\n        z-index: 1;\n      }\n      .footer-logo {\n        flex: 1;\n      }\n      .logo-img {\n        display: block;\n      }\n      .button {\n        text-decoration: none;\n        text-transform: uppercase;\n        padding: 0 12px;\n        color: #fff;\n        display: inline-block;\n        background-color: #2979ff;\n      }\n      /*\n       * We use empty div elements to fake the appearance of depth in the stack.\n       * Each one of them is offset by 8px, which is why the width changes.\n       */\n      .stack-bg-item {\n        height: calc(var(--item-height) - 4px);\n        margin: calc(8px - var(--item-height)) auto 0;\n        border-radius: 3px;\n      }\n      .stack-bg-item:nth-child(1) {\n        background: rgba(255, 255, 255, 0.15);\n        margin-top: 0;\n        width: calc(var(--item-width) - 4 * 8px);\n      }\n      .stack-bg-item:nth-child(2) {\n        background: rgba(255, 255, 255, 0.25);\n        width: calc(var(--item-width) - 3 * 8px);\n      }\n      .stack-bg-item:nth-child(3) {\n        background: rgba(255, 255, 255, 0.35);\n        width: calc(var(--item-width) - 2 * 8px);\n      }\n      .stack-bg-item:nth-child(4) {\n        background: rgba(255, 255, 255, 0.45);\n        width: calc(var(--item-width) - 1 * 8px);\n      }\n      .stack-container {\n        display: block;\n        position: absolute;\n      }\n      .stack {\n        height: var(--item-height);\n        width: var(--item-width);\n        margin: calc(5px - var(--item-height)) 0 5px;\n      }\n      /* Styling for actual stack items */\n      .stack-item {\n        height: var(--item-height);\n        width: var(--item-width);\n        background: rgba(255, 255, 255, 0.6);\n        border-radius: 3px;\n        padding: 2px;\n        position: absolute;\n        box-sizing: border-box;\n        transition: 0.3s transform, 0.3s opacity;\n\n        /*\n         * Translate the stack item horizontally when not topmost or second\n         * topmost, and set its opacity to 0 so it's out of view.\n         */\n        transform: translate(100px, 0);\n        opacity: 0;\n      }\n      .stack-item:nth-child(even) {\n        /*\n         * We use negative translate for each even stack item to alternate the\n         * animation effect.\n         */\n        transform: translate(-100px, 0);\n      }\n      /*\n       * Style the second topmost stack item so it's displayed.\n       * We scale it so it's smaller than the topmost element by 8px total, to\n       * contribute to the illusion of depth.\n       */\n      .stack-item.second-topmost {\n        transform: scale(calc(1 - (4px / var(--item-width)))) translate(0, 0);\n        opacity: 0;\n      }\n      /*\n       * Style the topmost stack item so it's in full-width and slightly offset\n       * from the second topmost.\n       */\n      .stack-item.topmost {\n        opacity: 1;\n        transform: scale(1) translate(0, 4px);\n        z-index: 1;\n      }\n      /* Styling for selector dots */\n      .dots {\n        text-align: center;\n      }\n      .dots-item {\n        display: inline-block;\n        width: 6px;\n        height: 6px;\n        border-radius: 6px;\n        background: #fff;\n        margin: 0 2px;\n      }\n      .dots-item[selected] {\n        background: #2979ff;\n      }\n      .bg-img-container {\n        width: 100%;\n      }\n","title":"Stack With Bind Ad","metadata":{"preview":"a4a","skipValidation":true,"hidePreview":true,"width":350,"height":240,"layout":"responsive","author":"alanorozco"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":false,"isAmpAds":true,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"Sample AMPHTML ad using amp-bind, and amp-selector to create an interactive &quot;stack&quot; ad."},"route":"/documentation/examples/interactivity-dynamic-content/stack_with_bind_ad/index.html"}