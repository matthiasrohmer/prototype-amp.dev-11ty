{"filePath":"examples/source/interactivity-dynamic-content/Conditional_State.html","source":"<!--\n  ## Introduction\n  This snippet demonstrates how to create a simple `amp-state` with conditions.\n--><!-- -->\n<!doctype html>\n<html ⚡4email>\n<head>\n<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <!--\n    ## Setup\n    We use `amp-bind` to create a dynamic `amp-state`.\n  -->\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <style amp4email-boilerplate>body{visibility:hidden}</style>\n</head>\n<body>\n\n  <!--\n    ## Basic usage\n    The `charState` is set by the`AMP.setState` block in the `input` component. We check whether the state of user input has changed by using [input-throttled](https://amp.dev/documentation/examples/components/amp-bind/#debounce-input-events). If the state of input has changed, we check current the number of characters in the input (`event.value.length`) is. The number of characters determines what `charState` will be set. The item between the `?` question mark and the `:` colon meets the stated condition. The item after the `:` colon is given for anything that does not meet the stated condition. It is possible to have multiple conditions within the same `AMP.setState` block.\n\n    When a user types < 10 characters in the `input` section, they see the message \"There are under 10 characters, type more!\".\n\n    When a user types > 10 characters in the `input` section, they see the message \"You have typed over 10 characters, you can stop now.\".\n  -->\n<div>\n<p [text]=\"charState\">\n  Try typing a few characters into the textbox.\n</p>\n<input type=\"textbox\" on=\"input-throttled:AMP.setState({\n        charState: event.value.length < 10 ?  \n          'There are under 10 characters, type more!' : \n          'You have typed over 10 characters, you can stop now.'\n        })\">\n</div>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\nThis snippet demonstrates how to create a simple `amp-state` with conditions.\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">This snippet demonstrates how to create a simple <code>amp-state</code> with conditions.</p>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\nThis snippet demonstrates how to create a simple `amp-state` with conditions.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡4email>\n<head>\n<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"\n## Setup\nWe use `amp-bind` to create a dynamic `amp-state`.\n\n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Setup\nWe use `amp-bind` to create a dynamic `amp-state`.\n\n"},{"doc_":"","code":"<style amp4email-boilerplate>body{visibility:hidden}</style>\n</head>\n<body>\n\n","preview":"\n","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n## Basic usage\nThe `charState` is set by the`AMP.setState` block in the `input` component. We check whether the state of user input has changed by using [input-throttled](https://amp.dev/documentation/examples/components/amp-bind/#debounce-input-events). If the state of input has changed, we check current the number of characters in the input (`event.value.length`) is. The number of characters determines what `charState` will be set. The item between the `?` question mark and the `:` colon meets the stated condition. The item after the `:` colon is given for anything that does not meet the stated condition. It is possible to have multiple conditions within the same `AMP.setState` block.\n\nWhen a user types < 10 characters in the `input` section, they see the message \"There are under 10 characters, type more!\".\n\nWhen a user types > 10 characters in the `input` section, they see the message \"You have typed over 10 characters, you can stop now.\".\n\n","code":"<p [text]=\"charState\">\n  Try typing a few characters into the textbox.\n</p>\n<input type=\"textbox\"\n  on=\"input-throttled:AMP.setState({\n    charState: event.value.length < 10 ?  \n      'There are under 10 characters, type more!' : \n      'You have typed over 10 characters, you can stop now.'\n    })\">","preview":"  <div>\n    <p [text]=\"charState\">\n      Try typing a few characters into the textbox.\n    </p>\n    <input type=\"textbox\"\n      on=\"input-throttled:AMP.setState({\n        charState: event.value.length < 10 ?  \n          'There are under 10 characters, type more!' : \n          'You have typed over 10 characters, you can stop now.'\n        })\">\n  </div>\n","inBody":true,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"basic-usage","name":"Basic usage"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Basic usage\nThe `charState` is set by the`AMP.setState` block in the `input` component. We check whether the state of user input has changed by using [input-throttled](https://amp.dev/documentation/examples/components/amp-bind/#debounce-input-events). If the state of input has changed, we check current the number of characters in the input (`event.value.length`) is. The number of characters determines what `charState` will be set. The item between the `?` question mark and the `:` colon meets the stated condition. The item after the `:` colon is given for anything that does not meet the stated condition. It is possible to have multiple conditions within the same `AMP.setState` block.\n\nWhen a user types < 10 characters in the `input` section, they see the message \"There are under 10 characters, type more!\".\n\nWhen a user types > 10 characters in the `input` section, they see the message \"You have typed over 10 characters, you can stop now.\".\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\"><style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","styles":"","title":"Conditional State","metadata":{"author":"elisameyer"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":false,"isAmpAds":false,"isAmpEmail":true,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This snippet demonstrates how to create a simple amp-state with conditions."},"route":"/documentation/examples/interactivity-dynamic-content/conditional_state.email/index.html"}