{"filePath":"examples/source/e-commerce/Checkout_Flow/index.html","source":"<!--\n  ## Introduction\n\n  This sample demonstrates how you can implement a simple checkout page in AMP. The sample assumes that all payment processing is done server-side. The covered use cases are:\n  <ul>\n    <li>How to dynamically render shopping card data.</li>\n    <li>How to support user login with stored addresses and credit cards.</li>\n    <li>How to let users auto-fill their contact, address and credit card details.</li>\n    <li>How to handle promo/discount codes.</li>\n  </ul>\n  --><!-- -->\n<!doctype html>\n<html âš¡>\n<head>\n<meta charset=\"utf-8\">\n      <title>Checkout Flow</title>\n      <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/index.html\">\n      <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n      <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n      <!-- ## Setup -->\n      <!-- We use quite a few components:\n\n        `amp-form` for collecting and submitting user input. -->\n      <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n      <!-- `amp-access` for user login. -->\n      <script async custom-element=\"amp-access\" src=\"https://cdn.ampproject.org/v0/amp-access-0.1.js\"></script>\n      <!-- `amp-analytics` is required by the `amp-access` extension. -->\n      <script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n      <!-- `amp-list` for rendering personalized content, such as the shopping cart. -->\n      <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n      <!-- `amp-mustache` for rendering templates in combination with `amp-list`. -->\n      <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n      <!-- `amp-bind` for dynamically updating the page based on user input. -->\n      <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n      <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n      <!-- ## Sign-in Support -->\n\n        <!-- We use `amp-access` to integrate login and to show and hide a login button depending on whether the user is logged in. [amp-access](/documentation/examples/components/amp-access/) requires the definition of 3 endpoints as documented [here](/documentation/components/amp-access).\n\n        This sample allows an user to login and logout using either email/password or [Google sign in](https://developers.google.com/identity/sign-in/web/). Logout is implemented by configuring a second endpoint in the login property `sign-out`, find more [here](/content/amp-dev/documentation/components/reference/amp-access.md#login-page).  -->\n          <script id=\"amp-access\" type=\"application/json\">\n            {\n                \"authorization\": \"/documentation/examples/api/amp-access/authorization?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n                \"noPingback\": \"true\",\n                \"login\": {\n                  \"sign-in\": \"/documentation/examples/api/amp-access/login?rid=READER_ID\",\n                  \"sign-out\": \"/documentation/examples/api/amp-access/logout?rid=READER_ID\"\n                },\n                \"authorizationFallbackResponse\": {\n                    \"error\": true,\n                    \"loggedIn\": false\n                }\n            }\n          </script>\n          <style amp-custom>\n            :root {\n              --color-primary: #005AF0;\n              --color-secondary: #00DCC0;\n              --color-text-light: #fff;\n              --color-text-dark: #000;\n              --color-error: #B00020;\n              --color-bg-light: #FAFAFC;\n\n              --space-1: .5rem;  /* 8px */\n              --space-2: 1rem;   /* 16px */\n              --space-3: 1.5rem; /* 24px */\n              --space-4: 2rem;   /* 32px */\n\n              --box-shadow-1: 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 1px -1px rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);\n            }\n            .checkout-flow-sample {\n              width: 100vw;\n              max-width: 700px;\n              padding: var(--space-2);\n              box-sizing: border-box;\n            }\n            .checkout-flow-sample > * + *,\n            #checkout-form > * + * {\n              margin-top: var(--space-2);\n            }\n            .checkout-section {\n              min-width: 300px;\n              background: #fff;\n              box-shadow: var(--box-shadow-1);\n              padding: 0 var(--space-2);\n            }\n            .sub-section > *,\n            .checkout-section > * {\n              display: block;\n              width: calc(50% - var(--space-2));\n              padding: 0;\n              margin: var(--space-2) 0;\n              align-self: center;\n            }\n            .sub-section,\n            .checkout-section {\n              display: flex;\n              flex-wrap: wrap;\n              background: var(--color-bg-light);\n            }\n            .checkout-section input {\n              padding: var(--space-1)\n            }\n            .sub-section,\n            .checkout-section > amp-list,\n            .checkout-section > form,\n            .checkout-section > div,\n            .checkout-section > h3 {\n              width: 100%;\n            }\n            .checkout-section > h3 {\n              font-size: 18px;\n              font-weight: 500;\n              text-transform: uppercase;\n              padding: 0;\n              margin: var(--space-2) 0;\n            }\n            .shopping-cart .item:first-child {\n              margin-bottom: var(--space-1);\n            }\n            .shopping-cart .item:last-child {\n              margin-top: var(--space-1);\n            }\n            .shopping-cart .item {\n              display: flex;\n              justify-content: space-between;\n            }\n            .shopping-cart .name {\n              width: 60%;\n            }\n            .shopping-cart .price,\n            .shopping-cart .quantity {\n              display: block;\n              text-align: right;\n              min-width: 72px;\n              margin-left: var(--space-1);\n            }\n            .shopping-cart .summary .price,\n            .shopping-cart .summary .quantity {\n              margin: var(--space-1) 0 0 var(--space-1);\n            }\n            .list-reset {\n              list-style: none;\n              padding-left: 0;\n            }\n          </style>\n    </head>\n    <body>\n      <div class=\"checkout-flow-sample\">\n      <div [hidden]=\"checkoutSuccess\"><h1>Checkout</h1></div>\n\n      <!--  `amp-access` enables us to show either a Login or Logout button depending on whether the user is already logged-in, e.g. elements marked with `amp-access=\"NOT loggedIn\"` will only show for non-logged-in users. The button's on tap actions, e.g. `on=\"tap:amp-access.login-sign-in\"`, specifies which action should be taken when clicking on the button: `login` defines the property inside the `amp-access` json configuration, while `sign-in` defines the endpoint. -->\n      <div [hidden]=\"checkoutSuccess\">\n        <button amp-access=\"NOT loggedIn\" on=\"tap:amp-access.login-sign-in\">Login</button>\n        <button amp-access=\"loggedIn\" tabindex=\"0\" on=\"tap:amp-access.login-sign-out\" amp-access-hide>Logout</button>\n        <span amp-access=\"NOT loggedIn\">...or continue as guest</span>\n      </div>\n\n      <!-- ## Review Order (Shopping Cart) -->\n      <!-- The review order section displays the current shopping cart content and the total price. We pull in the shopping cart content from a JSON endpoint and render it inside an `amp-list`. The user is identified based on the AMP CLIENT_ID which is passed as\n        a request parameter. Another possibility would be to use cookies, which are included in the amp-list's source request, if the attribute `credentials=\"include\"` is set. Additionally, we bind the amp-list's `src` attribute to an implicit state object `[src]=\"shoppingCart.src\"`, which we use to refresh the content using `amp-bind`.\n      -->\n      <section [hidden]=\"checkoutSuccess\" class=\"checkout-section\">\n        <h3>Review Order</h3>\n        <amp-list width=\"auto\" height=\"180\" items=\".\" single-item layout=\"fixed-height\" credentials=\"include\" src=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/shoppingcart?clientId=CLIENT_ID(cart)\" [src]=\"shoppingCart.src\" binding=\"no\">\n          <template type=\"amp-mustache\">\n            <div class=\"shopping-cart\">\n              <div class=\"item header\">\n                <div class=\"name\"></div>\n                <div class=\"price\"><strong>Price</strong></div>\n                <div class=\"quantity\"><strong>Quantity</strong></div>\n              </div>\n              {{#items}}\n              <div class=\"item\">\n                <div class=\"name\">{{name}}</div>\n                <div class=\"price\">${{price}}</div>\n                <div class=\"quantity\">{{quantity}}x</div>\n              </div>\n              {{/items}}\n              {{#discount}}\n              <div class=\"item summary\">\n                <div class=\"name\"></div>\n                <div class=\"price\"><strong>Discount:</strong></div>\n                <div class=\"quantity\"><strong>{{.}}</strong></div>\n              </div>\n              {{/discount}}\n              <div class=\"item summary\">\n                <div class=\"name\"></div>\n                <div class=\"price\"><strong>Sum:</strong></div>\n                <div class=\"quantity\"><strong>${{total}}</strong></div>\n              </div>\n            </div>\n          </template>\n        </amp-list>\n      </section>\n\n      <!-- ## Promo/discount code -->\n      <!-- This section makes it possible to enter promo or discount codes. It's a simple `amp-form` that posts the\n        code to an XHR endpoint. If the form has been successfully submitted, we refresh the shopping carts\n        contents by updating the `shoppingCart` object with an updated src URL. We append a random value to invalidate any caches and force\n        the refresh. -->\n        <section [class]=\"checkoutSuccess ? 'hide' : 'checkout-section'\" class=\"checkout-section\">\n          <h3> Add a promotional code </h3>\n          <form method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/apply-code\" on=\"submit-success:AMP.setState({\n                        shoppingCart: {\n                          src: 'http://localhost:8080/documentation/examples/e-commerce/checkout_flow/shoppingcart?clientId=CLIENT_ID(cart)&' + random()\n                        }\n                     })\" target=\"_top\">\n            <input name=\"clientId\" type=\"hidden\" value=\"CLIENT_ID(cart)\" data-amp-replace=\"CLIENT_ID\">\n            <input name=\"code\" placeholder=\"Code\" aria-label=\"code\" value=\"abc123\">\n            <button value=\"Apply\">Apply</button>\n          </form>\n        </section>\n        <!-- ## The Checkout Form -->\n        <!-- This is the actual checkout form. Form submission takes place via XHR. Once the form has been successfully submitted, we set the\n          `checkoutSuccess` variable to `true`. This enables us to hide the forms once the checkout is done. Another option would have be to [redirect](/content/amp-dev/documentation/components/reference/amp-form.md#redirecting-after-a-submission) to a new page on successful checkout. -->\n          <form id=\"checkout-form\" method=\"post\" [hidden]=\"checkoutSuccess\" action-xhr=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/apply-code\" on=\"submit-success:AMP.setState({checkoutSuccess: true})\" target=\"_top\">\n\n            <!-- ## Contact Details -->\n            <!-- Not logged in users (`amp-access=\"NOT loggedIn\"`) will see this section to enter their contact details.  -->\n            <section class=\"checkout-section\" amp-access=\"NOT loggedIn\">\n              <h3>Contact</h3>\n              <label for=\"frmNameA\">Name</label>\n              <input name=\"name\" id=\"frmNameA\" placeholder=\"Full name\" autocomplete=\"name\">\n              <label for=\"frmEmailA\">Email</label>\n              <input type=\"email\" name=\"email\" id=\"frmEmailA\" placeholder=\"name@example.com\" autocomplete=\"email\">\n            </section>\n\n            <!-- ## Shipping & Billing Address -->\n            <!-- Logged in users (`amp-access=\"loggedIn\"`) can select an existing address which are pulled in using another amp-list. This section is initially hidden via the `amp-access-hide` attribute.\n\n              <p>We provide a third option for users to enter a new address. The radio button's [change action](/documentation/guides-and-tutorials/learn/amp-actions-and-events) triggers the visibilityof the address form `on=\"change:manualShippingAddress.toggleVisibility\"`.</p>\n            -->\n            <section class=\"checkout-section\" amp-access=\"loggedIn\" amp-access-hide>\n              <h3>Select Shipping Address</h3>\n              <amp-list width=\"auto\" height=\"96\" layout=\"fixed-height\" items=\".\" single-item credentials=\"include\" src=\"/static/samples/json/addresses.json\" binding=\"no\">\n                <template type=\"amp-mustache\">\n                  <ul class=\"list-reset\">\n                    {{#addresses}}\n                    <li>\n                      {{^default}}\n                      <input type=\"radio\" id=\"address{{id}}\" name=\"address\" value=\"{{id}}\" on=\"change:manualShippingAddress.hide\">\n                      <label for=\"address{{id}}\">{{name}}, {{street}}, {{city}} </label>\n                      {{/default}}\n                      {{#default}}\n                      <input type=\"radio\" checked id=\"defaultAddress{{id}}\" name=\"address\" value=\"{{id}}\" on=\"change:manualShippingAddress.hide\">\n                      <label for=\"defaultAddress{{id}}\">{{name}}, {{street}}, {{city}} {{#default}}<strong>[DEFAULT]</strong>{{/default}}</label>\n                      {{/default}}\n                      {{/addresses}}\n                    </li>\n                    {{#manual}}\n                    <li>\n                      <input type=\"radio\" id=\"ship-separate\" name=\"address\" value=\"{{id}}\" on=\"change:manualShippingAddress.toggleVisibility\">\n                      <label for=\"ship-separate\">Enter new Shipping Address</label>\n                    </li>\n                    {{/manual}}\n                  </ul>\n                </template>\n              </amp-list>\n\n              <section class=\"sub-section\" id=\"manualShippingAddress\" hidden>\n                <label for=\"manualShipAddressS\">Address</label>\n                <input name=\"ship-address\" id=\"manualShipAddressS\" placeholder=\"123 Any Street\" autocomplete=\"shipping street-address\">\n\n                <label for=\"manualShipCityS\">City</label>\n                <input name=\"ship-city\" id=\"manualShipCityS\" placeholder=\"New York\" autocomplete=\"shipping locality\">\n\n                <label for=\"manualShipStateS\">State</label>\n                <input name=\"ship-state\" id=\"manualShipStateS\" placeholder=\"NY\" autocomplete=\"shipping region\">\n\n                <label for=\"manualShipZipS\">Zip</label>\n                <input name=\"ship-zip\" id=\"manualShipZipS\" placeholder=\"10011\" autocomplete=\"shipping postal-code\">\n\n                <label for=\"manualShipCountryS\">Country</label>\n                <input name=\"ship-country\" id=\"manualShipCountryS\" placeholder=\"USA\" autocomplete=\"shipping country\">\n                <label for=\"saveNewAddress1\">Save Address</label>\n                <input id=\"saveNewAddress1\" type=\"checkbox\" checked on=\"change:shippingAddress.toggleVisibility\">\n              </section>\n\n              <label for=\"shippingAddressCheck\">Use Shipping as Billing Address</label>\n              <input id=\"shippingAddressCheck\" type=\"checkbox\" checked on=\"change:shippingAddress.toggleVisibility\">\n            </section>\n\n            <!-- Not logged in users see a simple form for entering the shipping address. We use the `autocomplete` attributes\n              to enable [auto fill for addresses](https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill) which greatly simplifies form fill-out for users.  -->\n              <section class=\"checkout-section\" amp-access=\"NOT loggedIn\">\n                <h3>Enter Shipping Address</h3>\n                <label for=\"shipAddressS\">Address</label>\n                <input name=\"ship-address\" id=\"shipAddressS\" placeholder=\"123 Any Street\" autocomplete=\"shipping street-address\">\n\n                <label for=\"shipCityS\">City</label>\n                <input name=\"ship-city\" id=\"shipCityS\" placeholder=\"New York\" autocomplete=\"shipping locality\">\n\n                <label for=\"shipStateS\">State</label>\n                <input name=\"ship-state\" id=\"shipStateS\" placeholder=\"NY\" autocomplete=\"shipping region\">\n\n                <label for=\"shipZipS\">Zip</label>\n                <input name=\"ship-zip\" id=\"shipZipS\" placeholder=\"10011\" autocomplete=\"shipping postal-code\">\n\n                <label for=\"shipCountryS\">Country</label>\n                <input name=\"ship-country\" id=\"shipCountryS\" placeholder=\"USA\" autocomplete=\"shipping country\">\n\n                <label for=\"shippingAddressCheck\">Use Shipping as Billing Address</label>\n                <input type=\"checkbox\" checked on=\"change:shippingAddress.toggleVisibility\">\n              </section>\n\n              <!-- The shipping address form is optional. We hide it initially using the `hidden` attribute so that it can be toggled\n                via the `toggleVisibility` action (`on=\"change:shippingAddress.toggleVisibility\"`).\n              -->\n              <section class=\"checkout-section\" hidden id=\"billingAddress\">\n                <h3>Enter Billing Address</h3>\n                <label for=\"billingAddressS\">Address</label>\n                <input name=\"billing-address\" id=\"billingAddressS\" placeholder=\"123 Any Street\" autocomplete=\"billing street-address\">\n\n                <label for=\"billingCityS\">City</label>\n                <input name=\"billing-city\" id=\"billingCityS\" placeholder=\"New York\" autocomplete=\"billing locality\">\n\n                <label for=\"billingStateS\">State</label>\n                <input name=\"billing-state\" id=\"billingStateS\" placeholder=\"NY\" autocomplete=\"billing region\">\n\n                <label for=\"billingZipS\">Zip</label>\n                <input name=\"billing-zip\" id=\"billingZipS\" placeholder=\"10011\" autocomplete=\"billing postal-code\">\n\n                <label for=\"billingCountryS\">Country</label>\n                <input name=\"billing-country\" id=\"billingCountryS\" placeholder=\"USA\" autocomplete=\"billing country\">\n              </section>\n\n              <!-- ## Payment Details -->\n              <!-- Logged in users (`amp-access=\"loggedIn\"`) can select an existing credit card which is pulled in using `amp-list` similar to how the shipping addresses are rendered dynamically above. It's also possible to manually enter credit card details. -->\n              <section class=\"checkout-section\" amp-access=\"loggedIn\" amp-access-hide>\n                <h3>Select Payment Details</h3>\n                <amp-list width=\"auto\" height=\"96\" layout=\"fixed-height\" items=\".\" single-item credentials=\"include\" src=\"/static/samples/json/credit-cards.json\" binding=\"no\">\n                  <template type=\"amp-mustache\">\n                    <ul class=\"list-reset\">\n                      {{#cards}}\n                      <li>\n                        {{^default}}\n                        <input type=\"radio\" id=\"cc{{id}}\" name=\"cc\" value=\"{{id}}\" on=\"change:manualCC.hide\">\n                        {{/default}}\n                        {{#default}}\n                        <input type=\"radio\" checked id=\"defaultCC{{id}}\" name=\"cc\" value=\"{{id}}\" on=\"change:manualCC.hide\">\n                        {{/default}}\n                        <label for=\"defaultCC{{id}}\">{{title}} {{#default}}<strong>[DEFAULT]</strong>{{/default}}</label>\n                        {{/cards}}\n                      </li>\n                      {{#manual}}\n                      <li>\n                        <input type=\"radio\" id=\"new-cc\" name=\"cc\" value=\"{{id}}\" on=\"change:manualCC.toggleVisibility\">\n                        <label for=\"new-cc\">Enter new Credit Card</label>\n                      </li>\n                      {{/manual}}\n                    </ul>\n                  </template>\n                </amp-list>\n\n                <section class=\"sub-section\" id=\"manualCC\" hidden>\n                  <label for=\"manualCCNameCC\">Name on card</label>\n                  <input name=\"ccname\" id=\"manualCCNameCC\" placeholder=\"Full Name\" autocomplete=\"cc-name\">\n\n                  <label for=\"manualCCCCNum\">Card Number</label>\n                  <input name=\"cardnumber\" id=\"manualCCCCNum\" autocomplete=\"cc-number\">\n\n                  <label for=\"manualCCCVC\">CVC</label>\n                  <input name=\"cvc\" id=\"manualCCCVC\" autocomplete=\"cc-csc\">\n\n                  <label for=\"manualCCExp\">Expiry</label>\n                  <input name=\"cc-exp\" id=\"manualCCExp\" placeholder=\"MM-YYYY\" autocomplete=\"cc-exp\">\n                  <label for=\"saveNewAddress2\">Save Credit Card</label>\n                  <input id=\"saveNewAddress2\" type=\"checkbox\" checked on=\"change:shippingAddress.toggleVisibility\">\n                </section>\n              </section>\n\n              <!-- Not logged in users can enter their credit card details manually. Note that we're using the credit card auto-fill markup. -->\n              <section class=\"checkout-section\" amp-access=\"NOT loggedIn\" amp-access-hide>\n                <h3>Enter Credit Card Details</h3>\n                <label for=\"nameCC\">Name on card</label>\n                <input name=\"ccname\" id=\"nameCC\" placeholder=\"Full Name\" autocomplete=\"cc-name\">\n\n                <label for=\"ccNum\">Card Number</label>\n                <input name=\"cardnumber\" id=\"ccNum\" autocomplete=\"cc-number\">\n\n                <label for=\"ccCVC\">CVC</label>\n                <input name=\"cvc\" id=\"ccCVC\" autocomplete=\"cc-csc\">\n\n                <label for=\"ccExp\">Expiry</label>\n                <input name=\"cc-exp\" id=\"ccExp\" placeholder=\"MM-YYYY\" autocomplete=\"cc-exp\">\n              </section>\n\n              <!-- ## Form Submission  -->\n              <!-- The pay now button simply submits the form containting the different checkout form sections. -->\n              <div [hidden]=\"checkoutSuccess\">\n                <input type=\"submit\" value=\"Pay Now\">\n                <span>Not for real ...</span>\n              </div>\n          </form>\n\n          <!-- This is the message that we will show after a successful checkout and the `checkoutSuccess` variable is set to `true`. -->\n          <section hidden [hidden]=\"checkoutSuccess\" class=\"checkout-section\">\n            <h3>Checkout success!</h3>\n          </section>\n\n          <!--\n            Note: This sample does not include any form validation. However, this can be easily added using AMP's support for [custom form validation](https://amp.dev/documentation/examples/components/amp-form/#form-custom-validation).\n          -->\n          <!-- -->\n      </div>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThis sample demonstrates how you can implement a simple checkout page in AMP. The sample assumes that all payment processing is done server-side. The covered use cases are:\n<ul>\n\n<li>How to dynamically render shopping card data.</li>\n\n<li>How to support user login with stored addresses and credit cards.</li>\n\n<li>How to let users auto-fill their contact, address and credit card details.</li>\n\n<li>How to handle promo/discount codes.</li>\n</ul>\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">This sample demonstrates how you can implement a simple checkout page in AMP. The sample assumes that all payment processing is done server-side. The covered use cases are:</p><ul>\n  <li>How to dynamically render shopping card data.</li>\n  <li>How to support user login with stored addresses and credit cards.</li>\n  <li>How to let users auto-fill their contact, address and credit card details.</li>\n  <li>How to handle promo/discount codes.</li>\n</ul>\n\n","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThis sample demonstrates how you can implement a simple checkout page in AMP. The sample assumes that all payment processing is done server-side. The covered use cases are:\n<ul>\n  <li>How to dynamically render shopping card data.</li>\n  <li>How to support user login with stored addresses and credit cards.</li>\n  <li>How to let users auto-fill their contact, address and credit card details.</li>\n  <li>How to handle promo/discount codes.</li>\n</ul>\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html âš¡>\n<head>\n<meta charset=\"utf-8\">\n      <title>Checkout Flow</title>\n      <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/index.html\">\n      <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n      <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"We use quite a few components:\n\n`amp-form` for collecting and submitting user input. \n","code":"<script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"We use quite a few components:\n\n `amp-form` for collecting and submitting user input. \n"},{"doc_":"`amp-access` for user login. \n","code":"<script async custom-element=\"amp-access\" src=\"https://cdn.ampproject.org/v0/amp-access-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-access` for user login. \n"},{"doc_":"`amp-analytics` is required by the `amp-access` extension. \n","code":"<script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-analytics` is required by the `amp-access` extension. \n"},{"doc_":"`amp-list` for rendering personalized content, such as the shopping cart. \n","code":"<script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-list` for rendering personalized content, such as the shopping cart. \n"},{"doc_":"`amp-mustache` for rendering templates in combination with `amp-list`. \n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-mustache` for rendering templates in combination with `amp-list`. \n"},{"doc_":"`amp-bind` for dynamically updating the page based on user input. \n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-bind` for dynamically updating the page based on user input. \n"},{"doc_":"","code":"<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n","preview":"","inBody":false,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Sign-in Support\n","code":"\n","preview":"","inBody":false,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"sign-in-support","name":"Sign-in Support"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Sign-in Support\n"},{"doc_":"\nWe use `amp-access` to integrate login and to show and hide a login button depending on whether the user is logged in. [amp-access](/documentation/examples/components/amp-access/) requires the definition of 3 endpoints as documented [here](/documentation/components/amp-access).\n\nThis sample allows an user to login and logout using either email/password or [Google sign in](https://developers.google.com/identity/sign-in/web/). Logout is implemented by configuring a second endpoint in the login property `sign-out`, find more [here](/content/amp-dev/documentation/components/reference/amp-access.md#login-page).  \n","code":"<script id=\"amp-access\" type=\"application/json\">\n  {\n      \"authorization\": \"/documentation/examples/api/amp-access/authorization?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n      \"noPingback\": \"true\",\n      \"login\": {\n        \"sign-in\": \"/documentation/examples/api/amp-access/login?rid=READER_ID\",\n        \"sign-out\": \"/documentation/examples/api/amp-access/logout?rid=READER_ID\"\n      },\n      \"authorizationFallbackResponse\": {\n          \"error\": true,\n          \"loggedIn\": false\n      }\n  }\n</script>\n","preview":"","inBody":false,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":10,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" We use `amp-access` to integrate login and to show and hide a login button depending on whether the user is logged in. [amp-access](/documentation/examples/components/amp-access/) requires the definition of 3 endpoints as documented [here](/documentation/components/amp-access).\n\nThis sample allows an user to login and logout using either email/password or [Google sign in](https://developers.google.com/identity/sign-in/web/). Logout is implemented by configuring a second endpoint in the login property `sign-out`, find more [here](/content/amp-dev/documentation/components/reference/amp-access.md#login-page).  \n"},{"doc_":"","code":"<style amp-custom>\n  :root {\n    --color-primary: #005AF0;\n    --color-secondary: #00DCC0;\n    --color-text-light: #fff;\n    --color-text-dark: #000;\n    --color-error: #B00020;\n    --color-bg-light: #FAFAFC;\n\n    --space-1: .5rem;  /* 8px */\n    --space-2: 1rem;   /* 16px */\n    --space-3: 1.5rem; /* 24px */\n    --space-4: 2rem;   /* 32px */\n\n    --box-shadow-1: 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 1px -1px rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);\n  }\n  .checkout-flow-sample {\n    width: 100vw;\n    max-width: 700px;\n    padding: var(--space-2);\n    box-sizing: border-box;\n  }\n  .checkout-flow-sample > * + *,\n  #checkout-form > * + * {\n    margin-top: var(--space-2);\n  }\n  .checkout-section {\n    min-width: 300px;\n    background: #fff;\n    box-shadow: var(--box-shadow-1);\n    padding: 0 var(--space-2);\n  }\n  .sub-section > *,\n  .checkout-section > * {\n    display: block;\n    width: calc(50% - var(--space-2));\n    padding: 0;\n    margin: var(--space-2) 0;\n    align-self: center;\n  }\n  .sub-section,\n  .checkout-section {\n    display: flex;\n    flex-wrap: wrap;\n    background: var(--color-bg-light);\n  }\n  .checkout-section input {\n    padding: var(--space-1)\n  }\n  .sub-section,\n  .checkout-section > amp-list,\n  .checkout-section > form,\n  .checkout-section > div,\n  .checkout-section > h3 {\n    width: 100%;\n  }\n  .checkout-section > h3 {\n    font-size: 18px;\n    font-weight: 500;\n    text-transform: uppercase;\n    padding: 0;\n    margin: var(--space-2) 0;\n  }\n  .shopping-cart .item:first-child {\n    margin-bottom: var(--space-1);\n  }\n  .shopping-cart .item:last-child {\n    margin-top: var(--space-1);\n  }\n  .shopping-cart .item {\n    display: flex;\n    justify-content: space-between;\n  }\n  .shopping-cart .name {\n    width: 60%;\n  }\n  .shopping-cart .price,\n  .shopping-cart .quantity {\n    display: block;\n    text-align: right;\n    min-width: 72px;\n    margin-left: var(--space-1);\n  }\n  .shopping-cart .summary .price,\n  .shopping-cart .summary .quantity {\n    margin: var(--space-1) 0 0 var(--space-1);\n  }\n  .list-reset {\n    list-style: none;\n    padding-left: 0;\n  }\n</style>\n</head>\n<body>\n<div class=\"checkout-flow-sample\">\n<div [hidden]=\"checkoutSuccess\">\n<h1>Checkout</h1>\n</div>\n\n","preview":"  <div class=\"checkout-flow-sample\">\n    <div [hidden]=\"checkoutSuccess\">\n      <h1>Checkout</h1>\n    </div>\n\n","inBody":false,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":10,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"`amp-access` enables us to show either a Login or Logout button depending on whether the user is already logged-in, e.g. elements marked with `amp-access=\"NOT loggedIn\"` will only show for non-logged-in users. The button's on tap actions, e.g. `on=\"tap:amp-access.login-sign-in\"`, specifies which action should be taken when clicking on the button: `login` defines the property inside the `amp-access` json configuration, while `sign-in` defines the endpoint. \n","code":"<div [hidden]=\"checkoutSuccess\">\n  <button amp-access=\"NOT loggedIn\"\n    on=\"tap:amp-access.login-sign-in\">Login</button>\n  <button amp-access=\"loggedIn\"\n    tabindex=\"0\"\n    on=\"tap:amp-access.login-sign-out\"\n    amp-access-hide>Logout</button>\n  <span amp-access=\"NOT loggedIn\">...or continue as guest</span>\n</div>\n","preview":"    <div [hidden]=\"checkoutSuccess\">\n      <button amp-access=\"NOT loggedIn\"\n        on=\"tap:amp-access.login-sign-in\">Login</button>\n      <button amp-access=\"loggedIn\"\n        tabindex=\"0\"\n        on=\"tap:amp-access.login-sign-out\"\n        amp-access-hide>Logout</button>\n      <span amp-access=\"NOT loggedIn\">...or continue as guest</span>\n    </div>\n","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-access` enables us to show either a Login or Logout button depending on whether the user is already logged-in, e.g. elements marked with `amp-access=\"NOT loggedIn\"` will only show for non-logged-in users. The button's on tap actions, e.g. `on=\"tap:amp-access.login-sign-in\"`, specifies which action should be taken when clicking on the button: `login` defines the property inside the `amp-access` json configuration, while `sign-in` defines the endpoint. \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":14,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Review Order (Shopping Cart)\n","code":"","preview":"","inBody":true,"id":15,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"review-order-(shopping-cart)","name":"Review Order (Shopping Cart)"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Review Order (Shopping Cart)\n"},{"doc_":"The review order section displays the current shopping cart content and the total price. We pull in the shopping cart content from a JSON endpoint and render it inside an `amp-list`. The user is identified based on the AMP CLIENT_ID which is passed as\n\na request parameter. Another possibility would be to use cookies, which are included in the amp-list's source request, if the attribute `credentials=\"include\"` is set. Additionally, we bind the amp-list's `src` attribute to an implicit state object `[src]=\"shoppingCart.src\"`, which we use to refresh the content using `amp-bind`.\n\n","code":"<section [hidden]=\"checkoutSuccess\"\n  class=\"checkout-section\">\n  <h3>Review Order</h3>\n  <amp-list width=\"auto\"\n    height=\"180\"\n    items=\".\"\n    single-item\n    layout=\"fixed-height\"\n    credentials=\"include\"\n    src=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/shoppingcart?clientId=CLIENT_ID(cart)\"\n    [src]=\"shoppingCart.src\"\n    binding=\"no\">\n    <template type=\"amp-mustache\">\n      <div class=\"shopping-cart\">\n        <div class=\"item header\">\n          <div class=\"name\"></div>\n          <div class=\"price\"><strong>Price</strong></div>\n          <div class=\"quantity\"><strong>Quantity</strong></div>\n        </div>\n        {{#items}}\n          <div class=\"item\">\n            <div class=\"name\">{{name}}</div>\n            <div class=\"price\">${{price}}</div>\n            <div class=\"quantity\">{{quantity}}x</div>\n          </div>\n        {{/items}}\n        {{#discount}}\n          <div class=\"item summary\">\n            <div class=\"name\"></div>\n            <div class=\"price\"><strong>Discount:</strong></div>\n            <div class=\"quantity\"><strong>{{.}}</strong></div>\n          </div>\n        {{/discount}}\n        <div class=\"item summary\">\n          <div class=\"name\"></div>\n          <div class=\"price\"><strong>Sum:</strong></div>\n          <div class=\"quantity\"><strong>${{total}}</strong></div>\n        </div>\n      </div>\n    </template>\n  </amp-list>\n</section>\n","preview":"    <section [hidden]=\"checkoutSuccess\"\n      class=\"checkout-section\">\n      <h3>Review Order</h3>\n      <amp-list width=\"auto\"\n        height=\"180\"\n        items=\".\"\n        single-item\n        layout=\"fixed-height\"\n        credentials=\"include\"\n        src=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/shoppingcart?clientId=CLIENT_ID(cart)\"\n        [src]=\"shoppingCart.src\"\n        binding=\"no\">\n        <template type=\"amp-mustache\">\n          <div class=\"shopping-cart\">\n            <div class=\"item header\">\n              <div class=\"name\"></div>\n              <div class=\"price\"><strong>Price</strong></div>\n              <div class=\"quantity\"><strong>Quantity</strong></div>\n            </div>\n            {{#items}}\n              <div class=\"item\">\n                <div class=\"name\">{{name}}</div>\n                <div class=\"price\">${{price}}</div>\n                <div class=\"quantity\">{{quantity}}x</div>\n              </div>\n            {{/items}}\n            {{#discount}}\n              <div class=\"item summary\">\n                <div class=\"name\"></div>\n                <div class=\"price\"><strong>Discount:</strong></div>\n                <div class=\"quantity\"><strong>{{.}}</strong></div>\n              </div>\n            {{/discount}}\n            <div class=\"item summary\">\n              <div class=\"name\"></div>\n              <div class=\"price\"><strong>Sum:</strong></div>\n              <div class=\"quantity\"><strong>${{total}}</strong></div>\n            </div>\n          </div>\n        </template>\n      </amp-list>\n    </section>\n","inBody":true,"id":16,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The review order section displays the current shopping cart content and the total price. We pull in the shopping cart content from a JSON endpoint and render it inside an `amp-list`. The user is identified based on the AMP CLIENT_ID which is passed as\n   a request parameter. Another possibility would be to use cookies, which are included in the amp-list's source request, if the attribute `credentials=\"include\"` is set. Additionally, we bind the amp-list's `src` attribute to an implicit state object `[src]=\"shoppingCart.src\"`, which we use to refresh the content using `amp-bind`.\n \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":17,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Promo/discount code\n","code":"","preview":"","inBody":true,"id":18,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"promo/discount-code","name":"Promo/discount code"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Promo/discount code\n"},{"doc_":"This section makes it possible to enter promo or discount codes. It's a simple `amp-form` that posts the\n\ncode to an XHR endpoint. If the form has been successfully submitted, we refresh the shopping carts\n\ncontents by updating the `shoppingCart` object with an updated src URL. We append a random value to invalidate any caches and force\n\nthe refresh. \n","code":"<section [class]=\"checkoutSuccess ? 'hide' : 'checkout-section'\"\n  class=\"checkout-section\">\n  <h3> Add a promotional code </h3>\n  <form method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/apply-code\"\n    on=\"submit-success:AMP.setState({\n                    shoppingCart: {\n                      src: 'http://localhost:8080/documentation/examples/e-commerce/checkout_flow/shoppingcart?clientId=CLIENT_ID(cart)&' + random()\n                    }\n                 })\"\n    target=\"_top\">\n    <input name=\"clientId\"\n      type=\"hidden\"\n      value=\"CLIENT_ID(cart)\"\n      data-amp-replace=\"CLIENT_ID\">\n    <input name=\"code\"\n      placeholder=\"Code\"\n      aria-label=\"code\"\n      value=\"abc123\">\n    <button value=\"Apply\">Apply</button>\n  </form>\n</section>\n","preview":"    <section [class]=\"checkoutSuccess ? 'hide' : 'checkout-section'\"\n      class=\"checkout-section\">\n      <h3> Add a promotional code </h3>\n      <form method=\"post\"\n        action-xhr=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/apply-code\"\n        on=\"submit-success:AMP.setState({\n                        shoppingCart: {\n                          src: 'http://localhost:8080/documentation/examples/e-commerce/checkout_flow/shoppingcart?clientId=CLIENT_ID(cart)&' + random()\n                        }\n                     })\"\n        target=\"_top\">\n        <input name=\"clientId\"\n          type=\"hidden\"\n          value=\"CLIENT_ID(cart)\"\n          data-amp-replace=\"CLIENT_ID\">\n        <input name=\"code\"\n          placeholder=\"Code\"\n          aria-label=\"code\"\n          value=\"abc123\">\n        <button value=\"Apply\">Apply</button>\n      </form>\n    </section>\n","inBody":true,"id":19,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"This section makes it possible to enter promo or discount codes. It's a simple `amp-form` that posts the\n   code to an XHR endpoint. If the form has been successfully submitted, we refresh the shopping carts\n   contents by updating the `shoppingCart` object with an updated src URL. We append a random value to invalidate any caches and force\n   the refresh. \n"},{"doc_":"## The Checkout Form\n","code":"","preview":"","inBody":true,"id":20,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"the-checkout-form","name":"The Checkout Form"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## The Checkout Form\n"},{"doc_":"This is the actual checkout form. Form submission takes place via XHR. Once the form has been successfully submitted, we set the\n\n`checkoutSuccess` variable to `true`. This enables us to hide the forms once the checkout is done. Another option would have be to [redirect](/content/amp-dev/documentation/components/reference/amp-form.md#redirecting-after-a-submission) to a new page on successful checkout. \n","code":"<form id=\"checkout-form\"\n  method=\"post\"\n  [hidden]=\"checkoutSuccess\"\n  action-xhr=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/apply-code\"\n  on=\"submit-success:AMP.setState({checkoutSuccess: true})\"\n  target=\"_top\">\n\n","preview":"    <form id=\"checkout-form\"\n      method=\"post\"\n      [hidden]=\"checkoutSuccess\"\n      action-xhr=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/apply-code\"\n      on=\"submit-success:AMP.setState({checkoutSuccess: true})\"\n      target=\"_top\">\n\n","inBody":true,"id":21,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"This is the actual checkout form. Form submission takes place via XHR. Once the form has been successfully submitted, we set the\n     `checkoutSuccess` variable to `true`. This enables us to hide the forms once the checkout is done. Another option would have be to [redirect](/content/amp-dev/documentation/components/reference/amp-form.md#redirecting-after-a-submission) to a new page on successful checkout. \n"},{"doc_":"## Contact Details\n","code":"","preview":"","inBody":true,"id":22,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"contact-details","name":"Contact Details"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Contact Details\n"},{"doc_":"Not logged in users (`amp-access=\"NOT loggedIn\"`) will see this section to enter their contact details.  \n","code":"<section class=\"checkout-section\"\n  amp-access=\"NOT loggedIn\">\n  <h3>Contact</h3>\n  <label for=\"frmNameA\">Name</label>\n  <input name=\"name\"\n    id=\"frmNameA\"\n    placeholder=\"Full name\"\n    autocomplete=\"name\">\n  <label for=\"frmEmailA\">Email</label>\n  <input type=\"email\"\n    name=\"email\"\n    id=\"frmEmailA\"\n    placeholder=\"name@example.com\"\n    autocomplete=\"email\">\n</section>\n","preview":"      <section class=\"checkout-section\"\n        amp-access=\"NOT loggedIn\">\n        <h3>Contact</h3>\n        <label for=\"frmNameA\">Name</label>\n        <input name=\"name\"\n          id=\"frmNameA\"\n          placeholder=\"Full name\"\n          autocomplete=\"name\">\n        <label for=\"frmEmailA\">Email</label>\n        <input type=\"email\"\n          name=\"email\"\n          id=\"frmEmailA\"\n          placeholder=\"name@example.com\"\n          autocomplete=\"email\">\n      </section>\n","inBody":true,"id":23,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Not logged in users (`amp-access=\"NOT loggedIn\"`) will see this section to enter their contact details.  \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":24,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Shipping & Billing Address\n","code":"","preview":"","inBody":true,"id":25,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"shipping-&-billing-address","name":"Shipping & Billing Address"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Shipping & Billing Address\n"},{"doc_":"Logged in users (`amp-access=\"loggedIn\"`) can select an existing address which are pulled in using another amp-list. This section is initially hidden via the `amp-access-hide` attribute.\n\n<p>We provide a third option for users to enter a new address. The radio button's [change action](/documentation/guides-and-tutorials/learn/amp-actions-and-events) triggers the visibilityof the address form `on=\"change:manualShippingAddress.toggleVisibility\"`.</p>\n\n","code":"<section class=\"checkout-section\"\n  amp-access=\"loggedIn\"\n  amp-access-hide>\n  <h3>Select Shipping Address</h3>\n  <amp-list width=\"auto\"\n    height=\"96\"\n    layout=\"fixed-height\"\n    items=\".\"\n    single-item\n    credentials=\"include\"\n    src=\"/static/samples/json/addresses.json\"\n    binding=\"no\">\n    <template type=\"amp-mustache\">\n      <ul class=\"list-reset\">\n        {{#addresses}}\n          <li>\n            {{^default}}\n              <input type=\"radio\"\n                id=\"address{{id}}\"\n                name=\"address\"\n                value=\"{{id}}\"\n                on=\"change:manualShippingAddress.hide\">\n              <label for=\"address{{id}}\">{{name}}, {{street}}, {{city}} </label>\n            {{/default}}\n            {{#default}}\n              <input type=\"radio\"\n                checked\n                id=\"defaultAddress{{id}}\"\n                name=\"address\"\n                value=\"{{id}}\"\n                on=\"change:manualShippingAddress.hide\">\n              <label for=\"defaultAddress{{id}}\">{{name}}, {{street}}, {{city}} {{#default}}<strong>[DEFAULT]</strong>{{/default}}</label>\n            {{/default}}\n        {{/addresses}}\n        </li>\n        {{#manual}}\n          <li>\n            <input type=\"radio\"\n              id=\"ship-separate\"\n              name=\"address\"\n              value=\"{{id}}\"\n              on=\"change:manualShippingAddress.toggleVisibility\">\n            <label for=\"ship-separate\">Enter new Shipping Address</label>\n          </li>\n        {{/manual}}\n      </ul>\n    </template>\n  </amp-list>\n\n  <section class=\"sub-section\"\n    id=\"manualShippingAddress\"\n    hidden>\n    <label for=\"manualShipAddressS\">Address</label>\n    <input name=\"ship-address\"\n      id=\"manualShipAddressS\"\n      placeholder=\"123 Any Street\"\n      autocomplete=\"shipping street-address\">\n\n    <label for=\"manualShipCityS\">City</label>\n    <input name=\"ship-city\"\n      id=\"manualShipCityS\"\n      placeholder=\"New York\"\n      autocomplete=\"shipping locality\">\n\n    <label for=\"manualShipStateS\">State</label>\n    <input name=\"ship-state\"\n      id=\"manualShipStateS\"\n      placeholder=\"NY\"\n      autocomplete=\"shipping region\">\n\n    <label for=\"manualShipZipS\">Zip</label>\n    <input name=\"ship-zip\"\n      id=\"manualShipZipS\"\n      placeholder=\"10011\"\n      autocomplete=\"shipping postal-code\">\n\n    <label for=\"manualShipCountryS\">Country</label>\n    <input name=\"ship-country\"\n      id=\"manualShipCountryS\"\n      placeholder=\"USA\"\n      autocomplete=\"shipping country\">\n    <label for=\"saveNewAddress1\">Save Address</label>\n    <input id=\"saveNewAddress1\"\n      type=\"checkbox\"\n      checked\n      on=\"change:shippingAddress.toggleVisibility\">\n  </section>\n\n  <label for=\"shippingAddressCheck\">Use Shipping as Billing Address</label>\n  <input id=\"shippingAddressCheck\"\n    type=\"checkbox\"\n    checked\n    on=\"change:shippingAddress.toggleVisibility\">\n</section>\n","preview":"      <section class=\"checkout-section\"\n        amp-access=\"loggedIn\"\n        amp-access-hide>\n        <h3>Select Shipping Address</h3>\n        <amp-list width=\"auto\"\n          height=\"96\"\n          layout=\"fixed-height\"\n          items=\".\"\n          single-item\n          credentials=\"include\"\n          src=\"/static/samples/json/addresses.json\"\n          binding=\"no\">\n          <template type=\"amp-mustache\">\n            <ul class=\"list-reset\">\n              {{#addresses}}\n                <li>\n                  {{^default}}\n                    <input type=\"radio\"\n                      id=\"address{{id}}\"\n                      name=\"address\"\n                      value=\"{{id}}\"\n                      on=\"change:manualShippingAddress.hide\">\n                    <label for=\"address{{id}}\">{{name}}, {{street}}, {{city}} </label>\n                  {{/default}}\n                  {{#default}}\n                    <input type=\"radio\"\n                      checked\n                      id=\"defaultAddress{{id}}\"\n                      name=\"address\"\n                      value=\"{{id}}\"\n                      on=\"change:manualShippingAddress.hide\">\n                    <label for=\"defaultAddress{{id}}\">{{name}}, {{street}}, {{city}} {{#default}}<strong>[DEFAULT]</strong>{{/default}}</label>\n                  {{/default}}\n              {{/addresses}}\n              </li>\n              {{#manual}}\n                <li>\n                  <input type=\"radio\"\n                    id=\"ship-separate\"\n                    name=\"address\"\n                    value=\"{{id}}\"\n                    on=\"change:manualShippingAddress.toggleVisibility\">\n                  <label for=\"ship-separate\">Enter new Shipping Address</label>\n                </li>\n              {{/manual}}\n            </ul>\n          </template>\n        </amp-list>\n\n        <section class=\"sub-section\"\n          id=\"manualShippingAddress\"\n          hidden>\n          <label for=\"manualShipAddressS\">Address</label>\n          <input name=\"ship-address\"\n            id=\"manualShipAddressS\"\n            placeholder=\"123 Any Street\"\n            autocomplete=\"shipping street-address\">\n\n          <label for=\"manualShipCityS\">City</label>\n          <input name=\"ship-city\"\n            id=\"manualShipCityS\"\n            placeholder=\"New York\"\n            autocomplete=\"shipping locality\">\n\n          <label for=\"manualShipStateS\">State</label>\n          <input name=\"ship-state\"\n            id=\"manualShipStateS\"\n            placeholder=\"NY\"\n            autocomplete=\"shipping region\">\n\n          <label for=\"manualShipZipS\">Zip</label>\n          <input name=\"ship-zip\"\n            id=\"manualShipZipS\"\n            placeholder=\"10011\"\n            autocomplete=\"shipping postal-code\">\n\n          <label for=\"manualShipCountryS\">Country</label>\n          <input name=\"ship-country\"\n            id=\"manualShipCountryS\"\n            placeholder=\"USA\"\n            autocomplete=\"shipping country\">\n          <label for=\"saveNewAddress1\">Save Address</label>\n          <input id=\"saveNewAddress1\"\n            type=\"checkbox\"\n            checked\n            on=\"change:shippingAddress.toggleVisibility\">\n        </section>\n\n        <label for=\"shippingAddressCheck\">Use Shipping as Billing Address</label>\n        <input id=\"shippingAddressCheck\"\n          type=\"checkbox\"\n          checked\n          on=\"change:shippingAddress.toggleVisibility\">\n      </section>\n","inBody":true,"id":26,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Logged in users (`amp-access=\"loggedIn\"`) can select an existing address which are pulled in using another amp-list. This section is initially hidden via the `amp-access-hide` attribute.\n\n       <p>We provide a third option for users to enter a new address. The radio button's [change action](/documentation/guides-and-tutorials/learn/amp-actions-and-events) triggers the visibilityof the address form `on=\"change:manualShippingAddress.toggleVisibility\"`.</p>\n     \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":27,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Not logged in users see a simple form for entering the shipping address. We use the `autocomplete` attributes\n\nto enable [auto fill for addresses](https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill) which greatly simplifies form fill-out for users.  \n","code":"<section class=\"checkout-section\"\n  amp-access=\"NOT loggedIn\">\n  <h3>Enter Shipping Address</h3>\n  <label for=\"shipAddressS\">Address</label>\n  <input name=\"ship-address\"\n    id=\"shipAddressS\"\n    placeholder=\"123 Any Street\"\n    autocomplete=\"shipping street-address\">\n\n  <label for=\"shipCityS\">City</label>\n  <input name=\"ship-city\"\n    id=\"shipCityS\"\n    placeholder=\"New York\"\n    autocomplete=\"shipping locality\">\n\n  <label for=\"shipStateS\">State</label>\n  <input name=\"ship-state\"\n    id=\"shipStateS\"\n    placeholder=\"NY\"\n    autocomplete=\"shipping region\">\n\n  <label for=\"shipZipS\">Zip</label>\n  <input name=\"ship-zip\"\n    id=\"shipZipS\"\n    placeholder=\"10011\"\n    autocomplete=\"shipping postal-code\">\n\n  <label for=\"shipCountryS\">Country</label>\n  <input name=\"ship-country\"\n    id=\"shipCountryS\"\n    placeholder=\"USA\"\n    autocomplete=\"shipping country\">\n\n  <label for=\"shippingAddressCheck\">Use Shipping as Billing Address</label>\n  <input type=\"checkbox\"\n    checked\n    on=\"change:shippingAddress.toggleVisibility\">\n</section>\n","preview":"      <section class=\"checkout-section\"\n        amp-access=\"NOT loggedIn\">\n        <h3>Enter Shipping Address</h3>\n        <label for=\"shipAddressS\">Address</label>\n        <input name=\"ship-address\"\n          id=\"shipAddressS\"\n          placeholder=\"123 Any Street\"\n          autocomplete=\"shipping street-address\">\n\n        <label for=\"shipCityS\">City</label>\n        <input name=\"ship-city\"\n          id=\"shipCityS\"\n          placeholder=\"New York\"\n          autocomplete=\"shipping locality\">\n\n        <label for=\"shipStateS\">State</label>\n        <input name=\"ship-state\"\n          id=\"shipStateS\"\n          placeholder=\"NY\"\n          autocomplete=\"shipping region\">\n\n        <label for=\"shipZipS\">Zip</label>\n        <input name=\"ship-zip\"\n          id=\"shipZipS\"\n          placeholder=\"10011\"\n          autocomplete=\"shipping postal-code\">\n\n        <label for=\"shipCountryS\">Country</label>\n        <input name=\"ship-country\"\n          id=\"shipCountryS\"\n          placeholder=\"USA\"\n          autocomplete=\"shipping country\">\n\n        <label for=\"shippingAddressCheck\">Use Shipping as Billing Address</label>\n        <input type=\"checkbox\"\n          checked\n          on=\"change:shippingAddress.toggleVisibility\">\n      </section>\n","inBody":true,"id":28,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Not logged in users see a simple form for entering the shipping address. We use the `autocomplete` attributes\n       to enable [auto fill for addresses](https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill) which greatly simplifies form fill-out for users.  \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":29,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"The shipping address form is optional. We hide it initially using the `hidden` attribute so that it can be toggled\n\nvia the `toggleVisibility` action (`on=\"change:shippingAddress.toggleVisibility\"`).\n\n","code":"<section class=\"checkout-section\"\n  hidden\n  id=\"billingAddress\">\n  <h3>Enter Billing Address</h3>\n  <label for=\"billingAddressS\">Address</label>\n  <input name=\"billing-address\"\n    id=\"billingAddressS\"\n    placeholder=\"123 Any Street\"\n    autocomplete=\"billing street-address\">\n\n  <label for=\"billingCityS\">City</label>\n  <input name=\"billing-city\"\n    id=\"billingCityS\"\n    placeholder=\"New York\"\n    autocomplete=\"billing locality\">\n\n  <label for=\"billingStateS\">State</label>\n  <input name=\"billing-state\"\n    id=\"billingStateS\"\n    placeholder=\"NY\"\n    autocomplete=\"billing region\">\n\n  <label for=\"billingZipS\">Zip</label>\n  <input name=\"billing-zip\"\n    id=\"billingZipS\"\n    placeholder=\"10011\"\n    autocomplete=\"billing postal-code\">\n\n  <label for=\"billingCountryS\">Country</label>\n  <input name=\"billing-country\"\n    id=\"billingCountryS\"\n    placeholder=\"USA\"\n    autocomplete=\"billing country\">\n</section>\n","preview":"      <section class=\"checkout-section\"\n        hidden\n        id=\"billingAddress\">\n        <h3>Enter Billing Address</h3>\n        <label for=\"billingAddressS\">Address</label>\n        <input name=\"billing-address\"\n          id=\"billingAddressS\"\n          placeholder=\"123 Any Street\"\n          autocomplete=\"billing street-address\">\n\n        <label for=\"billingCityS\">City</label>\n        <input name=\"billing-city\"\n          id=\"billingCityS\"\n          placeholder=\"New York\"\n          autocomplete=\"billing locality\">\n\n        <label for=\"billingStateS\">State</label>\n        <input name=\"billing-state\"\n          id=\"billingStateS\"\n          placeholder=\"NY\"\n          autocomplete=\"billing region\">\n\n        <label for=\"billingZipS\">Zip</label>\n        <input name=\"billing-zip\"\n          id=\"billingZipS\"\n          placeholder=\"10011\"\n          autocomplete=\"billing postal-code\">\n\n        <label for=\"billingCountryS\">Country</label>\n        <input name=\"billing-country\"\n          id=\"billingCountryS\"\n          placeholder=\"USA\"\n          autocomplete=\"billing country\">\n      </section>\n","inBody":true,"id":30,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The shipping address form is optional. We hide it initially using the `hidden` attribute so that it can be toggled\n         via the `toggleVisibility` action (`on=\"change:shippingAddress.toggleVisibility\"`).\n       \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":31,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Payment Details\n","code":"","preview":"","inBody":true,"id":32,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"payment-details","name":"Payment Details"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Payment Details\n"},{"doc_":"Logged in users (`amp-access=\"loggedIn\"`) can select an existing credit card which is pulled in using `amp-list` similar to how the shipping addresses are rendered dynamically above. It's also possible to manually enter credit card details. \n","code":"<section class=\"checkout-section\"\n  amp-access=\"loggedIn\"\n  amp-access-hide>\n  <h3>Select Payment Details</h3>\n  <amp-list width=\"auto\"\n    height=\"96\"\n    layout=\"fixed-height\"\n    items=\".\"\n    single-item\n    credentials=\"include\"\n    src=\"/static/samples/json/credit-cards.json\"\n    binding=\"no\">\n    <template type=\"amp-mustache\">\n      <ul class=\"list-reset\">\n        {{#cards}}\n          <li>\n            {{^default}}\n              <input type=\"radio\"\n                id=\"cc{{id}}\"\n                name=\"cc\"\n                value=\"{{id}}\"\n                on=\"change:manualCC.hide\">\n            {{/default}}\n            {{#default}}\n              <input type=\"radio\"\n                checked\n                id=\"defaultCC{{id}}\"\n                name=\"cc\"\n                value=\"{{id}}\"\n                on=\"change:manualCC.hide\">\n            {{/default}}\n            <label for=\"defaultCC{{id}}\">{{title}} {{#default}}<strong>[DEFAULT]</strong>{{/default}}</label>\n        {{/cards}}\n        </li>\n        {{#manual}}\n          <li>\n            <input type=\"radio\"\n              id=\"new-cc\"\n              name=\"cc\"\n              value=\"{{id}}\"\n              on=\"change:manualCC.toggleVisibility\">\n            <label for=\"new-cc\">Enter new Credit Card</label>\n          </li>\n        {{/manual}}\n      </ul>\n    </template>\n  </amp-list>\n\n  <section class=\"sub-section\"\n    id=\"manualCC\"\n    hidden>\n    <label for=\"manualCCNameCC\">Name on card</label>\n    <input name=\"ccname\"\n      id=\"manualCCNameCC\"\n      placeholder=\"Full Name\"\n      autocomplete=\"cc-name\">\n\n    <label for=\"manualCCCCNum\">Card Number</label>\n    <input name=\"cardnumber\"\n      id=\"manualCCCCNum\"\n      autocomplete=\"cc-number\">\n\n    <label for=\"manualCCCVC\">CVC</label>\n    <input name=\"cvc\"\n      id=\"manualCCCVC\"\n      autocomplete=\"cc-csc\">\n\n    <label for=\"manualCCExp\">Expiry</label>\n    <input name=\"cc-exp\"\n      id=\"manualCCExp\"\n      placeholder=\"MM-YYYY\"\n      autocomplete=\"cc-exp\">\n    <label for=\"saveNewAddress2\">Save Credit Card</label>\n    <input id=\"saveNewAddress2\"\n      type=\"checkbox\"\n      checked\n      on=\"change:shippingAddress.toggleVisibility\">\n  </section>\n</section>\n","preview":"      <section class=\"checkout-section\"\n        amp-access=\"loggedIn\"\n        amp-access-hide>\n        <h3>Select Payment Details</h3>\n        <amp-list width=\"auto\"\n          height=\"96\"\n          layout=\"fixed-height\"\n          items=\".\"\n          single-item\n          credentials=\"include\"\n          src=\"/static/samples/json/credit-cards.json\"\n          binding=\"no\">\n          <template type=\"amp-mustache\">\n            <ul class=\"list-reset\">\n              {{#cards}}\n                <li>\n                  {{^default}}\n                    <input type=\"radio\"\n                      id=\"cc{{id}}\"\n                      name=\"cc\"\n                      value=\"{{id}}\"\n                      on=\"change:manualCC.hide\">\n                  {{/default}}\n                  {{#default}}\n                    <input type=\"radio\"\n                      checked\n                      id=\"defaultCC{{id}}\"\n                      name=\"cc\"\n                      value=\"{{id}}\"\n                      on=\"change:manualCC.hide\">\n                  {{/default}}\n                  <label for=\"defaultCC{{id}}\">{{title}} {{#default}}<strong>[DEFAULT]</strong>{{/default}}</label>\n              {{/cards}}\n              </li>\n              {{#manual}}\n                <li>\n                  <input type=\"radio\"\n                    id=\"new-cc\"\n                    name=\"cc\"\n                    value=\"{{id}}\"\n                    on=\"change:manualCC.toggleVisibility\">\n                  <label for=\"new-cc\">Enter new Credit Card</label>\n                </li>\n              {{/manual}}\n            </ul>\n          </template>\n        </amp-list>\n\n        <section class=\"sub-section\"\n          id=\"manualCC\"\n          hidden>\n          <label for=\"manualCCNameCC\">Name on card</label>\n          <input name=\"ccname\"\n            id=\"manualCCNameCC\"\n            placeholder=\"Full Name\"\n            autocomplete=\"cc-name\">\n\n          <label for=\"manualCCCCNum\">Card Number</label>\n          <input name=\"cardnumber\"\n            id=\"manualCCCCNum\"\n            autocomplete=\"cc-number\">\n\n          <label for=\"manualCCCVC\">CVC</label>\n          <input name=\"cvc\"\n            id=\"manualCCCVC\"\n            autocomplete=\"cc-csc\">\n\n          <label for=\"manualCCExp\">Expiry</label>\n          <input name=\"cc-exp\"\n            id=\"manualCCExp\"\n            placeholder=\"MM-YYYY\"\n            autocomplete=\"cc-exp\">\n          <label for=\"saveNewAddress2\">Save Credit Card</label>\n          <input id=\"saveNewAddress2\"\n            type=\"checkbox\"\n            checked\n            on=\"change:shippingAddress.toggleVisibility\">\n        </section>\n      </section>\n","inBody":true,"id":33,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Logged in users (`amp-access=\"loggedIn\"`) can select an existing credit card which is pulled in using `amp-list` similar to how the shipping addresses are rendered dynamically above. It's also possible to manually enter credit card details. \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":34,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"Not logged in users can enter their credit card details manually. Note that we're using the credit card auto-fill markup. \n","code":"<section class=\"checkout-section\"\n  amp-access=\"NOT loggedIn\"\n  amp-access-hide>\n  <h3>Enter Credit Card Details</h3>\n  <label for=\"nameCC\">Name on card</label>\n  <input name=\"ccname\"\n    id=\"nameCC\"\n    placeholder=\"Full Name\"\n    autocomplete=\"cc-name\">\n\n  <label for=\"ccNum\">Card Number</label>\n  <input name=\"cardnumber\"\n    id=\"ccNum\"\n    autocomplete=\"cc-number\">\n\n  <label for=\"ccCVC\">CVC</label>\n  <input name=\"cvc\"\n    id=\"ccCVC\"\n    autocomplete=\"cc-csc\">\n\n  <label for=\"ccExp\">Expiry</label>\n  <input name=\"cc-exp\"\n    id=\"ccExp\"\n    placeholder=\"MM-YYYY\"\n    autocomplete=\"cc-exp\">\n</section>\n","preview":"      <section class=\"checkout-section\"\n        amp-access=\"NOT loggedIn\"\n        amp-access-hide>\n        <h3>Enter Credit Card Details</h3>\n        <label for=\"nameCC\">Name on card</label>\n        <input name=\"ccname\"\n          id=\"nameCC\"\n          placeholder=\"Full Name\"\n          autocomplete=\"cc-name\">\n\n        <label for=\"ccNum\">Card Number</label>\n        <input name=\"cardnumber\"\n          id=\"ccNum\"\n          autocomplete=\"cc-number\">\n\n        <label for=\"ccCVC\">CVC</label>\n        <input name=\"cvc\"\n          id=\"ccCVC\"\n          autocomplete=\"cc-csc\">\n\n        <label for=\"ccExp\">Expiry</label>\n        <input name=\"cc-exp\"\n          id=\"ccExp\"\n          placeholder=\"MM-YYYY\"\n          autocomplete=\"cc-exp\">\n      </section>\n","inBody":true,"id":35,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Not logged in users can enter their credit card details manually. Note that we're using the credit card auto-fill markup. \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":36,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Form Submission\n","code":"","preview":"","inBody":true,"id":37,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"form-submission","name":"Form Submission"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Form Submission\n"},{"doc_":"The pay now button simply submits the form containting the different checkout form sections. \n","code":"<div [hidden]=\"checkoutSuccess\">\n  <input type=\"submit\"\n    value=\"Pay Now\">\n  <span>Not for real ...</span>\n</div>\n","preview":"      <div [hidden]=\"checkoutSuccess\">\n        <input type=\"submit\"\n          value=\"Pay Now\">\n        <span>Not for real ...</span>\n      </div>\n","inBody":true,"id":38,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":6,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"The pay now button simply submits the form containting the different checkout form sections. \n"},{"doc_":"","code":"</form>\n\n","preview":"    </form>\n\n","inBody":true,"id":39,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"This is the message that we will show after a successful checkout and the `checkoutSuccess` variable is set to `true`. \n","code":"<section hidden\n  [hidden]=\"checkoutSuccess\"\n  class=\"checkout-section\">\n  <h3>Checkout success!</h3>\n</section>\n","preview":"    <section hidden\n      [hidden]=\"checkoutSuccess\"\n      class=\"checkout-section\">\n      <h3>Checkout success!</h3>\n    </section>\n","inBody":true,"id":40,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"This is the message that we will show after a successful checkout and the `checkoutSuccess` variable is set to `true`. \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":41,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\nNote: This sample does not include any form validation. However, this can be easily added using AMP's support for [custom form validation](https://amp.dev/documentation/examples/components/amp-form/#form-custom-validation).\n\n","code":"","preview":"","inBody":true,"id":42,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nNote: This sample does not include any form validation. However, this can be easily added using AMP's support for [custom form validation](https://amp.dev/documentation/examples/components/amp-form/#form-custom-validation).\n\n"},{"doc_":"\n","code":"</div>\n","preview":"  </div>\n","inBody":true,"id":43,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"     \n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":44,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n      <title>Checkout Flow</title>\n      <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/e-commerce/checkout_flow/index.html\">\n      <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n      <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n      <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n      <script async custom-element=\"amp-access\" src=\"https://cdn.ampproject.org/v0/amp-access-0.1.js\"></script>\n      <script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n      <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n      <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n      <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n      <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n\n          <script id=\"amp-access\" type=\"application/json\">\n            {\n                \"authorization\": \"/documentation/examples/api/amp-access/authorization?rid=READER_ID&url=CANONICAL_URL&ref=DOCUMENT_REFERRER&_=RANDOM\",\n                \"noPingback\": \"true\",\n                \"login\": {\n                  \"sign-in\": \"/documentation/examples/api/amp-access/login?rid=READER_ID\",\n                  \"sign-out\": \"/documentation/examples/api/amp-access/logout?rid=READER_ID\"\n                },\n                \"authorizationFallbackResponse\": {\n                    \"error\": true,\n                    \"loggedIn\": false\n                }\n            }\n          </script>\n","styles":"            :root {\n              --color-primary: #005AF0;\n              --color-secondary: #00DCC0;\n              --color-text-light: #fff;\n              --color-text-dark: #000;\n              --color-error: #B00020;\n              --color-bg-light: #FAFAFC;\n\n              --space-1: .5rem;  /* 8px */\n              --space-2: 1rem;   /* 16px */\n              --space-3: 1.5rem; /* 24px */\n              --space-4: 2rem;   /* 32px */\n\n              --box-shadow-1: 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 1px -1px rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);\n            }\n            .checkout-flow-sample {\n              width: 100vw;\n              max-width: 700px;\n              padding: var(--space-2);\n              box-sizing: border-box;\n            }\n            .checkout-flow-sample > * + *,\n            #checkout-form > * + * {\n              margin-top: var(--space-2);\n            }\n            .checkout-section {\n              min-width: 300px;\n              background: #fff;\n              box-shadow: var(--box-shadow-1);\n              padding: 0 var(--space-2);\n            }\n            .sub-section > *,\n            .checkout-section > * {\n              display: block;\n              width: calc(50% - var(--space-2));\n              padding: 0;\n              margin: var(--space-2) 0;\n              align-self: center;\n            }\n            .sub-section,\n            .checkout-section {\n              display: flex;\n              flex-wrap: wrap;\n              background: var(--color-bg-light);\n            }\n            .checkout-section input {\n              padding: var(--space-1)\n            }\n            .sub-section,\n            .checkout-section > amp-list,\n            .checkout-section > form,\n            .checkout-section > div,\n            .checkout-section > h3 {\n              width: 100%;\n            }\n            .checkout-section > h3 {\n              font-size: 18px;\n              font-weight: 500;\n              text-transform: uppercase;\n              padding: 0;\n              margin: var(--space-2) 0;\n            }\n            .shopping-cart .item:first-child {\n              margin-bottom: var(--space-1);\n            }\n            .shopping-cart .item:last-child {\n              margin-top: var(--space-1);\n            }\n            .shopping-cart .item {\n              display: flex;\n              justify-content: space-between;\n            }\n            .shopping-cart .name {\n              width: 60%;\n            }\n            .shopping-cart .price,\n            .shopping-cart .quantity {\n              display: block;\n              text-align: right;\n              min-width: 72px;\n              margin-left: var(--space-1);\n            }\n            .shopping-cart .summary .price,\n            .shopping-cart .summary .quantity {\n              margin: var(--space-1) 0 0 var(--space-1);\n            }\n            .list-reset {\n              list-style: none;\n              padding-left: 0;\n            }\n","title":"Checkout Flow","metadata":{"preview":"default","teaserImage":"/static/samples/img/teaser/checkout_flow.jpg","author":"sebastianbenz"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This sample demonstrates how you can implement a simple checkout page in AMP."},"route":"/documentation/examples/e-commerce/checkout_flow/index.html"}