{"filePath":"examples/source/interactivity-dynamic-content/Star_Rating/index.html","source":"<!--\n  ## Introduction\n\n  This star rating widget is implemented using only CSS, given AMP's restriction on custom JavaScript. It still has the key features of star rating components:\n\n   * touch, mouse and keyboard accessibility\n   * stars change color when the user mouses over them\n   * once a selection is made, it \"sticks\"\n   * clean scalable vector icons\n   * screen reader friendly\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <link rel=\"canonical\" href=\"http://localhost:8080/advanced/star_rating.html\">\n  <title>Star Rating</title>\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n  <!-- ## Setup -->\n  <!--\n    Import the `amp-form` component.\n  -->\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <!-- We also need the `amp-mustache` component. -->\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n\n  <!--\n    ## CSS for the star rating\n  -->\n  <!--\n    This star rating implementation overlays \"☆\" Unicode characters precisely over radio buttons. Inline comments below describe the rules in detail.\n  -->\n  <style amp-custom>\n    .rating {\n      --star-size: 3;  /* use CSS variables to calculate dependent dimensions later */\n      padding: 0;  /* to prevent flicker when mousing over padding */\n      border: none;  /* to prevent flicker when mousing over border */\n      unicode-bidi: bidi-override; direction: rtl;  /* for CSS-only style change on hover */\n      text-align: left;  /* revert the RTL direction */\n      user-select: none;  /* disable mouse/touch selection */\n      font-size: 3em;  /* fallback - IE doesn't support CSS variables */\n      font-size: calc(var(--star-size) * 1em);  /* because `var(--star-size)em` would be too good to be true */\n      cursor: pointer;\n      /* disable touch feedback on cursor: pointer - http://stackoverflow.com/q/25704650/1269037 */\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\n      -webkit-tap-highlight-color: transparent;\n      margin-bottom: 1em;\n    }\n    /* the stars */\n    .rating > label {\n      display: inline-block;\n      position: relative;\n      width: 1.1em;  /* magic number to overlap the radio buttons on top of the stars */\n      width: calc(var(--star-size) / 3 * 1.1em);\n    }\n    .rating > *:hover,\n    .rating > *:hover ~ label,\n    .rating:not(:hover) > input:checked ~ label {\n      color: transparent;  /* reveal the contour/white star from the HTML markup */\n      cursor: inherit;  /* avoid a cursor transition from arrow/pointer to text selection */\n    }\n    .rating > *:hover:before,\n    .rating > *:hover ~ label:before,\n    .rating:not(:hover) > input:checked ~ label:before {\n      content: \"★\";\n      position: absolute;\n      left: 0;\n      color: gold;\n    }\n    .rating > input {\n      position: relative;\n      transform: scale(3);  /* make the radio buttons big; they don't inherit font-size */\n      transform: scale(var(--star-size));\n      /* the magic numbers below correlate with the font-size */\n      top: -0.5em;  /* margin-top doesn't work */\n      top: calc(var(--star-size) / 6 * -1em);\n      margin-left: -2.5em;  /* overlap the radio buttons exactly under the stars */\n      margin-left: calc(var(--star-size) / 6 * -5em);\n      z-index: 2;  /* bring the button above the stars so it captures touches/clicks */\n      opacity: 0;  /* comment to see where the radio buttons are */\n      font-size: initial; /* reset to default */\n    }\n    form.amp-form-submit-error [submit-error] {\n      color: red;\n    }\n  </style>\n</head>\n\n<body>\n\n  <!-- ## Usage -->\n  <!--\n    While this star rating widget is accessible via the keyboard, that doesn't happen without quirks:\n\n    * Click/tap the widget, then press up/down/left/right arrows. Unfortunately, in Firefox and Safari, keyboard arrows work backwards. This issue appears to be <a href=\"https://github.com/LunarLogic/starability/issues/15\">impossible to fix</a> on non-Chrome-based browsers without using JavaScript, so stay tuned for the amp-rating component.\n    * Mouse over the stars to see the style change.\n  -->\n  <!-- -->\n  <div>\n    <p>Things to try on a computer with a keyboard and/or pointing device:</p>\n    <ul>\n      <li>\n        Click/tap the widget, then press up/down/left/right arrows.\n        Unfortunately, in Firefox and Safari, keyboard arrows work backwards.\n        This issue appears to be <a href=\"https://github.com/LunarLogic/starability/issues/15\">impossible to fix</a>\n        on non-Chrome-based browsers without using JavaScript, so stay tuned for the amp-rating component.\n      </li>\n      <li>\n        Mouse over the stars to see the style change.\n      </li>\n    </ul>\n  </div>\n\n  <!--\n  We'll use a set of radio buttons to take user input for the star ratings, because they are keyboard-accessible.\n  For desktop, it's nice to change the style of the previous stars when the user hovers their mouse over them. The [only](https://github.com/dandv/comparisons/blob/master/star-rating-widgets.md) pure-CSS way to affect the style of previous elements onmouseover is to list them in reverse DOM order, which is why the `<input>` elements below run from 5 to 1.\n\n  We want the form to submit as soon as the user makes a selection, without a Submit button. To do that, we'll set the [`on` attribute](https://github.com/ampproject/amphtml/blob/master/spec/amp-html-format.md#on) of the `input`s to submit the form on [`change`](/amp-dev/documentation/components/reference/amp-form.md#input-events).\n\n  The initial rating is determined by which radio button has the `checked` attribute set. This is optional. -->\n  <form id=\"rating\" method=\"post\" action-xhr=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/star_rating/set\" target=\"_blank\">\n    <fieldset class=\"rating\">\n      <input name=\"rating\" type=\"radio\" id=\"rating5\" value=\"5\" on=\"change:rating.submit\">\n      <label for=\"rating5\" title=\"5 stars\">☆</label>\n\n      <input name=\"rating\" type=\"radio\" id=\"rating4\" value=\"4\" on=\"change:rating.submit\">\n      <label for=\"rating4\" title=\"4 stars\">☆</label>\n\n      <input name=\"rating\" type=\"radio\" id=\"rating3\" value=\"3\" on=\"change:rating.submit\">\n      <label for=\"rating3\" title=\"3 stars\">☆</label>\n\n      <input name=\"rating\" type=\"radio\" id=\"rating2\" value=\"2\" on=\"change:rating.submit\" checked=\"checked\">\n      <label for=\"rating2\" title=\"2 stars\">☆</label>\n\n      <input name=\"rating\" type=\"radio\" id=\"rating1\" value=\"1\" on=\"change:rating.submit\">\n      <label for=\"rating1\" title=\"1 stars\">☆</label>\n    </fieldset>\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        <p>Thanks for rating {{rating}} star(s)!</p>\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Looks like something went wrong. Please try to rate again. {{error}}\n      </template>\n    </div>\n  </form>\n</body></html>","document":{"sections":[{"doc_":"\n## Introduction\n\nThis star rating widget is implemented using only CSS, given AMP's restriction on custom JavaScript. It still has the key features of star rating components:\n\n* touch, mouse and keyboard accessibility\n\n* stars change color when the user mouses over them\n\n* once a selection is made, it \"sticks\"\n\n* clean scalable vector icons\n\n* screen reader friendly\n\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2><p class=\"mb2 px1\">This star rating widget is implemented using only CSS, given AMP&#39;s restriction on custom JavaScript. It still has the key features of star rating components:</p><ul>\n<li>touch, mouse and keyboard accessibility</li>\n<li>stars change color when the user mouses over them</li>\n<li>once a selection is made, it &quot;sticks&quot;</li>\n<li>clean scalable vector icons</li>\n<li>screen reader friendly</li>\n</ul>\n","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Introduction\n\nThis star rating widget is implemented using only CSS, given AMP's restriction on custom JavaScript. It still has the key features of star rating components:\n\n * touch, mouse and keyboard accessibility\n * stars change color when the user mouses over them\n * once a selection is made, it \"sticks\"\n * clean scalable vector icons\n * screen reader friendly\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <link rel=\"canonical\" href=\"http://localhost:8080/advanced/star_rating.html\">\n  <title>Star Rating</title>\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n","preview":"","inBody":false,"id":1,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"\nImport the `amp-form` component.\n\n","code":"<script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nImport the `amp-form` component.\n\n"},{"doc_":"We also need the `amp-mustache` component. \n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"We also need the `amp-mustache` component. \n"},{"doc_":"","code":"\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n## CSS for the star rating\n\n","code":"","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"css-for-the-star-rating","name":"CSS for the star rating"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## CSS for the star rating\n\n"},{"doc_":"\nThis star rating implementation overlays \"☆\" Unicode characters precisely over radio buttons. Inline comments below describe the rules in detail.\n\n","code":"<style amp-custom>\n  .rating {\n    --star-size: 3;  /* use CSS variables to calculate dependent dimensions later */\n    padding: 0;  /* to prevent flicker when mousing over padding */\n    border: none;  /* to prevent flicker when mousing over border */\n    unicode-bidi: bidi-override; direction: rtl;  /* for CSS-only style change on hover */\n    text-align: left;  /* revert the RTL direction */\n    user-select: none;  /* disable mouse/touch selection */\n    font-size: 3em;  /* fallback - IE doesn't support CSS variables */\n    font-size: calc(var(--star-size) * 1em);  /* because `var(--star-size)em` would be too good to be true */\n    cursor: pointer;\n    /* disable touch feedback on cursor: pointer - http://stackoverflow.com/q/25704650/1269037 */\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n    -webkit-tap-highlight-color: transparent;\n    margin-bottom: 1em;\n  }\n  /* the stars */\n  .rating > label {\n    display: inline-block;\n    position: relative;\n    width: 1.1em;  /* magic number to overlap the radio buttons on top of the stars */\n    width: calc(var(--star-size) / 3 * 1.1em);\n  }\n  .rating > *:hover,\n  .rating > *:hover ~ label,\n  .rating:not(:hover) > input:checked ~ label {\n    color: transparent;  /* reveal the contour/white star from the HTML markup */\n    cursor: inherit;  /* avoid a cursor transition from arrow/pointer to text selection */\n  }\n  .rating > *:hover:before,\n  .rating > *:hover ~ label:before,\n  .rating:not(:hover) > input:checked ~ label:before {\n    content: \"★\";\n    position: absolute;\n    left: 0;\n    color: gold;\n  }\n  .rating > input {\n    position: relative;\n    transform: scale(3);  /* make the radio buttons big; they don't inherit font-size */\n    transform: scale(var(--star-size));\n    /* the magic numbers below correlate with the font-size */\n    top: -0.5em;  /* margin-top doesn't work */\n    top: calc(var(--star-size) / 6 * -1em);\n    margin-left: -2.5em;  /* overlap the radio buttons exactly under the stars */\n    margin-left: calc(var(--star-size) / 6 * -5em);\n    z-index: 2;  /* bring the button above the stars so it captures touches/clicks */\n    opacity: 0;  /* comment to see where the radio buttons are */\n    font-size: initial; /* reset to default */\n  }\n  form.amp-form-submit-error [submit-error] {\n    color: red;\n  }\n</style>\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThis star rating implementation overlays \"☆\" Unicode characters precisely over radio buttons. Inline comments below describe the rules in detail.\n\n"},{"doc_":"","code":"</head>\n\n<body>\n\n","preview":"\n","inBody":false,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Usage\n","code":"","preview":"","inBody":true,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"usage","name":"Usage"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Usage\n"},{"doc_":"\nWhile this star rating widget is accessible via the keyboard, that doesn't happen without quirks:\n\n* Click/tap the widget, then press up/down/left/right arrows. Unfortunately, in Firefox and Safari, keyboard arrows work backwards. This issue appears to be <a href=\"https://github.com/LunarLogic/starability/issues/15\">impossible to fix</a> on non-Chrome-based browsers without using JavaScript, so stay tuned for the amp-rating component.\n* Mouse over the stars to see the style change.\n\n","code":"","preview":"","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWhile this star rating widget is accessible via the keyboard, that doesn't happen without quirks:\n\n* Click/tap the widget, then press up/down/left/right arrows. Unfortunately, in Firefox and Safari, keyboard arrows work backwards. This issue appears to be <a href=\"https://github.com/LunarLogic/starability/issues/15\">impossible to fix</a> on non-Chrome-based browsers without using JavaScript, so stay tuned for the amp-rating component.\n* Mouse over the stars to see the style change.\n\n"},{"doc_":"\n","code":"<p>Things to try on a computer with a keyboard and/or pointing device:</p>\n<ul>\n  <li>\n    Click/tap the widget, then press up/down/left/right arrows.\n    Unfortunately, in Firefox and Safari, keyboard arrows work backwards.\n    This issue appears to be <a href=\"https://github.com/LunarLogic/starability/issues/15\">impossible to fix</a>\n    on non-Chrome-based browsers without using JavaScript, so stay tuned for the amp-rating component.\n  </li>\n  <li>\n    Mouse over the stars to see the style change.\n  </li>\n</ul>","preview":"  <div>\n    <p>Things to try on a computer with a keyboard and/or pointing device:</p>\n    <ul>\n      <li>\n        Click/tap the widget, then press up/down/left/right arrows.\n        Unfortunately, in Firefox and Safari, keyboard arrows work backwards.\n        This issue appears to be <a href=\"https://github.com/LunarLogic/starability/issues/15\">impossible to fix</a>\n        on non-Chrome-based browsers without using JavaScript, so stay tuned for the amp-rating component.\n      </li>\n      <li>\n        Mouse over the stars to see the style change.\n      </li>\n    </ul>\n  </div>\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"   \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\nWe'll use a set of radio buttons to take user input for the star ratings, because they are keyboard-accessible.\nFor desktop, it's nice to change the style of the previous stars when the user hovers their mouse over them. The [only](https://github.com/dandv/comparisons/blob/master/star-rating-widgets.md) pure-CSS way to affect the style of previous elements onmouseover is to list them in reverse DOM order, which is why the `<input>` elements below run from 5 to 1.\n\nWe want the form to submit as soon as the user makes a selection, without a Submit button. To do that, we'll set the [`on` attribute](https://github.com/ampproject/amphtml/blob/master/spec/amp-html-format.md#on) of the `input`s to submit the form on [`change`](/amp-dev/documentation/components/reference/amp-form.md#input-events).\n\nThe initial rating is determined by which radio button has the `checked` attribute set. This is optional. \n","code":"<form id=\"rating\"\n  method=\"post\"\n  action-xhr=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/star_rating/set\"\n  target=\"_blank\">\n  <fieldset class=\"rating\">\n    <input name=\"rating\"\n      type=\"radio\"\n      id=\"rating5\"\n      value=\"5\"\n      on=\"change:rating.submit\">\n    <label for=\"rating5\"\n      title=\"5 stars\">☆</label>\n\n    <input name=\"rating\"\n      type=\"radio\"\n      id=\"rating4\"\n      value=\"4\"\n      on=\"change:rating.submit\">\n    <label for=\"rating4\"\n      title=\"4 stars\">☆</label>\n\n    <input name=\"rating\"\n      type=\"radio\"\n      id=\"rating3\"\n      value=\"3\"\n      on=\"change:rating.submit\">\n    <label for=\"rating3\"\n      title=\"3 stars\">☆</label>\n\n    <input name=\"rating\"\n      type=\"radio\"\n      id=\"rating2\"\n      value=\"2\"\n      on=\"change:rating.submit\"\n      checked=\"checked\">\n    <label for=\"rating2\"\n      title=\"2 stars\">☆</label>\n\n    <input name=\"rating\"\n      type=\"radio\"\n      id=\"rating1\"\n      value=\"1\"\n      on=\"change:rating.submit\">\n    <label for=\"rating1\"\n      title=\"1 stars\">☆</label>\n  </fieldset>\n  <div submit-success>\n    <template type=\"amp-mustache\">\n      <p>Thanks for rating {{rating}} star(s)!</p>\n    </template>\n  </div>\n  <div submit-error>\n    <template type=\"amp-mustache\">\n      Looks like something went wrong. Please try to rate again. {{error}}\n    </template>\n  </div>\n</form>\n","preview":"  <form id=\"rating\"\n    method=\"post\"\n    action-xhr=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/star_rating/set\"\n    target=\"_blank\">\n    <fieldset class=\"rating\">\n      <input name=\"rating\"\n        type=\"radio\"\n        id=\"rating5\"\n        value=\"5\"\n        on=\"change:rating.submit\">\n      <label for=\"rating5\"\n        title=\"5 stars\">☆</label>\n\n      <input name=\"rating\"\n        type=\"radio\"\n        id=\"rating4\"\n        value=\"4\"\n        on=\"change:rating.submit\">\n      <label for=\"rating4\"\n        title=\"4 stars\">☆</label>\n\n      <input name=\"rating\"\n        type=\"radio\"\n        id=\"rating3\"\n        value=\"3\"\n        on=\"change:rating.submit\">\n      <label for=\"rating3\"\n        title=\"3 stars\">☆</label>\n\n      <input name=\"rating\"\n        type=\"radio\"\n        id=\"rating2\"\n        value=\"2\"\n        on=\"change:rating.submit\"\n        checked=\"checked\">\n      <label for=\"rating2\"\n        title=\"2 stars\">☆</label>\n\n      <input name=\"rating\"\n        type=\"radio\"\n        id=\"rating1\"\n        value=\"1\"\n        on=\"change:rating.submit\">\n      <label for=\"rating1\"\n        title=\"1 stars\">☆</label>\n    </fieldset>\n    <div submit-success>\n      <template type=\"amp-mustache\">\n        <p>Thanks for rating {{rating}} star(s)!</p>\n      </template>\n    </div>\n    <div submit-error>\n      <template type=\"amp-mustache\">\n        Looks like something went wrong. Please try to rate again. {{error}}\n      </template>\n    </div>\n  </form>\n","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWe'll use a set of radio buttons to take user input for the star ratings, because they are keyboard-accessible.\nFor desktop, it's nice to change the style of the previous stars when the user hovers their mouse over them. The [only](https://github.com/dandv/comparisons/blob/master/star-rating-widgets.md) pure-CSS way to affect the style of previous elements onmouseover is to list them in reverse DOM order, which is why the `<input>` elements below run from 5 to 1.\n\nWe want the form to submit as soon as the user makes a selection, without a Submit button. To do that, we'll set the [`on` attribute](https://github.com/ampproject/amphtml/blob/master/spec/amp-html-format.md#on) of the `input`s to submit the form on [`change`](/amp-dev/documentation/components/reference/amp-form.md#input-events).\n\nThe initial rating is determined by which radio button has the `checked` attribute set. This is optional. \n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":14,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <link rel=\"canonical\" href=\"http://localhost:8080/advanced/star_rating.html\">\n  <title>Star Rating</title>\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n  <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n\n","styles":"    .rating {\n      --star-size: 3;  /* use CSS variables to calculate dependent dimensions later */\n      padding: 0;  /* to prevent flicker when mousing over padding */\n      border: none;  /* to prevent flicker when mousing over border */\n      unicode-bidi: bidi-override; direction: rtl;  /* for CSS-only style change on hover */\n      text-align: left;  /* revert the RTL direction */\n      user-select: none;  /* disable mouse/touch selection */\n      font-size: 3em;  /* fallback - IE doesn't support CSS variables */\n      font-size: calc(var(--star-size) * 1em);  /* because `var(--star-size)em` would be too good to be true */\n      cursor: pointer;\n      /* disable touch feedback on cursor: pointer - http://stackoverflow.com/q/25704650/1269037 */\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\n      -webkit-tap-highlight-color: transparent;\n      margin-bottom: 1em;\n    }\n    /* the stars */\n    .rating > label {\n      display: inline-block;\n      position: relative;\n      width: 1.1em;  /* magic number to overlap the radio buttons on top of the stars */\n      width: calc(var(--star-size) / 3 * 1.1em);\n    }\n    .rating > *:hover,\n    .rating > *:hover ~ label,\n    .rating:not(:hover) > input:checked ~ label {\n      color: transparent;  /* reveal the contour/white star from the HTML markup */\n      cursor: inherit;  /* avoid a cursor transition from arrow/pointer to text selection */\n    }\n    .rating > *:hover:before,\n    .rating > *:hover ~ label:before,\n    .rating:not(:hover) > input:checked ~ label:before {\n      content: \"★\";\n      position: absolute;\n      left: 0;\n      color: gold;\n    }\n    .rating > input {\n      position: relative;\n      transform: scale(3);  /* make the radio buttons big; they don't inherit font-size */\n      transform: scale(var(--star-size));\n      /* the magic numbers below correlate with the font-size */\n      top: -0.5em;  /* margin-top doesn't work */\n      top: calc(var(--star-size) / 6 * -1em);\n      margin-left: -2.5em;  /* overlap the radio buttons exactly under the stars */\n      margin-left: calc(var(--star-size) / 6 * -5em);\n      z-index: 2;  /* bring the button above the stars so it captures touches/clicks */\n      opacity: 0;  /* comment to see where the radio buttons are */\n      font-size: initial; /* reset to default */\n    }\n    form.amp-form-submit-error [submit-error] {\n      color: red;\n    }\n","title":"Star Rating","metadata":{"preview":"default","teaserImage":"/static/samples/img/teaser/star_rating.jpg","author":"sebastianbenz"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This star rating widget is implemented using only CSS, given AMP's restriction on custom JavaScript."},"route":"/documentation/examples/interactivity-dynamic-content/star_rating/index.html"}