{"filePath":"examples/source/interactivity-dynamic-content/Client-side_filtering.html","source":"<!-- ## Introduction --><!--\nThis is a sample showing how to implement client-side filtering.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <!-- ## Setup -->\n  <!--\n    Additionally used AMP components must be imported in the header. We use `amp-bind` to store products locally into a variable.\n  -->\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <!--\n    We use `amp-list` to retrieve static data.\n  -->\n  <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n  <!--\n    We use `amp-mustache` to render data.\n  -->\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/client-side_filtering/index.html\">\n  <title>Client-side filtering</title>\n\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n</head>\n<body>\n  <!--\n    ## Client-side Filter\n\n    It is possible to implement client-side filtering by using `amp-list`, `amp-state` and `amp-bind`.\n\n    The `amp-state` is initially setup with data from an endpoint which returns a list of available products; the user can choose between different colors and that selection sets the variable `filteredProducts` to the result of a filter expression. The filter expression is an `amp-bind` expression which uses the `Array.filter` function.\n\n    The `filteredProducts` variable is then used as `src` of `amp-list`. `amp-list` does not resize automatically, but it is possible to calculate its height in the filtered state by using `amp-bind`: here we are binding the `[height]` to the length of the `filteredProducts` array times the height of a single element.\n\n    The alternative to this approach is using server-side filtering which we explain in the [product sample](https://amp.dev/documentation/examples/e-commerce/product_browse_page/).\n  -->\n  <div>\n    <amp-state id=\"allProducts\" src=\"/static/samples/json/related_products.json\"></amp-state>\n    <select on=\"change:AMP.setState({\n        filteredProducts: allProducts.items.filter(a => event.value == 'all' ? true : a.color == event.value)\n      })\">\n      <option value=\"all\" selected>All</option>\n      <option value=\"red\">red</option>\n      <option value=\"green\">green</option>\n      <option value=\"yellow\">yellow</option>\n      <option value=\"orange\">orange</option>\n    </select>\n    <amp-list height=\"282\" [height]=\"(40 + 24) * filteredProducts.length\" layout=\"fixed-height\" src=\"/static/samples/json/related_products.json\" [src]=\"filteredProducts\" binding=\"no\">\n      <template type=\"amp-mustache\">\n        <amp-img src=\"{{img}}\" layout=\"fixed\" width=\"60\" height=\"40\" alt=\"{{name}}\"></amp-img>\n        {{name}}\n      </template>\n    </amp-list>\n  </div>\n</body></html>","document":{"sections":[{"doc_":"## Introduction\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Introduction\n"},{"doc_":"\nThis is a sample showing how to implement client-side filtering.\n\n","code":"","preview":"","inBody":false,"id":1,"cachedMarkedDoc":"<p class=\"mb2 px1\">This is a sample showing how to implement client-side filtering.</p>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThis is a sample showing how to implement client-side filtering.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"\nAdditionally used AMP components must be imported in the header. We use `amp-bind` to store products locally into a variable.\n\n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nAdditionally used AMP components must be imported in the header. We use `amp-bind` to store products locally into a variable.\n\n"},{"doc_":"\nWe use `amp-list` to retrieve static data.\n\n","code":"<script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWe use `amp-list` to retrieve static data.\n\n"},{"doc_":"\nWe use `amp-mustache` to render data.\n\n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nWe use `amp-mustache` to render data.\n\n"},{"doc_":"","code":"\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/client-side_filtering/index.html\">\n  <title>Client-side filtering</title>\n\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n</head>\n<body>\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"\n## Client-side Filter\n\nIt is possible to implement client-side filtering by using `amp-list`, `amp-state` and `amp-bind`.\n\nThe `amp-state` is initially setup with data from an endpoint which returns a list of available products; the user can choose between different colors and that selection sets the variable `filteredProducts` to the result of a filter expression. The filter expression is an `amp-bind` expression which uses the `Array.filter` function.\n\nThe `filteredProducts` variable is then used as `src` of `amp-list`. `amp-list` does not resize automatically, but it is possible to calculate its height in the filtered state by using `amp-bind`: here we are binding the `[height]` to the length of the `filteredProducts` array times the height of a single element.\n\nThe alternative to this approach is using server-side filtering which we explain in the [product sample](https://amp.dev/documentation/examples/e-commerce/product_browse_page/).\n\n","code":"<amp-state id=\"allProducts\"\n  src=\"/static/samples/json/related_products.json\"></amp-state>\n<select on=\"change:AMP.setState({\n    filteredProducts: allProducts.items.filter(a => event.value == 'all' ? true : a.color == event.value)\n  })\">\n  <option value=\"all\"\n    selected>All</option>\n  <option value=\"red\">red</option>\n  <option value=\"green\">green</option>\n  <option value=\"yellow\">yellow</option>\n  <option value=\"orange\">orange</option>\n</select>\n<amp-list height=\"282\"\n  [height]=\"(40 + 24) * filteredProducts.length\"\n  layout=\"fixed-height\"\n  src=\"/static/samples/json/related_products.json\"\n  [src]=\"filteredProducts\"\n  binding=\"no\">\n  <template type=\"amp-mustache\">\n    <amp-img src=\"{{img}}\"\n      layout=\"fixed\"\n      width=\"60\"\n      height=\"40\"\n      alt=\"{{name}}\"></amp-img>\n    {{name}}\n  </template>\n</amp-list>","preview":"  <div>\n    <amp-state id=\"allProducts\"\n      src=\"/static/samples/json/related_products.json\"></amp-state>\n    <select on=\"change:AMP.setState({\n        filteredProducts: allProducts.items.filter(a => event.value == 'all' ? true : a.color == event.value)\n      })\">\n      <option value=\"all\"\n        selected>All</option>\n      <option value=\"red\">red</option>\n      <option value=\"green\">green</option>\n      <option value=\"yellow\">yellow</option>\n      <option value=\"orange\">orange</option>\n    </select>\n    <amp-list height=\"282\"\n      [height]=\"(40 + 24) * filteredProducts.length\"\n      layout=\"fixed-height\"\n      src=\"/static/samples/json/related_products.json\"\n      [src]=\"filteredProducts\"\n      binding=\"no\">\n      <template type=\"amp-mustache\">\n        <amp-img src=\"{{img}}\"\n          layout=\"fixed\"\n          width=\"60\"\n          height=\"40\"\n          alt=\"{{name}}\"></amp-img>\n        {{name}}\n      </template>\n    </amp-list>\n  </div>\n","inBody":true,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[{"id":"client-side-filter","name":"Client-side Filter"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\n## Client-side Filter\n\nIt is possible to implement client-side filtering by using `amp-list`, `amp-state` and `amp-bind`.\n\nThe `amp-state` is initially setup with data from an endpoint which returns a list of available products; the user can choose between different colors and that selection sets the variable `filteredProducts` to the result of a filter expression. The filter expression is an `amp-bind` expression which uses the `Array.filter` function.\n\nThe `filteredProducts` variable is then used as `src` of `amp-list`. `amp-list` does not resize automatically, but it is possible to calculate its height in the filtered state by using `amp-bind`: here we are binding the `[height]` to the length of the `filteredProducts` array times the height of a single element.\n\nThe alternative to this approach is using server-side filtering which we explain in the [product sample](https://amp.dev/documentation/examples/e-commerce/product_browse_page/).\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":9,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n  <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\n  <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n  <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n  <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n\n  <link rel=\"canonical\" href=\"http://localhost:8080/documentation/examples/interactivity-dynamic-content/client-side_filtering/index.html\">\n  <title>Client-side filtering</title>\n\n  <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n\n  <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n\n","styles":"","title":"Client-side filtering","metadata":{"teaserImage":"/static/samples/img/teaser/client-side_filtering.jpg","author":"sebastianbenz"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This is a sample showing how to implement client-side filtering."},"route":"/documentation/examples/interactivity-dynamic-content/client-side_filtering/index.html"}