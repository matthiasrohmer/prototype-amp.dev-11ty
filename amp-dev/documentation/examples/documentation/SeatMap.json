{"filePath":"examples/source/interactivity-dynamic-content/SeatMap/index.html","source":"<!-- ## Introduction --><!--\nThis is a sample showing how to implement a seatmap that can be used for theaters, cinemas, airplanes and more.\nWe are showing how to pan & zoom on the seatmap to better select seats, how to keep the availability up to date and\nhow to dynamically select and unselect seats.\n--><!-- -->\n<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n    <title>SeatMap</title>\n    <link rel=\"canonical\" href=\"http://localhost:8080/advanced/seatmap.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <!-- ## Setup -->\n    <!-- Additionally used AMP components must be imported in the header:\n    `amp-pan-zoom` for making the seatmap zoomable and scrollable -->\n    <script async custom-element=\"amp-pan-zoom\" src=\"https://cdn.ampproject.org/v0/amp-pan-zoom-0.1.js\"></script>\n    <!-- `amp-bind` for enabling seat selection -->\n    <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n    <!-- `amp-list` for showing a list of seats -->\n    <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n    <!-- `amp-mustache` for rendering the `amp-list` content -->\n    <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n    <!-- `amp-selector` for selecting seats on the seatmap -->\n    <script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n    <style amp-custom>\n      :root {\n        --color-primary: #005AF0;\n        --color-secondary: #00DCC0;\n        --space-3: 1.5rem; /* 24px */\n        --space-4: 2rem;   /* 32px */\n      }\n      .seatmap-container {\n        position: relative;\n        height: 50vh;\n        min-width: 100%;\n        box-sizing: border-box;\n      }\n      .seatmap-container [placeholder] svg {\n        height: 100%;\n      }\n      .seatmap-container .disabled {\n        pointer-events: none;\n        cursor: default;\n        opacity: 0.5;\n        filter: alpha(opacity=50);\n      }\n      .seatmap-container .seat {\n        stroke-width: 3;\n        stroke: rgb(0,0,0);\n        fill:white;\n      }\n      .seatmap-container .unavailable {\n        fill: var(--color-secondary);\n        pointer-events: none;\n      }\n      /* `amp-pan-zoom` has a default display: flex to center positioning the child.\n      In this sample we are going to use a seatmap placeholder and for correctly positioning it, we are overwriting the\n      `amp-pan-zoom` display to `initial` */\n      .seatmap {\n        align-items: flex-start;\n      }\n      .seatmap svg {\n        box-sizing: border-box;\n        padding-top: var(--space-4);\n      }\n      .seatmap svg rect[selected].seat {\n        fill: var(--color-primary);\n      }\n      .seatmap [option][selected] {\n        outline: none;\n      }\n      .seatmap >  amp-selector {\n          left: 0;\n          right: 0;\n          margin: auto;\n      }\n      .seatmap  amp-selector .svg-container {\n        padding: 0 var(--space-3);\n      }\n    </style>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>\n    <noscript>\n      <style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style>\n    </noscript>\n\n  </head>\n  <body>\n    <!-- ## Seatmap state -->\n    <!-- Here we are using an `amp-state` called `selectedSeats` to keep a list of selected seat ids. -->\n    <amp-state id=\"selectedSeats\">\n      <script type=\"application/json\">\n         []\n      </script>\n    </amp-state>\n\n    <!-- ## Seatmap implementation -->\n    <!--\n    We combine `amp-list`, `amp-bind`, `amp-pan-zoom` and `amp-selector` to implement a seatmap:\n\n    * `amp-list` is used to keep the availability of the seatmap up to date.\n    * `amp-bind` is used to update the status of the seats: when a seat is selected we add the seat id to the `selectedSeats` variable.\n    * `amp-pan-zoom` is used to enable to pan & zoom on mobile devices.\n    * `amp-selector` is used to select seats and style selected seats\n    -->\n    <div>\n     <h1>Seat map</h1>\n     <div class=\"seatmap-container\">\n      <amp-list layout=\"fill\" src=\"/static/samples/json/seats.json\" binding=\"refresh\" items=\".\" single-item noloading>\n        <!--~\n        The seatmap with the availability of the seats is rendered via `amp-list` so that we make sure always the latest\n        data are available to the user.\n        ~-->\n        <template type=\"amp-mustache\">\n          <!--~\n            As we don't know the actual size of the seatmap, we are using `layout=fill` for `amp-list` and `amp-pan-zomm` to allow the seatmap to use all the available space in its container, which we set to 50% of the viewport height.\n            ~-->\n          <amp-pan-zoom layout=\"fill\" class=\"seatmap\">\n            <amp-selector multiple on=\"select:AMP.setState({\n                      selectedSeats: event.selectedOptions\n                    })\" layout=\"fill\">\n              <!--~\n              In order to add a space around the seatmap keeping it as `amp-pan-zoom` space you can wrap the svg into\n              a div and use padding.\n              ~-->\n              <div class=\"svg-container\">\n                <svg preserveAspectRatio=\"xMidYMin slice\" viewBox=\"0 0 {{width}} {{height}}\">\n                {{#seats}}\n                  <rect option=\"{{id}}\" role=\"button\" tabindex=\"0\" class=\"seat {{unavailable}}\" x=\"{{x}}\" y=\"{{y}}\" width=\"{{width}}\" height=\"{{height}}\" rx=\"{{rx}}\" ry=\"{{ry}}\"/>\n                {{/seats}}\n                </svg>\n              </div>\n            </amp-selector>\n          </amp-pan-zoom>\n        </template>\n        <!--~\n        To improve the loading experience, we'll show a seatmap skeleton without the actual seat availability.\n        The skeleton is rendered server-side as a `placeholder` element.\n        ~-->\n        <div placeholder>\n          <svg class=\"disabled\" viewBox=\"0 0 [= width =] [= height =]\" preserveAspectRatio=\"xMidYMin slice\">\n            [% for seat in seats %]\n            <rect role=\"button\" tabindex=\"0\" class=\"seat unavailable\" x=\"[= seat.x =]\" y=\"[= seat.y =]\" width=\"[= seat.width =]\" height=\"[= seat.height =]\" rx=\"[= seat.rx =]\" ry=\"[= seat.ry =]\"/>\n             [% endfor %]\n            </svg>\n          </div>\n      </amp-list>\n      </div>\n    </div>\n</body></html>","document":{"sections":[{"doc_":"## Introduction\n","code":"","preview":"","inBody":false,"id":0,"cachedMarkedDoc":"<h2 id=\"introduction\" class=\"www-heading pb4 mb2 relative h3\">Introduction</h2>","isLastSection":false,"isFirstSection":true,"commentOffset":0,"codeOffset":0,"headings":[{"id":"introduction","name":"Introduction"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Introduction\n"},{"doc_":"\nThis is a sample showing how to implement a seatmap that can be used for theaters, cinemas, airplanes and more.\nWe are showing how to pan & zoom on the seatmap to better select seats, how to keep the availability up to date and\nhow to dynamically select and unselect seats.\n\n","code":"","preview":"","inBody":false,"id":1,"cachedMarkedDoc":"<p class=\"mb2 px1\">This is a sample showing how to implement a seatmap that can be used for theaters, cinemas, airplanes and more.\nWe are showing how to pan &amp; zoom on the seatmap to better select seats, how to keep the availability up to date and\nhow to dynamically select and unselect seats.</p>","isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"\nThis is a sample showing how to implement a seatmap that can be used for theaters, cinemas, airplanes and more.\nWe are showing how to pan & zoom on the seatmap to better select seats, how to keep the availability up to date and\nhow to dynamically select and unselect seats.\n\n"},{"doc_":"\n","code":"<!doctype html>\n<html ⚡>\n<head>\n<meta charset=\"utf-8\">\n    <title>SeatMap</title>\n    <link rel=\"canonical\" href=\"http://localhost:8080/advanced/seatmap.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n","preview":"","inBody":false,"id":2,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" \n"},{"doc_":"## Setup\n","code":"","preview":"","inBody":false,"id":3,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"setup","name":"Setup"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Setup\n"},{"doc_":"\nAdditionally used AMP components must be imported in the header:\n`amp-pan-zoom` for making the seatmap zoomable and scrollable \n","code":"<script async custom-element=\"amp-pan-zoom\" src=\"https://cdn.ampproject.org/v0/amp-pan-zoom-0.1.js\"></script>\n","preview":"","inBody":false,"id":4,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":" Additionally used AMP components must be imported in the header:\n`amp-pan-zoom` for making the seatmap zoomable and scrollable \n"},{"doc_":"`amp-bind` for enabling seat selection \n","code":"<script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n","preview":"","inBody":false,"id":5,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-bind` for enabling seat selection \n"},{"doc_":"`amp-list` for showing a list of seats \n","code":"<script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n","preview":"","inBody":false,"id":6,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-list` for showing a list of seats \n"},{"doc_":"`amp-mustache` for rendering the `amp-list` content \n","code":"<script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n","preview":"","inBody":false,"id":7,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-mustache` for rendering the `amp-list` content \n"},{"doc_":"`amp-selector` for selecting seats on the seatmap \n","code":"<script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n","preview":"","inBody":false,"id":8,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"`amp-selector` for selecting seats on the seatmap \n"},{"doc_":"","code":"<style amp-custom>\n  :root {\n    --color-primary: #005AF0;\n    --color-secondary: #00DCC0;\n    --space-3: 1.5rem; /* 24px */\n    --space-4: 2rem;   /* 32px */\n  }\n  .seatmap-container {\n    position: relative;\n    height: 50vh;\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .seatmap-container [placeholder] svg {\n    height: 100%;\n  }\n  .seatmap-container .disabled {\n    pointer-events: none;\n    cursor: default;\n    opacity: 0.5;\n    filter: alpha(opacity=50);\n  }\n  .seatmap-container .seat {\n    stroke-width: 3;\n    stroke: rgb(0,0,0);\n    fill:white;\n  }\n  .seatmap-container .unavailable {\n    fill: var(--color-secondary);\n    pointer-events: none;\n  }\n  /* `amp-pan-zoom` has a default display: flex to center positioning the child.\n  In this sample we are going to use a seatmap placeholder and for correctly positioning it, we are overwriting the\n  `amp-pan-zoom` display to `initial` */\n  .seatmap {\n    align-items: flex-start;\n  }\n  .seatmap svg {\n    box-sizing: border-box;\n    padding-top: var(--space-4);\n  }\n  .seatmap svg rect[selected].seat {\n    fill: var(--color-primary);\n  }\n  .seatmap [option][selected] {\n    outline: none;\n  }\n  .seatmap >  amp-selector {\n      left: 0;\n      right: 0;\n      margin: auto;\n  }\n  .seatmap  amp-selector .svg-container {\n    padding: 0 var(--space-3);\n  }\n</style>\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>\n<noscript>\n  <style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style>\n</noscript>\n\n</head>\n<body>\n","preview":"","inBody":false,"id":9,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":4,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Seatmap state\n","code":"","preview":"","inBody":true,"id":10,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"seatmap-state","name":"Seatmap state"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Seatmap state\n"},{"doc_":"Here we are using an `amp-state` called `selectedSeats` to keep a list of selected seat ids. \n","code":"<amp-state id=\"selectedSeats\">\n  <script type=\"application/json\">\n    []\n  </script>\n</amp-state>\n","preview":"  <amp-state id=\"selectedSeats\">\n    <script type=\"application/json\">\n      []\n    </script>\n  </amp-state>\n","inBody":true,"id":11,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"Here we are using an `amp-state` called `selectedSeats` to keep a list of selected seat ids. \n"},{"doc_":"","code":"\n","preview":"\n","inBody":true,"id":12,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""},{"doc_":"## Seatmap implementation\n","code":"","preview":"","inBody":true,"id":13,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[{"id":"seatmap-implementation","name":"Seatmap implementation"}],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":"## Seatmap implementation\n"},{"doc_":"\nWe combine `amp-list`, `amp-bind`, `amp-pan-zoom` and `amp-selector` to implement a seatmap:\n\n* `amp-list` is used to keep the availability of the seatmap up to date.\n* `amp-bind` is used to update the status of the seats: when a seat is selected we add the seat id to the `selectedSeats` variable.\n* `amp-pan-zoom` is used to enable to pan & zoom on mobile devices.\n* `amp-selector` is used to select seats and style selected seats\n\n","code":"  <h1>Seat map</h1>\n  <div class=\"seatmap-container\">\n    <amp-list layout=\"fill\"\n      src=\"/static/samples/json/seats.json\"\n      binding=\"refresh\"\n      items=\".\"\n      single-item\n      noloading>\n<!--START_HINT_0-->\n      <template type=\"amp-mustache\">\n        <amp-pan-zoom layout=\"fill\"\n          class=\"seatmap\">\n          <amp-selector multiple\n            on=\"select:AMP.setState({\n                    selectedSeats: event.selectedOptions\n                  })\"\n            layout=\"fill\">\n            <div class=\"svg-container\">\n              <svg preserveAspectRatio=\"xMidYMin slice\"\n                viewBox=\"0 0 {{width}} {{height}}\">\n                {{#seats}}\n                  <rect option=\"{{id}}\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    class=\"seat {{unavailable}}\"\n                    x=\"{{x}}\"\n                    y=\"{{y}}\"\n                    width=\"{{width}}\"\n                    height=\"{{height}}\"\n                    rx=\"{{rx}}\"\n                    ry=\"{{ry}}\" />\n                {{/seats}}\n              </svg>\n            </div>\n<!--END_HINT-->\n          </amp-selector>\n        </amp-pan-zoom>\n      </template>\n<!--START_HINT_1-->\n      <div placeholder>\n        <svg class=\"disabled\"\n          viewBox=\"0 0 [= width =] [= height =]\"\n          preserveAspectRatio=\"xMidYMin slice\">\n          [% for seat in seats %]\n          <rect role=\"button\"\n            tabindex=\"0\"\n            class=\"seat unavailable\"\n            x=\"[= seat.x =]\"\n            y=\"[= seat.y =]\"\n            width=\"[= seat.width =]\"\n            height=\"[= seat.height =]\"\n            rx=\"[= seat.rx =]\"\n            ry=\"[= seat.ry =]\" />\n          [% endfor %]\n        </svg>\n      </div>\n<!--END_HINT-->\n    </amp-list>\n  </div>","preview":"  <div>\n    <h1>Seat map</h1>\n    <div class=\"seatmap-container\">\n      <amp-list layout=\"fill\"\n        src=\"/static/samples/json/seats.json\"\n        binding=\"refresh\"\n        items=\".\"\n        single-item\n        noloading>\n        <template type=\"amp-mustache\">\n          <amp-pan-zoom layout=\"fill\"\n            class=\"seatmap\">\n            <amp-selector multiple\n              on=\"select:AMP.setState({\n                      selectedSeats: event.selectedOptions\n                    })\"\n              layout=\"fill\">\n              <div class=\"svg-container\">\n                <svg preserveAspectRatio=\"xMidYMin slice\"\n                  viewBox=\"0 0 {{width}} {{height}}\">\n                  {{#seats}}\n                    <rect option=\"{{id}}\"\n                      role=\"button\"\n                      tabindex=\"0\"\n                      class=\"seat {{unavailable}}\"\n                      x=\"{{x}}\"\n                      y=\"{{y}}\"\n                      width=\"{{width}}\"\n                      height=\"{{height}}\"\n                      rx=\"{{rx}}\"\n                      ry=\"{{ry}}\" />\n                  {{/seats}}\n                </svg>\n              </div>\n            </amp-selector>\n          </amp-pan-zoom>\n        </template>\n        <div placeholder>\n          <svg class=\"disabled\"\n            viewBox=\"0 0 [= width =] [= height =]\"\n            preserveAspectRatio=\"xMidYMin slice\">\n            [% for seat in seats %]\n            <rect role=\"button\"\n              tabindex=\"0\"\n              class=\"seat unavailable\"\n              x=\"[= seat.x =]\"\n              y=\"[= seat.y =]\"\n              width=\"[= seat.width =]\"\n              height=\"[= seat.height =]\"\n              rx=\"[= seat.rx =]\"\n              ry=\"[= seat.ry =]\" />\n            [% endfor %]\n          </svg>\n        </div>\n      </amp-list>\n    </div>\n  </div>\n","inBody":true,"id":14,"cachedMarkedDoc":false,"isLastSection":false,"isFirstSection":false,"commentOffset":0,"codeOffset":2,"headings":[],"storyPageId":"","currentHint":"","hints":["The seatmap with the availability of the seats is rendered via `amp-list` so that we make sure always the latest data are available to the user. <!--~ As we don't know the actual size of the seatmap, we are using `layout=fill` for `amp-list` and `amp-pan-zomm` to allow the seatmap to use all the available space in its container, which we set to 50% of the viewport height. ~--> <!--~ In order to add a space around the seatmap keeping it as `amp-pan-zoom` space you can wrap the svg into a div and use padding. ~-->","To improve the loading experience, we'll show a seatmap skeleton without the actual seat availability. The skeleton is rendered server-side as a `placeholder` element."],"filters":null,"normalizedDoc_":"\nWe combine `amp-list`, `amp-bind`, `amp-pan-zoom` and `amp-selector` to implement a seatmap:\n\n* `amp-list` is used to keep the availability of the seatmap up to date.\n* `amp-bind` is used to update the status of the seats: when a seat is selected we add the seat id to the `selectedSeats` variable.\n* `amp-pan-zoom` is used to enable to pan & zoom on mobile devices.\n* `amp-selector` is used to select seats and style selected seats\n\n"},{"doc_":"","code":"</body>\n</html>\n","preview":"","inBody":false,"id":15,"cachedMarkedDoc":false,"isLastSection":true,"isFirstSection":false,"commentOffset":0,"codeOffset":0,"headings":[],"storyPageId":"","currentHint":"","hints":[],"filters":null,"normalizedDoc_":""}],"head":"<meta charset=\"utf-8\">\n    <title>SeatMap</title>\n    <link rel=\"canonical\" href=\"http://localhost:8080/advanced/seatmap.html\">\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\">\n    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n    <script async custom-element=\"amp-pan-zoom\" src=\"https://cdn.ampproject.org/v0/amp-pan-zoom-0.1.js\"></script>\n    <script async custom-element=\"amp-bind\" src=\"https://cdn.ampproject.org/v0/amp-bind-0.1.js\"></script>\n    <script async custom-element=\"amp-list\" src=\"https://cdn.ampproject.org/v0/amp-list-0.1.js\"></script>\n    <script async custom-template=\"amp-mustache\" src=\"https://cdn.ampproject.org/v0/amp-mustache-0.2.js\"></script>\n    <script async custom-element=\"amp-selector\" src=\"https://cdn.ampproject.org/v0/amp-selector-0.1.js\"></script>\n    <style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>\n    <noscript>\n      <style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style>\n    </noscript>\n\n","styles":"      :root {\n        --color-primary: #005AF0;\n        --color-secondary: #00DCC0;\n        --space-3: 1.5rem; /* 24px */\n        --space-4: 2rem;   /* 32px */\n      }\n      .seatmap-container {\n        position: relative;\n        height: 50vh;\n        min-width: 100%;\n        box-sizing: border-box;\n      }\n      .seatmap-container [placeholder] svg {\n        height: 100%;\n      }\n      .seatmap-container .disabled {\n        pointer-events: none;\n        cursor: default;\n        opacity: 0.5;\n        filter: alpha(opacity=50);\n      }\n      .seatmap-container .seat {\n        stroke-width: 3;\n        stroke: rgb(0,0,0);\n        fill:white;\n      }\n      .seatmap-container .unavailable {\n        fill: var(--color-secondary);\n        pointer-events: none;\n      }\n      /* `amp-pan-zoom` has a default display: flex to center positioning the child.\n      In this sample we are going to use a seatmap placeholder and for correctly positioning it, we are overwriting the\n      `amp-pan-zoom` display to `initial` */\n      .seatmap {\n        align-items: flex-start;\n      }\n      .seatmap svg {\n        box-sizing: border-box;\n        padding-top: var(--space-4);\n      }\n      .seatmap svg rect[selected].seat {\n        fill: var(--color-primary);\n      }\n      .seatmap [option][selected] {\n        outline: none;\n      }\n      .seatmap >  amp-selector {\n          left: 0;\n          right: 0;\n          margin: auto;\n      }\n      .seatmap  amp-selector .svg-container {\n        padding: 0 var(--space-3);\n      }\n","title":"SeatMap","metadata":{"preview":"default","teaserImage":"/static/samples/img/teaser/seatmap.jpg","author":"kul3r4"},"body":"<body>","elementsAfterBody":"","isAmpStory":false,"isAmpWeb":true,"isAmpAds":false,"isAmpEmail":false,"firstImage":"/favicons/android-chrome-256x256.png","lang":"en","_description":"This is a sample showing how to implement a seatmap that can be used for theaters, cinemas, airplanes and more."},"route":"/documentation/examples/interactivity-dynamic-content/seatmap/index.html"}